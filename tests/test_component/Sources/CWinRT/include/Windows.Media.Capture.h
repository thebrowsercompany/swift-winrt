// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Media.h"
#include "Windows.Media.Capture.Core.h"
#include "Windows.Media.Capture.Frames.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.Devices.h"
#include "Windows.Media.Effects.h"
#include "Windows.Media.MediaProperties.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2 __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture __x_ABI_CWindows_CMedia_CCapture_CIAppCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIMediaExtension __x_ABI_CWindows_CMedia_CIMediaExtension;

#endif // ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIVideoFrame __x_ABI_CWindows_CMedia_CIVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* asyncInfo,
        AsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** first,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_boolean __x_ABI_C__FIReference_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_boolean;

    typedef struct __x_ABI_C__FIReference_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_booleanVtbl;

    interface __x_ABI_C__FIReference_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_float __x_ABI_C__FIReference_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_float;

    typedef struct __x_ABI_C__FIReference_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_float* This,
        FLOAT* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_floatVtbl;

    interface __x_ABI_C__FIReference_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
        struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CAudioProcessing __x_ABI_CWindows_CMedia_CAudioProcessing;

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState;

typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

#if !defined(____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_GUID_IInspectable __x_ABI_C__FIMap_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory __x_ABI_CWindows_CMedia_CCapture_CMediaCategory;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation __x_ABI_CWindows_CMedia_CCapture_CVideoRotation;

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_HighestAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_VerySmallQvga = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_SmallVga = 2,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_MediumXga = 3,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_Large3M = 4,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_VeryLarge5M = 5,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_HighestAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_LowDefinition = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_StandardDefinition = 2,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_HighDefinition = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_PhotoOrVideo = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_Photo = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_Video = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_Jpeg = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_Png = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_JpegXR = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat_Mp4 = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat_Wmv = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile
    {
        __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoRecording = 0,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HighQualityPhoto = 1,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_BalancedVideoAndPhoto = 2,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoConferencing = 3,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_PhotoSequence = 4,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HighFrameRate = 5,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VariablePhotoSequence = 6,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HdrWithWcgVideo = 7,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HdrWithWcgPhoto = 8,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoHdr8 = 9,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus_ExclusiveControlAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus_SharedReadOnlyAvailable = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference_Auto = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference_Cpu = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode_ExclusiveControl = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode_SharedReadOnly = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus_Normal = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus_Overheated = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Other = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Communications = 1,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Media = 2,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_GameChat = 3,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Speech = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoPreview = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoRecord = 1,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Audio = 2,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Photo = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource
    {
        __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_Auto = 0,
    __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_VideoPreview = 1,
    __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_Photo = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency
    {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Disabled = 0,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_FiftyHertz = 1,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_SixtyHertz = 2,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Auto = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_AudioAndVideo = 0,
    __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_Audio = 1,
    __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_Video = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic
    {
        __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_AllStreamsIndependent = 0,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_PreviewRecordStreamsIdentical = 1,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_PreviewPhotoStreamsIdentical = 2,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_RecordPhotoStreamsIdentical = 3,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_AllStreamsIdentical = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation
    {
        __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_None = 0,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise90Degrees = 1,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise180Degrees = 2,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise270Degrees = 3,
};

struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain
    {
        DOUBLE R;
    DOUBLE G;
    DOUBLE B;
};

#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* errorEventArgs);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto2[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameBoundsRelativeToReferencePhoto)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedPhotoCapture[] = L"Windows.Media.Capture.IAdvancedPhotoCapture";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* CaptureWithContextAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        IInspectable* context,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* add_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCapture[] = L"Windows.Media.Capture.IAppCapture";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCapturingAudio)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCapturingVideo)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics[] = L"Windows.Media.Capture.IAppCaptureStatics";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics2[] = L"Windows.Media.Capture.IAppCaptureStatics2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetAllowedAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        boolean allowed,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUI[] = L"Windows.Media.Capture.ICameraCaptureUI";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PhotoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* CaptureFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode mode,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame[] = L"Windows.Media.Capture.ICapturedFrame";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame2[] = L"Windows.Media.Capture.ICapturedFrame2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ControlValues)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues** value);
    HRESULT (STDMETHODCALLTYPE* get_BitmapProperties)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues[] = L"Windows.Media.Capture.ICapturedFrameControlValues";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Exposure)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_ExposureCompensation)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoSpeed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_SceneMode)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode** value);
    HRESULT (STDMETHODCALLTYPE* get_Flashed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* get_FlashPowerPercent)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalance)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues2[] = L"Windows.Media.Capture.ICapturedFrameControlValues2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoDigitalGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoAnalogGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_SensorFrameRate)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalanceGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameWithSoftwareBitmap[] = L"Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SoftwareBitmap)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedPhoto[] = L"Windows.Media.Capture.ICapturedPhoto";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording[] = L"Windows.Media.Capture.ILowLagMediaRecording";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording2[] = L"Windows.Media.Capture.ILowLagMediaRecording2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PauseAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ResumeAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording3[] = L"Windows.Media.Capture.ILowLagMediaRecording3";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PauseWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoCapture[] = L"Windows.Media.Capture.ILowLagPhotoCapture";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoSequenceCapture[] = L"Windows.Media.Capture.ILowLagPhotoSequenceCapture";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* add_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture[] = L"Windows.Media.Capture.IMediaCapture";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InitializeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* InitializeWithSettingsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* mediaCaptureInitializationSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* AddEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        HSTRING effectActivationID,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* effectSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ClearEffectsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* SetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable* propertyValue);
    HRESULT (STDMETHODCALLTYPE* GetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* errorEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* recordLimitationExceededEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* get_MediaCaptureSettings)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);
    HRESULT (STDMETHODCALLTYPE* SetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture2[] = L"Windows.Media.Capture.IMediaCapture2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* SetEncodingPropertiesAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* mediaEncodingProperties,
        __x_ABI_C__FIMap_2_GUID_IInspectable* encoderProperties,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture3[] = L"Windows.Media.Capture.IMediaCapture3";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrepareVariablePhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* add_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture4[] = L"Windows.Media.Capture.IMediaCapture4";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddAudioEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition* definition,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* AddVideoEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition* definition,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* PauseRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ResumeRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* add_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_CameraStreamState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState* streamState);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameCopyAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame* destination,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* add_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_ThermalStatus)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus* value);
    HRESULT (STDMETHODCALLTYPE* PrepareAdvancedPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* encodingProperties,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture5[] = L"Windows.Media.Capture.IMediaCapture5";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RemoveEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension* effect,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* PauseRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** operation);
    HRESULT (STDMETHODCALLTYPE* get_FrameSources)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAndSizeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize outputSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture6[] = L"Windows.Media.Capture.IMediaCapture6";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateMultiSourceFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* inputSources,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFailedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFailedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Code)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFocusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings2[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings3[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings3";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings4[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings4";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings5[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings5";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode value);
    HRESULT (STDMETHODCALLTYPE* get_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference* value);
    HRESULT (STDMETHODCALLTYPE* put_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings6[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings6";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapturePauseResult[] = L"Windows.Media.Capture.IMediaCapturePauseResult";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings[] = L"Windows.Media.Capture.IMediaCaptureSettings";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceCharacteristic)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings2[] = L"Windows.Media.Capture.IMediaCaptureSettings2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraSoundRequiredForRegion)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Horizontal35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_PitchOffsetDegrees)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_Vertical35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings3[] = L"Windows.Media.Capture.IMediaCaptureSettings3";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Direct3D11Device)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStatics[] = L"Windows.Media.Capture.IMediaCaptureStatics";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsVideoProfileSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* FindAllVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindConcurrentProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindKnownVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile name,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStopResult[] = L"Windows.Media.Capture.IMediaCaptureStopResult";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoPreview[] = L"Windows.Media.Capture.IMediaCaptureVideoPreview";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedRecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* GetConcurrency)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameSourceInfos)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameRate)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVariablePhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHdrVideoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subtype)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IOptionalReferencePhotoCapturedEventArgs[] = L"Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoCapturedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoConfirmationCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IVideoStreamConfiguration[] = L"Windows.Media.Capture.IVideoStreamConfiguration";
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_OutputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__) */
    
