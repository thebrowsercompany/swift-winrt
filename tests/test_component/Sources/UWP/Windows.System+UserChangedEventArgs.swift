// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs)
public final class UserChangedEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUserChangedEventArgs
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUserChangedEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs.user)
    public var user : User! {
        get { try! _default.get_User() }
    }

    private lazy var _IUserChangedEventArgs2: __ABI_Windows_System.IUserChangedEventArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs.changedpropertykinds)
    public var changedPropertyKinds : WindowsFoundation.AnyIVectorView<UserWatcherUpdateKind>! {
        get { try! _IUserChangedEventArgs2.get_ChangedPropertyKinds() }
    }

    deinit {
        _default = nil
        _IUserChangedEventArgs2 = nil
    }
}

// MARK: - UserChangedEventArgs Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_System {
    public enum UserChangedEventArgsBridge: AbiBridge {
        public typealias SwiftProjection = UserChangedEventArgs
        public typealias CABI = __x_ABI_CWindows_CSystem_CIUserChangedEventArgs
        public static func from(abi: ComPtr<__x_ABI_CWindows_CSystem_CIUserChangedEventArgs>?) -> UserChangedEventArgs? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class UserChangedEventArgsMaker: MakeFromAbi {
    public typealias SwiftType = UserChangedEventArgs
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return UserChangedEventArgs(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_System {
    private static let IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs: WindowsFoundation.IID = .init(
        Data1: 0x086459DC, Data2: 0x18C6, Data3: 0x48DB, Data4: ( 0xBC,0x99,0x72,0x4F,0xB9,0x20,0x3C,0xCC ) // 086459DC-18C6-48DB-BC99-724FB9203CCC
    ) 

    public class IUserChangedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs }

        public func get_User() throws -> UWP.User? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserChangedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_User(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_System.UserBridge.from(abi: value)
        }

    }

    private static let IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2: WindowsFoundation.IID = .init(
        Data1: 0x6B2CCB44, Data2: 0x6F01, Data3: 0x560C, Data4: ( 0x97,0xAD,0xFC,0x7F,0x32,0xEC,0x58,0x1F ) // 6B2CCB44-6F01-560C-97AD-FC7F32EC581F
    ) 

    public class IUserChangedEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2 }

        public func get_ChangedPropertyKinds() throws -> WindowsFoundation.AnyIVectorView<UWP.UserWatcherUpdateKind>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ChangedPropertyKinds(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUserWatcherUpdateKindWrapper.unwrapFrom(abi: value)
        }

    }

}
