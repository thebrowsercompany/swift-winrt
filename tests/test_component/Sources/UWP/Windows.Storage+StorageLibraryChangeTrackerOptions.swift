// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import CUWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetrackeroptions)
public final class StorageLibraryChangeTrackerOptions : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Storage.IStorageLibraryChangeTrackerOptions
    private typealias CABI = __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _defaultFactory: WindowsFoundation.IActivationFactory = try! RoGetActivationFactory("Windows.Storage.StorageLibraryChangeTrackerOptions")
    override public init() {
        super.init(try! Self._defaultFactory.ActivateInstance())
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetrackeroptions.trackchangedetails)
    public var trackChangeDetails : Bool {
        get { try! _default.get_TrackChangeDetails() }
        set { try! _default.put_TrackChangeDetails(newValue) }
    }

    deinit {
        _default = nil
    }
}

// MARK: - StorageLibraryChangeTrackerOptions Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage {
    public enum StorageLibraryChangeTrackerOptionsBridge: AbiBridge {
        public typealias SwiftProjection = StorageLibraryChangeTrackerOptions
        public typealias CABI = __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions>?) -> StorageLibraryChangeTrackerOptions? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageLibraryChangeTrackerOptionsMaker: MakeFromAbi {
    public typealias SwiftType = StorageLibraryChangeTrackerOptions
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return StorageLibraryChangeTrackerOptions(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage {
    private static let IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions: WindowsFoundation.IID = .init(
        Data1: 0xBB52BCD4, Data2: 0x1A6D, Data3: 0x59C0, Data4: ( 0xAD,0x2A,0x82,0x3A,0x20,0x53,0x24,0x83 ) // BB52BCD4-1A6D-59C0-AD2A-823A20532483
    ) 

    public class IStorageLibraryChangeTrackerOptions: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions }

        public func get_TrackChangeDetails() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TrackChangeDetails(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_TrackChangeDetails(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TrackChangeDetails(pThis, .init(from: value)))
            }
        }

    }

}
