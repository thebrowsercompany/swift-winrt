// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri)
public final class Uri : WinRTClass, IStringable {
    private typealias SwiftABI = __ABI_Windows_Foundation.IUriRuntimeClass
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIUriRuntimeClass
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IUriEscapeStatics: __ABI_Windows_Foundation.IUriEscapeStatics = try! RoGetActivationFactory("Windows.Foundation.Uri")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.unescapecomponent)
    public static func unescapeComponent(_ toUnescape: String) throws -> String {
        return try _IUriEscapeStatics.UnescapeComponent(toUnescape)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.escapecomponent)
    public static func escapeComponent(_ toEscape: String) throws -> String {
        return try _IUriEscapeStatics.EscapeComponent(toEscape)
    }

    private static let _IUriRuntimeClassFactory: __ABI_Windows_Foundation.IUriRuntimeClassFactory = try! RoGetActivationFactory("Windows.Foundation.Uri")
    public init(_ uri: String) {
        super.init(try! Self._IUriRuntimeClassFactory.CreateUri(uri))
    }

    public init(_ baseUri: String, _ relativeUri: String) {
        super.init(try! Self._IUriRuntimeClassFactory.CreateWithRelativeUri(baseUri, relativeUri))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.equals)
    public func equals(_ pUri: Uri!) throws -> Bool {
        try _default.Equals(pUri)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.combineuri)
    public func combineUri(_ relativeUri: String) throws -> Uri! {
        try _default.CombineUri(relativeUri)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.absoluteuri)
    public var absoluteUri : String {
        get { try! _default.get_AbsoluteUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.displayuri)
    public var displayUri : String {
        get { try! _default.get_DisplayUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.domain)
    public var domain : String {
        get { try! _default.get_Domain() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.extension)
    public var `extension` : String {
        get { try! _default.get_Extension() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.fragment)
    public var fragment : String {
        get { try! _default.get_Fragment() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.host)
    public var host : String {
        get { try! _default.get_Host() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.password)
    public var password : String {
        get { try! _default.get_Password() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.path)
    public var path : String {
        get { try! _default.get_Path() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.port)
    public var port : Int32 {
        get { try! _default.get_Port() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.query)
    public var query : String {
        get { try! _default.get_Query() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.queryparsed)
    public var queryParsed : WwwFormUrlDecoder! {
        get { try! _default.get_QueryParsed() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.rawuri)
    public var rawUri : String {
        get { try! _default.get_RawUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.schemename)
    public var schemeName : String {
        get { try! _default.get_SchemeName() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.suspicious)
    public var suspicious : Bool {
        get { try! _default.get_Suspicious() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.username)
    public var userName : String {
        get { try! _default.get_UserName() }
    }

    private lazy var _IUriRuntimeClassWithAbsoluteCanonicalUri: __ABI_Windows_Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.absolutecanonicaluri)
    public var absoluteCanonicalUri : String {
        get { try! _IUriRuntimeClassWithAbsoluteCanonicalUri.get_AbsoluteCanonicalUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.displayiri)
    public var displayIri : String {
        get { try! _IUriRuntimeClassWithAbsoluteCanonicalUri.get_DisplayIri() }
    }

    private lazy var _IStringable: __ABI_Windows_Foundation.IStringable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.tostring)
    public func toString() throws -> String {
        try _IStringable.ToString()
    }

    deinit {
        _default = nil
        _IUriRuntimeClassWithAbsoluteCanonicalUri = nil
        _IStringable = nil
    }
}

// MARK: - Uri Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum UriBridge: AbiBridge {
        public typealias SwiftProjection = Uri
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIUriRuntimeClass
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIUriRuntimeClass>?) -> Uri? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class UriMaker: MakeFromAbi {
    public typealias SwiftType = Uri
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return Uri(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClass: WindowsFoundation.IID = .init(
        Data1: 0x9E365E57, Data2: 0x48B2, Data3: 0x4160, Data4: ( 0x95,0x6F,0xC7,0x38,0x51,0x20,0xBB,0xFC ) // 9E365E57-48B2-4160-956F-C7385120BBFC
    ) 

    public class IUriRuntimeClass: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClass }

        public func get_AbsoluteUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AbsoluteUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_DisplayUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Domain() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Domain(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Extension() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Extension(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Fragment() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fragment(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Host() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Host(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Password() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Password(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Path() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Path(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Query() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Query(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_QueryParsed() throws -> WindowsFoundation.WwwFormUrlDecoder? {
            let (ppWwwFormUrlDecoder) = try ComPtrs.initialize { ppWwwFormUrlDecoderAbi in
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_QueryParsed(pThis, &ppWwwFormUrlDecoderAbi))
                }
            }
            return __IMPL_Windows_Foundation.WwwFormUrlDecoderBridge.from(abi: ppWwwFormUrlDecoder)
        }

        public func get_RawUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RawUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_SchemeName() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SchemeName(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_UserName() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserName(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Port() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Port(pThis, &value))
            }
            return value
        }

        public func get_Suspicious() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Suspicious(pThis, &value))
            }
            return .init(from: value)
        }

        public func Equals(_ pUri: WindowsFoundation.Uri?) throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Equals(pThis, RawPointer(pUri), &value))
            }
            return .init(from: value)
        }

        public func CombineUri(_ relativeUri: String) throws -> WindowsFoundation.Uri? {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _relativeUri = try! HString(relativeUri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CombineUri(pThis, _relativeUri.get(), &instanceAbi))
                }
            }
            return __IMPL_Windows_Foundation.UriBridge.from(abi: instance)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri: WindowsFoundation.IID = .init(
        Data1: 0x758D9661, Data2: 0x221C, Data3: 0x480F, Data4: ( 0xA3,0x39,0x50,0x65,0x66,0x73,0xF4,0x6F ) // 758D9661-221C-480F-A339-50656673F46F
    ) 

    public class IUriRuntimeClassWithAbsoluteCanonicalUri: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri }

        public func get_AbsoluteCanonicalUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AbsoluteCanonicalUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_DisplayIri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayIri(pThis, &value))
            }
            return .init(from: value)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriEscapeStatics: WindowsFoundation.IID = .init(
        Data1: 0xC1D432BA, Data2: 0xC824, Data3: 0x4452, Data4: ( 0xA7,0xFD,0x51,0x2B,0xC3,0xBB,0xE9,0xA1 ) // C1D432BA-C824-4452-A7FD-512BC3BBE9A1
    ) 

    public class IUriEscapeStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CFoundation_CIUriEscapeStatics }

        public func UnescapeComponent(_ toUnescape: String) throws -> String {
            var value: HSTRING?
            let _toUnescape = try! HString(toUnescape)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriEscapeStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.UnescapeComponent(pThis, _toUnescape.get(), &value))
            }
            return .init(from: value)
        }

        public func EscapeComponent(_ toEscape: String) throws -> String {
            var value: HSTRING?
            let _toEscape = try! HString(toEscape)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriEscapeStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.EscapeComponent(pThis, _toEscape.get(), &value))
            }
            return .init(from: value)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory: WindowsFoundation.IID = .init(
        Data1: 0x44A9796F, Data2: 0x723E, Data3: 0x4FDF, Data4: ( 0xA2,0x18,0x03,0x3E,0x75,0xB0,0xC0,0x84 ) // 44A9796F-723E-4FDF-A218-033E75B0C084
    ) 

    public class IUriRuntimeClassFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory }

        public func CreateUri(_ uri: String) throws -> IUriRuntimeClass {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _uri = try! HString(uri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateUri(pThis, _uri.get(), &instanceAbi))
                }
            }
            return IUriRuntimeClass(instance!)
        }

        public func CreateWithRelativeUri(_ baseUri: String, _ relativeUri: String) throws -> IUriRuntimeClass {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _baseUri = try! HString(baseUri)
                let _relativeUri = try! HString(relativeUri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithRelativeUri(pThis, _baseUri.get(), _relativeUri.get(), &instanceAbi))
                }
            }
            return IUriRuntimeClass(instance!)
        }

    }

}
