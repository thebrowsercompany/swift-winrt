// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

open class UnsealedDerived : test_component.Base {
    private typealias SwiftABI = __ABI_test_component.IUnsealedDerived
    private typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout test_component.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_test_component.IUnsealedDerivedOverloads2Wrapper.IID:
                let wrapper = __ABI_test_component.IUnsealedDerivedOverloads2Wrapper(self)
                return wrapper!.queryInterface(iid)
            case __ABI_test_component.IUnsealedDerivedOverridesWrapper.IID:
                let wrapper = __ABI_test_component.IUnsealedDerivedOverridesWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return super.queryInterface(iid)
        }
    }
    private static var _IUnsealedDerivedFactory : __ABI_test_component.IUnsealedDerivedFactory =  try! RoGetActivationFactory("test_component.UnsealedDerived")

    override public init() {
        super.init(composing: __IMPL_test_component.UnsealedDerivedBridge.Composable.self) { baseInterface, innerInterface in 
            try! Self._IUnsealedDerivedFactory.CreateInstance(baseInterface, &innerInterface)
        }
    }

    public init(_ prop: Int32) {
        super.init(composing: __IMPL_test_component.UnsealedDerivedBridge.Composable.self) { baseInterface, innerInterface in 
            try! Self._IUnsealedDerivedFactory.CreateInstance2(prop, baseInterface, &innerInterface)
        }
    }

    public init(_ prop1: String, _ prop2: Base!) {
        super.init(composing: __IMPL_test_component.UnsealedDerivedBridge.Composable.self) { baseInterface, innerInterface in 
            try! Self._IUnsealedDerivedFactory.CreateInstance3(prop1, prop2, baseInterface, &innerInterface)
        }
    }

    public var prop : Int32 {
        get { try! _default.get_Prop() }
        set { try! _default.put_Prop(newValue) }
    }

    private lazy var _IUnsealedDerivedOverloads2: __ABI_test_component.IUnsealedDerivedOverloads2! = getInterfaceForCaching()
    open func onAfterDoTheThing() throws {
        try _IUnsealedDerivedOverloads2.OnAfterDoTheThing()
    }

    private lazy var _IUnsealedDerivedOverrides: __ABI_test_component.IUnsealedDerivedOverrides! = getInterfaceForCaching()
    open func onBeforeDoTheThing() throws {
        try _IUnsealedDerivedOverrides.OnBeforeDoTheThing()
    }

    deinit {
        _default = nil
        _IUnsealedDerivedOverloads2 = nil
        _IUnsealedDerivedOverrides = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_test_component {
    public enum UnsealedDerivedBridge: ComposableBridge {
        public typealias SwiftProjection = UnsealedDerived
        public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived
        public static func from(abi: ComPtr<__x_ABI_Ctest__component_CIUnsealedDerived>?) -> UnsealedDerived? {
            guard let abi = abi else { return nil }
            return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
        }
        public enum IUnsealedDerivedOverloads2 : ComposableImpl {
            public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerivedOverloads2
            public typealias SwiftABI = __ABI_test_component.IUnsealedDerivedOverloads2
            public typealias Class = UnsealedDerived
            public typealias SwiftProjection = WinRTClassWeakReference<Class>
            public enum Default : AbiInterface {
                public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived
                public typealias SwiftABI = __ABI_test_component.IUnsealedDerived
            }
        }
        @_spi(WinRTInternal)
        public typealias Composable = IUnsealedDerivedOverloads2
        public enum IUnsealedDerivedOverrides : ComposableImpl {
            public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerivedOverrides
            public typealias SwiftABI = __ABI_test_component.IUnsealedDerivedOverrides
            public typealias Class = UnsealedDerived
            public typealias SwiftProjection = WinRTClassWeakReference<Class>
            public enum Default : AbiInterface {
                public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived
                public typealias SwiftABI = __ABI_test_component.IUnsealedDerived
            }
        }
    }

}
@_spi(WinRTInternal)
public class UnsealedDerivedMaker: MakeFromAbi {
    public typealias SwiftType = UnsealedDerived
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return UnsealedDerived(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_test_component {
    internal typealias IUnsealedDerivedOverridesWrapper = UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerivedBridge.IUnsealedDerivedOverrides>
    internal static var IUnsealedDerivedOverridesVTable: __x_ABI_Ctest__component_CIUnsealedDerivedOverridesVtbl = .init(
        QueryInterface: { IUnsealedDerivedOverridesWrapper.queryInterface($0, $1, $2) },
        AddRef: { IUnsealedDerivedOverridesWrapper.addRef($0) },
        Release: { IUnsealedDerivedOverridesWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<test_component.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 4).assumingMemoryBound(to: test_component.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_test_component.IUnsealedDerivedOverridesWrapper.IID
            iids[3] = __ABI_test_component.IBaseOverridesWrapper.IID
            $1!.pointee = 4
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            guard let instance = IUnsealedDerivedOverridesWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let hstring = instance.GetRuntimeClassName().detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        OnBeforeDoTheThing: {
            do {
                guard let __unwrapped__instance = IUnsealedDerivedOverridesWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                try __unwrapped__instance.onBeforeDoTheThing()
                return S_OK
            } catch { return failWith(error: error) }
        }
    )
    internal typealias IUnsealedDerivedOverloads2Wrapper = UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerivedBridge.IUnsealedDerivedOverloads2>
    internal static var IUnsealedDerivedOverloads2VTable: __x_ABI_Ctest__component_CIUnsealedDerivedOverloads2Vtbl = .init(
        QueryInterface: { IUnsealedDerivedOverloads2Wrapper.queryInterface($0, $1, $2) },
        AddRef: { IUnsealedDerivedOverloads2Wrapper.addRef($0) },
        Release: { IUnsealedDerivedOverloads2Wrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<test_component.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 5).assumingMemoryBound(to: test_component.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_test_component.IUnsealedDerivedOverloads2Wrapper.IID
            iids[3] = __ABI_test_component.IBaseOverridesWrapper.IID
            iids[4] = __ABI_test_component.IUnsealedDerivedOverridesWrapper.IID
            $1!.pointee = 5
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            guard let instance = IUnsealedDerivedOverloads2Wrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let hstring = instance.GetRuntimeClassName().detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        OnAfterDoTheThing: {
            do {
                guard let __unwrapped__instance = IUnsealedDerivedOverloads2Wrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                try __unwrapped__instance.onAfterDoTheThing()
                return S_OK
            } catch { return failWith(error: error) }
        }
    )
    private static let IID___x_ABI_Ctest__component_CIUnsealedDerived: test_component.IID = .init(
        Data1: 0xB4FA333D, Data2: 0x9BCA, Data3: 0x592D, Data4: ( 0x9D,0xCB,0x18,0xAF,0x96,0xD7,0x6A,0x03 )
    ) // B4FA333D-9BCA-592D-9DCB-18AF96D76A03
    public class IUnsealedDerived: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerived }

        public func get_Prop() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerived.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Prop(pThis, &value))
            }
            return value
        }

        public func put_Prop(_ value: Int32) throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerived.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Prop(pThis, value))
            }
        }

    }

    private static let IID___x_ABI_Ctest__component_CIUnsealedDerivedOverloads2: test_component.IID = .init(
        Data1: 0xF4CE1AD9, Data2: 0x36B9, Data3: 0x5DC7, Data4: ( 0xA0,0x07,0x3A,0xCD,0xF4,0x22,0xE7,0x05 )
    ) // F4CE1AD9-36B9-5DC7-A007-3ACDF422E705
    public class IUnsealedDerivedOverloads2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerivedOverloads2 }

        public func OnAfterDoTheThing() throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerivedOverloads2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.OnAfterDoTheThing(pThis))
            }
        }

    }

    private static let IID___x_ABI_Ctest__component_CIUnsealedDerivedOverrides: test_component.IID = .init(
        Data1: 0x828DCEE6, Data2: 0xF93A, Data3: 0x5A4D, Data4: ( 0xBC,0xEE,0xF7,0xC1,0xDE,0xE4,0xEB,0x4E )
    ) // 828DCEE6-F93A-5A4D-BCEE-F7C1DEE4EB4E
    public class IUnsealedDerivedOverrides: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerivedOverrides }

        public func OnBeforeDoTheThing() throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerivedOverrides.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.OnBeforeDoTheThing(pThis))
            }
        }

    }

    private static let IID___x_ABI_Ctest__component_CIUnsealedDerivedFactory: test_component.IID = .init(
        Data1: 0xDAF846D2, Data2: 0x8988, Data3: 0x5EE1, Data4: ( 0xA8,0xAA,0x7E,0x81,0xC0,0xF8,0xA9,0xE9 )
    ) // DAF846D2-8988-5EE1-A8AA-7E81C0F8A9E9
    public class IUnsealedDerivedFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerivedFactory }

        public func CreateInstance(_ baseInterface: UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerivedBridge.Composable>?, _ innerInterface: inout test_component.IInspectable?) throws -> IUnsealedDerived {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerivedFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = test_component.IInspectable(_innerInterface!)
            }
            return IUnsealedDerived(value!)
        }

        public func CreateInstance2(_ prop: Int32, _ baseInterface: UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerivedBridge.Composable>?, _ innerInterface: inout test_component.IInspectable?) throws -> IUnsealedDerived {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerivedFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance2(pThis, prop, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = test_component.IInspectable(_innerInterface!)
            }
            return IUnsealedDerived(value!)
        }

        public func CreateInstance3(_ prop1: String, _ prop2: test_component.Base?, _ baseInterface: UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerivedBridge.Composable>?, _ innerInterface: inout test_component.IInspectable?) throws -> IUnsealedDerived {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _prop1 = try! HString(prop1)
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerivedFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance3(pThis, _prop1.get(), RawPointer(prop2), _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = test_component.IInspectable(_innerInterface!)
            }
            return IUnsealedDerived(value!)
        }

    }

}
@_spi(WinRTInternal)
extension ComposableImpl where CABI == __x_ABI_Ctest__component_CIUnsealedDerivedOverloads2 {
    public static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_test_component.IUnsealedDerivedOverloads2VTable) { $0 }
        return .init(lpVtbl: vtblPtr)
    }
}
@_spi(WinRTInternal)
extension ComposableImpl where CABI == __x_ABI_Ctest__component_CIUnsealedDerivedOverrides {
    public static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_test_component.IUnsealedDerivedOverridesVTable) { $0 }
        return .init(lpVtbl: vtblPtr)
    }
}
