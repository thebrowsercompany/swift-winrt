// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

// MARK: - BasicProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties)
public final class BasicProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IBasicProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.datemodified)
    public var dateModified : test_component.DateTime {
        get { try! _default.get_DateModified() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.itemdate)
    public var itemDate : test_component.DateTime {
        get { try! _default.get_ItemDate() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.size)
    public var size : UInt64 {
        get { try! _default.get_Size() }
    }

    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    deinit {
        _default = nil
        _IStorageItemExtraProperties = nil
    }
}

// MARK: - BasicProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum BasicPropertiesBridge: AbiBridge {
        public typealias SwiftProjection = BasicProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties>?) -> BasicProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class BasicPropertiesMaker: MakeFromAbi {
    public typealias SwiftType = BasicProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return BasicProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties: test_component.IID = .init(
        Data1: 0xD05D55DB, Data2: 0x785E, Data3: 0x4A66, Data4: ( 0xBE,0x02,0x9B,0xEE,0xC5,0x8A,0xEA,0x81 ) // D05D55DB-785E-4A66-BE02-9BEEC58AEA81
    ) 

    public class IBasicProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties }

        public func get_Size() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, &value))
            }
            return value
        }

        public func get_DateModified() throws -> test_component.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DateModified(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_ItemDate() throws -> test_component.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ItemDate(pThis, &value))
            }
            return .from(abi: value)
        }

    }

}
// MARK: - DocumentProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties)
public final class DocumentProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IDocumentProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.author)
    public var author : AnyIVector<String>! {
        get { try! _default.get_Author() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.comment)
    public var comment : String {
        get { try! _default.get_Comment() }
        set { try! _default.put_Comment(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_Keywords() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.title)
    public var title : String {
        get { try! _default.get_Title() }
        set { try! _default.put_Title(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

// MARK: - DocumentProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum DocumentPropertiesBridge: AbiBridge {
        public typealias SwiftProjection = DocumentProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties>?) -> DocumentProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class DocumentPropertiesMaker: MakeFromAbi {
    public typealias SwiftType = DocumentProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return DocumentProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties: test_component.IID = .init(
        Data1: 0x7EAB19BC, Data2: 0x1821, Data3: 0x4923, Data4: ( 0xB4,0xA9,0x0A,0xEA,0x40,0x4D,0x00,0x70 ) // 7EAB19BC-1821-4923-B4A9-0AEA404D0070
    ) 

    public class IDocumentProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties }

        public func get_Author() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Author(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Title() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Title(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        public func get_Keywords() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Comment() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Comment(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Comment(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Comment(pThis, _value.get()))
            }
        }

    }

}
// MARK: - ImageProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties)
public final class ImageProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IImageProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.cameramanufacturer)
    public var cameraManufacturer : String {
        get { try! _default.get_CameraManufacturer() }
        set { try! _default.put_CameraManufacturer(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.cameramodel)
    public var cameraModel : String {
        get { try! _default.get_CameraModel() }
        set { try! _default.put_CameraModel(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.datetaken)
    public var dateTaken : test_component.DateTime {
        get { try! _default.get_DateTaken() }
        set { try! _default.put_DateTaken(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.height)
    public var height : UInt32 {
        get { try! _default.get_Height() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_Keywords() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.latitude)
    public var latitude : Double? {
        get { try! _default.get_Latitude() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.longitude)
    public var longitude : Double? {
        get { try! _default.get_Longitude() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.orientation)
    public var orientation : PhotoOrientation {
        get { try! _default.get_Orientation() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.peoplenames)
    public var peopleNames : AnyIVectorView<String>! {
        get { try! _default.get_PeopleNames() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_Rating() }
        set { try! _default.put_Rating(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.title)
    public var title : String {
        get { try! _default.get_Title() }
        set { try! _default.put_Title(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.width)
    public var width : UInt32 {
        get { try! _default.get_Width() }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

// MARK: - ImageProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum ImagePropertiesBridge: AbiBridge {
        public typealias SwiftProjection = ImageProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties>?) -> ImageProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class ImagePropertiesMaker: MakeFromAbi {
    public typealias SwiftType = ImageProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return ImageProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties: test_component.IID = .init(
        Data1: 0x523C9424, Data2: 0xFCFF, Data3: 0x4275, Data4: ( 0xAF,0xEE,0xEC,0xDB,0x9A,0xB4,0x79,0x73 ) // 523C9424-FCFF-4275-AFEE-ECDB9AB47973
    ) 

    public class IImageProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties }

        public func get_Rating() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, &value))
            }
            return value
        }

        public func put_Rating(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
            }
        }

        public func get_Keywords() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_DateTaken() throws -> test_component.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DateTaken(pThis, &value))
            }
            return .from(abi: value)
        }

        public func put_DateTaken(_ value: test_component.DateTime) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DateTaken(pThis, .from(swift: value)))
            }
        }

        public func get_Width() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Width(pThis, &value))
            }
            return value
        }

        public func get_Height() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Height(pThis, &value))
            }
            return value
        }

        public func get_Title() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Title(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        public func get_Latitude() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Latitude(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        public func get_Longitude() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Longitude(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        public func get_CameraManufacturer() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CameraManufacturer(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_CameraManufacturer(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CameraManufacturer(pThis, _value.get()))
            }
        }

        public func get_CameraModel() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CameraModel(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_CameraModel(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CameraModel(pThis, _value.get()))
            }
        }

        public func get_Orientation() throws -> test_component.PhotoOrientation {
            var value: __x_ABI_CWindows_CStorage_CFileProperties_CPhotoOrientation = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orientation(pThis, &value))
            }
            return value
        }

        public func get_PeopleNames() throws -> test_component.AnyIVectorView<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PeopleNames(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVectorView_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

    }

}
// MARK: - MusicProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties)
public final class MusicProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IMusicProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.album)
    public var album : String {
        get { try! _default.get_Album() }
        set { try! _default.put_Album(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.albumartist)
    public var albumArtist : String {
        get { try! _default.get_AlbumArtist() }
        set { try! _default.put_AlbumArtist(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.artist)
    public var artist : String {
        get { try! _default.get_Artist() }
        set { try! _default.put_Artist(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.bitrate)
    public var bitrate : UInt32 {
        get { try! _default.get_Bitrate() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.composers)
    public var composers : AnyIVector<String>! {
        get { try! _default.get_Composers() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.conductors)
    public var conductors : AnyIVector<String>! {
        get { try! _default.get_Conductors() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.duration)
    public var duration : test_component.TimeSpan {
        get { try! _default.get_Duration() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.genre)
    public var genre : AnyIVector<String>! {
        get { try! _default.get_Genre() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.producers)
    public var producers : AnyIVector<String>! {
        get { try! _default.get_Producers() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.publisher)
    public var publisher : String {
        get { try! _default.get_Publisher() }
        set { try! _default.put_Publisher(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_Rating() }
        set { try! _default.put_Rating(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.subtitle)
    public var subtitle : String {
        get { try! _default.get_Subtitle() }
        set { try! _default.put_Subtitle(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.title)
    public var title : String {
        get { try! _default.get_Title() }
        set { try! _default.put_Title(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.tracknumber)
    public var trackNumber : UInt32 {
        get { try! _default.get_TrackNumber() }
        set { try! _default.put_TrackNumber(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.writers)
    public var writers : AnyIVector<String>! {
        get { try! _default.get_Writers() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.year)
    public var year : UInt32 {
        get { try! _default.get_Year() }
        set { try! _default.put_Year(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

// MARK: - MusicProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum MusicPropertiesBridge: AbiBridge {
        public typealias SwiftProjection = MusicProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties>?) -> MusicProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class MusicPropertiesMaker: MakeFromAbi {
    public typealias SwiftType = MusicProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return MusicProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties: test_component.IID = .init(
        Data1: 0xBC8AAB62, Data2: 0x66EC, Data3: 0x419A, Data4: ( 0xBC,0x5D,0xCA,0x65,0xA4,0xCB,0x46,0xDA ) // BC8AAB62-66EC-419A-BC5D-CA65A4CB46DA
    ) 

    public class IMusicProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties }

        public func get_Album() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Album(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Album(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Album(pThis, _value.get()))
            }
        }

        public func get_Artist() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Artist(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Artist(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Artist(pThis, _value.get()))
            }
        }

        public func get_Genre() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Genre(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_TrackNumber() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TrackNumber(pThis, &value))
            }
            return value
        }

        public func put_TrackNumber(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TrackNumber(pThis, value))
            }
        }

        public func get_Title() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Title(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        public func get_Rating() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, &value))
            }
            return value
        }

        public func put_Rating(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
            }
        }

        public func get_Duration() throws -> test_component.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Bitrate() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bitrate(pThis, &value))
            }
            return value
        }

        public func get_AlbumArtist() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AlbumArtist(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_AlbumArtist(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AlbumArtist(pThis, _value.get()))
            }
        }

        public func get_Composers() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Composers(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Conductors() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Conductors(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Subtitle() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Subtitle(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, _value.get()))
            }
        }

        public func get_Producers() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Producers(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Publisher() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Publisher(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Publisher(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Publisher(pThis, _value.get()))
            }
        }

        public func get_Writers() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Writers(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Year() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Year(pThis, &value))
            }
            return value
        }

        public func put_Year(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Year(pThis, value))
            }
        }

    }

}
// MARK: - StorageItemContentProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties)
public final class StorageItemContentProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IStorageItemContentProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getmusicpropertiesasync)
    public func getMusicPropertiesAsync() throws -> AnyIAsyncOperation<MusicProperties?>! {
        try _default.GetMusicPropertiesAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getvideopropertiesasync)
    public func getVideoPropertiesAsync() throws -> AnyIAsyncOperation<VideoProperties?>! {
        try _default.GetVideoPropertiesAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getimagepropertiesasync)
    public func getImagePropertiesAsync() throws -> AnyIAsyncOperation<ImageProperties?>! {
        try _default.GetImagePropertiesAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getdocumentpropertiesasync)
    public func getDocumentPropertiesAsync() throws -> AnyIAsyncOperation<DocumentProperties?>! {
        try _default.GetDocumentPropertiesAsync()
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

// MARK: - StorageItemContentProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum StorageItemContentPropertiesBridge: AbiBridge {
        public typealias SwiftProjection = StorageItemContentProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties>?) -> StorageItemContentProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageItemContentPropertiesMaker: MakeFromAbi {
    public typealias SwiftType = StorageItemContentProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StorageItemContentProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties: test_component.IID = .init(
        Data1: 0x05294BAD, Data2: 0xBC38, Data3: 0x48BF, Data4: ( 0x85,0xD7,0x77,0x0E,0x0E,0x2A,0xE0,0xBA ) // 05294BAD-BC38-48BF-85D7-770E0E2AE0BA
    ) 

    public class IStorageItemContentProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties }

        public func GetMusicPropertiesAsync() throws -> test_component.AnyIAsyncOperation<test_component.MusicProperties?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetMusicPropertiesAsync(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CMusicPropertiesWrapper.unwrapFrom(abi: operation)
        }

        public func GetVideoPropertiesAsync() throws -> test_component.AnyIAsyncOperation<test_component.VideoProperties?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetVideoPropertiesAsync(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CVideoPropertiesWrapper.unwrapFrom(abi: operation)
        }

        public func GetImagePropertiesAsync() throws -> test_component.AnyIAsyncOperation<test_component.ImageProperties?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetImagePropertiesAsync(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CImagePropertiesWrapper.unwrapFrom(abi: operation)
        }

        public func GetDocumentPropertiesAsync() throws -> test_component.AnyIAsyncOperation<test_component.DocumentProperties?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDocumentPropertiesAsync(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CDocumentPropertiesWrapper.unwrapFrom(abi: operation)
        }

    }

}
// MARK: - StorageItemThumbnail

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail)
public final class StorageItemThumbnail : WinRTClass, test_component.IClosable, test_component.IInputStream, test_component.IOutputStream, test_component.IRandomAccessStream, test_component.IContentTypeProvider, test_component.IRandomAccessStreamWithContentType {
    private typealias SwiftABI = __ABI_Windows_Storage_Streams.IRandomAccessStreamWithContentType
    private typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.close)
    public func close() throws {
        try _IClosable.Close()
    }

    private lazy var _IInputStream: __ABI_Windows_Storage_Streams.IInputStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.readasync)
    public func readAsync(_ buffer: test_component.AnyIBuffer!, _ count: UInt32, _ options: test_component.InputStreamOptions) throws -> AnyIAsyncOperationWithProgress<test_component.AnyIBuffer?, UInt32>! {
        try _IInputStream.ReadAsync(buffer, count, options)
    }

    private lazy var _IOutputStream: __ABI_Windows_Storage_Streams.IOutputStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.writeasync)
    public func writeAsync(_ buffer: test_component.AnyIBuffer!) throws -> AnyIAsyncOperationWithProgress<UInt32, UInt32>! {
        try _IOutputStream.WriteAsync(buffer)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.flushasync)
    public func flushAsync() throws -> AnyIAsyncOperation<Bool>! {
        try _IOutputStream.FlushAsync()
    }

    private lazy var _IRandomAccessStream: __ABI_Windows_Storage_Streams.IRandomAccessStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.getinputstreamat)
    public func getInputStreamAt(_ position: UInt64) throws -> test_component.AnyIInputStream! {
        try _IRandomAccessStream.GetInputStreamAt(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.getoutputstreamat)
    public func getOutputStreamAt(_ position: UInt64) throws -> test_component.AnyIOutputStream! {
        try _IRandomAccessStream.GetOutputStreamAt(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.seek)
    public func seek(_ position: UInt64) throws {
        try _IRandomAccessStream.Seek(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.clonestream)
    public func cloneStream() throws -> test_component.AnyIRandomAccessStream! {
        try _IRandomAccessStream.CloneStream()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.canread)
    public var canRead : Bool {
        get { try! _IRandomAccessStream.get_CanRead() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.canwrite)
    public var canWrite : Bool {
        get { try! _IRandomAccessStream.get_CanWrite() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.position)
    public var position : UInt64 {
        get { try! _IRandomAccessStream.get_Position() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.size)
    public var size : UInt64 {
        get { try! _IRandomAccessStream.get_Size() }
        set { try! _IRandomAccessStream.put_Size(newValue) }
    }

    private lazy var _IContentTypeProvider: __ABI_Windows_Storage_Streams.IContentTypeProvider! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.contenttype)
    public var contentType : String {
        get { try! _IContentTypeProvider.get_ContentType() }
    }

    private lazy var _IThumbnailProperties: __ABI_Windows_Storage_FileProperties.IThumbnailProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.originalheight)
    public var originalHeight : UInt32 {
        get { try! _IThumbnailProperties.get_OriginalHeight() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.originalwidth)
    public var originalWidth : UInt32 {
        get { try! _IThumbnailProperties.get_OriginalWidth() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.returnedsmallercachedsize)
    public var returnedSmallerCachedSize : Bool {
        get { try! _IThumbnailProperties.get_ReturnedSmallerCachedSize() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.type)
    public var type : ThumbnailType {
        get { try! _IThumbnailProperties.get_Type() }
    }

    deinit {
        _IClosable = nil
        _IInputStream = nil
        _IOutputStream = nil
        _IRandomAccessStream = nil
        _IContentTypeProvider = nil
        _default = nil
        _IThumbnailProperties = nil
    }
}

// MARK: - StorageItemThumbnail Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum StorageItemThumbnailBridge: AbiBridge {
        public typealias SwiftProjection = StorageItemThumbnail
        public typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>?) -> StorageItemThumbnail? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageItemThumbnailMaker: MakeFromAbi {
    public typealias SwiftType = StorageItemThumbnail
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StorageItemThumbnail(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties: test_component.IID = .init(
        Data1: 0x693DD42F, Data2: 0xDBE7, Data3: 0x49B5, Data4: ( 0xB3,0xB3,0x28,0x93,0xAC,0x5D,0x34,0x23 ) // 693DD42F-DBE7-49B5-B3B3-2893AC5D3423
    ) 

    public class IThumbnailProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties }

        public func get_OriginalWidth() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OriginalWidth(pThis, &value))
            }
            return value
        }

        public func get_OriginalHeight() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OriginalHeight(pThis, &value))
            }
            return value
        }

        public func get_ReturnedSmallerCachedSize() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ReturnedSmallerCachedSize(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Type() throws -> test_component.ThumbnailType {
            var value: __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Type(pThis, &value))
            }
            return value
        }

    }

}
// MARK: - VideoProperties

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties)
public final class VideoProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IVideoProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsync(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsync(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.bitrate)
    public var bitrate : UInt32 {
        get { try! _default.get_Bitrate() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.directors)
    public var directors : AnyIVector<String>! {
        get { try! _default.get_Directors() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.duration)
    public var duration : test_component.TimeSpan {
        get { try! _default.get_Duration() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.height)
    public var height : UInt32 {
        get { try! _default.get_Height() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_Keywords() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.latitude)
    public var latitude : Double? {
        get { try! _default.get_Latitude() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.longitude)
    public var longitude : Double? {
        get { try! _default.get_Longitude() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.orientation)
    public var orientation : VideoOrientation {
        get { try! _default.get_Orientation() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.producers)
    public var producers : AnyIVector<String>! {
        get { try! _default.get_Producers() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.publisher)
    public var publisher : String {
        get { try! _default.get_Publisher() }
        set { try! _default.put_Publisher(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_Rating() }
        set { try! _default.put_Rating(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.subtitle)
    public var subtitle : String {
        get { try! _default.get_Subtitle() }
        set { try! _default.put_Subtitle(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.title)
    public var title : String {
        get { try! _default.get_Title() }
        set { try! _default.put_Title(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.width)
    public var width : UInt32 {
        get { try! _default.get_Width() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.writers)
    public var writers : AnyIVector<String>! {
        get { try! _default.get_Writers() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.year)
    public var year : UInt32 {
        get { try! _default.get_Year() }
        set { try! _default.put_Year(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

// MARK: - VideoProperties Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_FileProperties {
    public enum VideoPropertiesBridge: AbiBridge {
        public typealias SwiftProjection = VideoProperties
        public typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties>?) -> VideoProperties? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class VideoPropertiesMaker: MakeFromAbi {
    public typealias SwiftType = VideoProperties
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return VideoProperties(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_FileProperties {
    private static let IID___x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties: test_component.IID = .init(
        Data1: 0x719AE507, Data2: 0x68DE, Data3: 0x4DB8, Data4: ( 0x97,0xDE,0x49,0x99,0x8C,0x05,0x9F,0x2F ) // 719AE507-68DE-4DB8-97DE-49998C059F2F
    ) 

    public class IVideoProperties: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties }

        public func get_Rating() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, &value))
            }
            return value
        }

        public func put_Rating(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
            }
        }

        public func get_Keywords() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Width() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Width(pThis, &value))
            }
            return value
        }

        public func get_Height() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Height(pThis, &value))
            }
            return value
        }

        public func get_Duration() throws -> test_component.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Latitude() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Latitude(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        public func get_Longitude() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Longitude(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        public func get_Title() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Title(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        public func get_Subtitle() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Subtitle(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, _value.get()))
            }
        }

        public func get_Producers() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Producers(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Publisher() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Publisher(pThis, &value))
            }
            return .init(from: value)
        }

        public func put_Publisher(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Publisher(pThis, _value.get()))
            }
        }

        public func get_Writers() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Writers(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Year() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Year(pThis, &value))
            }
            return value
        }

        public func put_Year(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Year(pThis, value))
            }
        }

        public func get_Bitrate() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bitrate(pThis, &value))
            }
            return value
        }

        public func get_Directors() throws -> test_component.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Directors(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        public func get_Orientation() throws -> test_component.VideoOrientation {
            var value: __x_ABI_CWindows_CStorage_CFileProperties_CVideoOrientation = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orientation(pThis, &value))
            }
            return value
        }

    }

}
