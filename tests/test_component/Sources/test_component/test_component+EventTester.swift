// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
import CUWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWindowsFoundation
import CWinRT

public final class EventTester : WinRTClass {
    private typealias SwiftABI = __ABI_test_component.IEventTester
    private typealias CABI = __x_ABI_Ctest__component_CIEventTester
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IEventTesterFactory: __ABI_test_component.IEventTesterFactory = try! RoGetActivationFactory("test_component.EventTester")
    public init(_ impl: AnyIIAmImplementable!) {
        super.init(try! Self._IEventTesterFactory.CreateInstance(impl))
    }

    public func subscribe() throws {
        try _default.Subscribe()
    }

    public func unsubscribe() throws {
        try _default.Unsubscribe()
    }

    public func getResult() throws -> String {
        try _default.GetResult()
    }

    public var count : Int32 {
        get { try! _default.get_Count() }
    }

    deinit {
        _default = nil
    }
}

// MARK: - EventTester Internals

@_spi(WinRTInternal)
extension __IMPL_test_component {
    public enum EventTesterBridge: AbiBridge {
        public typealias SwiftProjection = EventTester
        public typealias CABI = __x_ABI_Ctest__component_CIEventTester
        public static func from(abi: ComPtr<__x_ABI_Ctest__component_CIEventTester>?) -> EventTester? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class EventTesterMaker: MakeFromAbi {
    public typealias SwiftType = EventTester
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return EventTester(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_test_component {
    private static let IID___x_ABI_Ctest__component_CIEventTester: WindowsFoundation.IID = .init(
        Data1: 0xDD19BE65, Data2: 0x638D, Data3: 0x519A, Data4: ( 0x81,0xA9,0x73,0x3F,0xDB,0xD8,0x7A,0x17 ) // DD19BE65-638D-519A-81A9-733FDBD87A17
    ) 

    public class IEventTester: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_Ctest__component_CIEventTester }

        public func Subscribe() throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIEventTester.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Subscribe(pThis))
            }
        }

        public func Unsubscribe() throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIEventTester.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Unsubscribe(pThis))
            }
        }

        public func GetResult() throws -> String {
            var result: HSTRING?
            _ = try perform(as: __x_ABI_Ctest__component_CIEventTester.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetResult(pThis, &result))
            }
            return .init(from: result)
        }

        public func get_Count() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_Ctest__component_CIEventTester.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Count(pThis, &value))
            }
            return value
        }

    }

    private static let IID___x_ABI_Ctest__component_CIEventTesterFactory: WindowsFoundation.IID = .init(
        Data1: 0x9E6F50EC, Data2: 0x0F53, Data3: 0x5507, Data4: ( 0xB7,0x37,0x14,0x3B,0x1B,0xB3,0x53,0x65 ) // 9E6F50EC-0F53-5507-B737-143B1BB35365
    ) 

    public class IEventTesterFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_Ctest__component_CIEventTesterFactory }

        public func CreateInstance(_ impl: test_component.AnyIIAmImplementable?) throws -> IEventTester {
            let (value) = try ComPtrs.initialize { valueAbi in
                let implWrapper = __ABI_test_component.IIAmImplementableWrapper(impl)
                let _impl = try! implWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_Ctest__component_CIEventTesterFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _impl, &valueAbi))
                }
            }
            return IEventTester(value!)
        }

    }

}
