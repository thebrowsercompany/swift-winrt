// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

private var IID___x_ABI_CWindows_CSystem_CIUser: test_component.IID {
    .init(Data1: 0xDF9A26C6, Data2: 0xE746, Data3: 0x4BCD, Data4: ( 0xB5,0xD4,0x12,0x01,0x03,0xC4,0x20,0x9B ))// DF9A26C6-E746-4BCD-B5D4-120103C4209B
}

private var IID___x_ABI_CWindows_CSystem_CIUser2: test_component.IID {
    .init(Data1: 0x98BA5628, Data2: 0xA6E3, Data3: 0x518E, Data4: ( 0x89,0xD9,0xD3,0xB2,0xB1,0x99,0x1A,0x10 ))// 98BA5628-A6E3-518E-89D9-D3B2B1991A10
}

private var IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral: test_component.IID {
    .init(Data1: 0x88B59568, Data2: 0xBB30, Data3: 0x42FB, Data4: ( 0xA2,0x70,0xE9,0x90,0x2E,0x40,0xEF,0xA7 ))// 88B59568-BB30-42FB-A270-E9902E40EFA7
}

private var IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs: test_component.IID {
    .init(Data1: 0x8C030F28, Data2: 0xA711, Data3: 0x4C1E, Data4: ( 0xAB,0x48,0x04,0x17,0x9C,0x15,0x93,0x8F ))// 8C030F28-A711-4C1E-AB48-04179C15938F
}

private var IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs: test_component.IID {
    .init(Data1: 0x086459DC, Data2: 0x18C6, Data3: 0x48DB, Data4: ( 0xBC,0x99,0x72,0x4F,0xB9,0x20,0x3C,0xCC ))// 086459DC-18C6-48DB-BC99-724FB9203CCC
}

private var IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2: test_component.IID {
    .init(Data1: 0x6B2CCB44, Data2: 0x6F01, Data3: 0x560C, Data4: ( 0x97,0xAD,0xFC,0x7F,0x32,0xEC,0x58,0x1F ))// 6B2CCB44-6F01-560C-97AD-FC7F32EC581F
}

private var IID___x_ABI_CWindows_CSystem_CIUserStatics: test_component.IID {
    .init(Data1: 0x155EB23B, Data2: 0x242A, Data3: 0x45E0, Data4: ( 0xA2,0xE9,0x31,0x71,0xFC,0x6A,0x7F,0xDD ))// 155EB23B-242A-45E0-A2E9-3171FC6A7FDD
}

private var IID___x_ABI_CWindows_CSystem_CIUserStatics2: test_component.IID {
    .init(Data1: 0x74A37E11, Data2: 0x2EB5, Data3: 0x4487, Data4: ( 0xB0,0xD5,0x2C,0x67,0x90,0xE0,0x13,0xE9 ))// 74A37E11-2EB5-4487-B0D5-2C6790E013E9
}

private var IID___x_ABI_CWindows_CSystem_CIUserWatcher: test_component.IID {
    .init(Data1: 0x155EB23B, Data2: 0x242A, Data3: 0x45E0, Data4: ( 0xA2,0xE9,0x31,0x71,0xFC,0x6A,0x7F,0xBB ))// 155EB23B-242A-45E0-A2E9-3171FC6A7FBB
}

@_spi(WinRTInternal)
public enum __ABI_Windows_System {
    public class IUser: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUser }

        public func get_NonRoamableId() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NonRoamableId(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_AuthenticationStatus() throws -> test_component.UserAuthenticationStatus {
            var value: __x_ABI_CWindows_CSystem_CUserAuthenticationStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AuthenticationStatus(pThis, &value))
            }
            return value
        }

        public func get_Type() throws -> test_component.UserType {
            var value: __x_ABI_CWindows_CSystem_CUserType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Type(pThis, &value))
            }
            return value
        }

        public func GetPropertyAsync(_ value: String) throws -> test_component.AnyIAsyncOperation<Any?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let _value = try! HString(value)
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetPropertyAsync(pThis, _value.get(), &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1_IInspectableWrapper.unwrapFrom(abi: operation)
        }

        public func GetPropertiesAsync(_ values: test_component.AnyIVectorView<String>?) throws -> test_component.AnyIAsyncOperation<test_component.AnyIPropertySet?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let valuesWrapper = test_component.__x_ABI_C__FIVectorView_1_HSTRINGWrapper(values)
                let _values = try! valuesWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetPropertiesAsync(pThis, _values, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__F__CIPropertySetWrapper.unwrapFrom(abi: operation)
        }

        public func GetPictureAsync(_ desiredSize: test_component.UserPictureSize) throws -> test_component.AnyIAsyncOperation<test_component.AnyIRandomAccessStreamReference?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetPictureAsync(pThis, desiredSize, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamReferenceWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IUser2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUser2 }

        public func CheckUserAgeConsentGroupAsync(_ consentGroup: test_component.UserAgeConsentGroup) throws -> test_component.AnyIAsyncOperation<test_component.UserAgeConsentResult>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUser2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CheckUserAgeConsentGroupAsync(pThis, consentGroup, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CUserAgeConsentResultWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IUserAuthenticationStatusChangeDeferral: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral }

        public func Complete() throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Complete(pThis))
            }
        }

    }

    public class IUserAuthenticationStatusChangingEventArgs: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs }

        public func GetDeferral() throws -> test_component.UserAuthenticationStatusChangeDeferral? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &resultAbi))
                }
            }
            return __IMPL_Windows_System.UserAuthenticationStatusChangeDeferralBridge.from(abi: result)
        }

        public func get_User() throws -> test_component.User? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_User(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_System.UserBridge.from(abi: value)
        }

        public func get_NewStatus() throws -> test_component.UserAuthenticationStatus {
            var value: __x_ABI_CWindows_CSystem_CUserAuthenticationStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewStatus(pThis, &value))
            }
            return value
        }

        public func get_CurrentStatus() throws -> test_component.UserAuthenticationStatus {
            var value: __x_ABI_CWindows_CSystem_CUserAuthenticationStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CurrentStatus(pThis, &value))
            }
            return value
        }

    }

    public class IUserChangedEventArgs: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs }

        public func get_User() throws -> test_component.User? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserChangedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_User(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_System.UserBridge.from(abi: value)
        }

    }

    public class IUserChangedEventArgs2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2 }

        public func get_ChangedPropertyKinds() throws -> test_component.AnyIVectorView<test_component.UserWatcherUpdateKind>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ChangedPropertyKinds(pThis, &valueAbi))
                }
            }
            return test_component.__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUserWatcherUpdateKindWrapper.unwrapFrom(abi: value)
        }

    }

    public class IUserStatics: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserStatics }

        public func CreateWatcher() throws -> test_component.UserWatcher? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWatcher(pThis, &resultAbi))
                }
            }
            return __IMPL_Windows_System.UserWatcherBridge.from(abi: result)
        }

        public func FindAllAsync() throws -> test_component.AnyIAsyncOperation<test_component.AnyIVectorView<test_component.User?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.FindAllAsync(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUserWrapper.unwrapFrom(abi: operation)
        }

        public func FindAllAsyncByType(_ type: test_component.UserType) throws -> test_component.AnyIAsyncOperation<test_component.AnyIVectorView<test_component.User?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.FindAllAsyncByType(pThis, type, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUserWrapper.unwrapFrom(abi: operation)
        }

        public func FindAllAsyncByTypeAndStatus(_ type: test_component.UserType, _ status: test_component.UserAuthenticationStatus) throws -> test_component.AnyIAsyncOperation<test_component.AnyIVectorView<test_component.User?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.FindAllAsyncByTypeAndStatus(pThis, type, status, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUserWrapper.unwrapFrom(abi: operation)
        }

        public func GetFromId(_ nonRoamableId: String) throws -> test_component.User? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _nonRoamableId = try! HString(nonRoamableId)
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetFromId(pThis, _nonRoamableId.get(), &resultAbi))
                }
            }
            return __IMPL_Windows_System.UserBridge.from(abi: result)
        }

    }

    public class IUserStatics2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserStatics2 }

        public func GetDefault() throws -> test_component.User? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserStatics2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDefault(pThis, &resultAbi))
                }
            }
            return __IMPL_Windows_System.UserBridge.from(abi: result)
        }

    }

    public class IUserWatcher: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CSystem_CIUserWatcher }

        public func get_Status() throws -> test_component.UserWatcherStatus {
            var value: __x_ABI_CWindows_CSystem_CUserWatcherStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Status(pThis, &value))
            }
            return value
        }

        public func Start() throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Start(pThis))
            }
        }

        public func Stop() throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Stop(pThis))
            }
        }

        public func add_Added(_ handler: TypedEventHandler<test_component.UserWatcher?, test_component.UserChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher___x_ABI_CWindows__CSystem__CUserChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Added(pThis, _handler, &token))
            }
            return token
        }

        public func remove_Added(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Added(pThis, token))
            }
        }

        public func add_Removed(_ handler: TypedEventHandler<test_component.UserWatcher?, test_component.UserChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher___x_ABI_CWindows__CSystem__CUserChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Removed(pThis, _handler, &token))
            }
            return token
        }

        public func remove_Removed(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Removed(pThis, token))
            }
        }

        public func add_Updated(_ handler: TypedEventHandler<test_component.UserWatcher?, test_component.UserChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher___x_ABI_CWindows__CSystem__CUserChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Updated(pThis, _handler, &token))
            }
            return token
        }

        public func remove_Updated(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Updated(pThis, token))
            }
        }

        public func add_AuthenticationStatusChanged(_ handler: TypedEventHandler<test_component.UserWatcher?, test_component.UserChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher___x_ABI_CWindows__CSystem__CUserChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_AuthenticationStatusChanged(pThis, _handler, &token))
            }
            return token
        }

        public func remove_AuthenticationStatusChanged(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_AuthenticationStatusChanged(pThis, token))
            }
        }

        public func add_AuthenticationStatusChanging(_ handler: TypedEventHandler<test_component.UserWatcher?, test_component.UserAuthenticationStatusChangingEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher___x_ABI_CWindows__CSystem__CUserAuthenticationStatusChangingEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_AuthenticationStatusChanging(pThis, _handler, &token))
            }
            return token
        }

        public func remove_AuthenticationStatusChanging(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_AuthenticationStatusChanging(pThis, token))
            }
        }

        public func add_EnumerationCompleted(_ handler: TypedEventHandler<test_component.UserWatcher?, Any?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_EnumerationCompleted(pThis, _handler, &token))
            }
            return token
        }

        public func remove_EnumerationCompleted(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_EnumerationCompleted(pThis, token))
            }
        }

        public func add_Stopped(_ handler: TypedEventHandler<test_component.UserWatcher?, Any?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = test_component.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CUserWatcher_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Stopped(pThis, _handler, &token))
            }
            return token
        }

        public func remove_Stopped(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CSystem_CIUserWatcher.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Stopped(pThis, token))
            }
        }

    }

}
