// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userageconsentgroup)
public typealias UserAgeConsentGroup = __x_ABI_CWindows_CSystem_CUserAgeConsentGroup
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userageconsentresult)
public typealias UserAgeConsentResult = __x_ABI_CWindows_CSystem_CUserAgeConsentResult
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatus)
public typealias UserAuthenticationStatus = __x_ABI_CWindows_CSystem_CUserAuthenticationStatus
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userpicturesize)
public typealias UserPictureSize = __x_ABI_CWindows_CSystem_CUserPictureSize
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.usertype)
public typealias UserType = __x_ABI_CWindows_CSystem_CUserType
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcherstatus)
public typealias UserWatcherStatus = __x_ABI_CWindows_CSystem_CUserWatcherStatus
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcherupdatekind)
public typealias UserWatcherUpdateKind = __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user)
public final class User : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUser
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUser
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IUserStatics: __ABI_Windows_System.IUserStatics = try! RoGetActivationFactory("Windows.System.User")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.createwatcher)
    public static func createWatcher() throws -> UserWatcher! {
        return try _IUserStatics.CreateWatcher()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.findallasync)
    public static func findAllAsync() throws -> AnyIAsyncOperation<AnyIVectorView<User?>?>! {
        return try _IUserStatics.FindAllAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.findallasync)
    public static func findAllAsync(_ type: UserType) throws -> AnyIAsyncOperation<AnyIVectorView<User?>?>! {
        return try _IUserStatics.FindAllAsyncByType(type)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.findallasync)
    public static func findAllAsync(_ type: UserType, _ status: UserAuthenticationStatus) throws -> AnyIAsyncOperation<AnyIVectorView<User?>?>! {
        return try _IUserStatics.FindAllAsyncByTypeAndStatus(type, status)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.getfromid)
    public static func getFromId(_ nonRoamableId: String) throws -> User! {
        return try _IUserStatics.GetFromId(nonRoamableId)
    }

    private static let _IUserStatics2: __ABI_Windows_System.IUserStatics2 = try! RoGetActivationFactory("Windows.System.User")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.getdefault)
    public static func getDefault() throws -> User! {
        return try _IUserStatics2.GetDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.getpropertyasync)
    public func getPropertyAsync(_ value: String) throws -> AnyIAsyncOperation<Any?>! {
        try _default.GetPropertyAsync(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.getpropertiesasync)
    public func getPropertiesAsync(_ values: AnyIVectorView<String>!) throws -> AnyIAsyncOperation<test_component.AnyIPropertySet?>! {
        try _default.GetPropertiesAsync(values)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.getpictureasync)
    public func getPictureAsync(_ desiredSize: UserPictureSize) throws -> AnyIAsyncOperation<test_component.AnyIRandomAccessStreamReference?>! {
        try _default.GetPictureAsync(desiredSize)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.authenticationstatus)
    public var authenticationStatus : UserAuthenticationStatus {
        get { try! _default.get_AuthenticationStatus() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.nonroamableid)
    public var nonRoamableId : String {
        get { try! _default.get_NonRoamableId() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.type)
    public var type : UserType {
        get { try! _default.get_Type() }
    }

    private lazy var _IUser2: __ABI_Windows_System.IUser2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.user.checkuserageconsentgroupasync)
    public func checkUserAgeConsentGroupAsync(_ consentGroup: UserAgeConsentGroup) throws -> AnyIAsyncOperation<UserAgeConsentResult>! {
        try _IUser2.CheckUserAgeConsentGroupAsync(consentGroup)
    }

    deinit {
        _default = nil
        _IUser2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangedeferral)
public final class UserAuthenticationStatusChangeDeferral : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUserAuthenticationStatusChangeDeferral
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangedeferral.complete)
    public func complete() throws {
        try _default.Complete()
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangingeventargs)
public final class UserAuthenticationStatusChangingEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUserAuthenticationStatusChangingEventArgs
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangingeventargs.getdeferral)
    public func getDeferral() throws -> UserAuthenticationStatusChangeDeferral! {
        try _default.GetDeferral()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangingeventargs.currentstatus)
    public var currentStatus : UserAuthenticationStatus {
        get { try! _default.get_CurrentStatus() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangingeventargs.newstatus)
    public var newStatus : UserAuthenticationStatus {
        get { try! _default.get_NewStatus() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userauthenticationstatuschangingeventargs.user)
    public var user : User! {
        get { try! _default.get_User() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs)
public final class UserChangedEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUserChangedEventArgs
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUserChangedEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs.user)
    public var user : User! {
        get { try! _default.get_User() }
    }

    private lazy var _IUserChangedEventArgs2: __ABI_Windows_System.IUserChangedEventArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userchangedeventargs.changedpropertykinds)
    public var changedPropertyKinds : AnyIVectorView<UserWatcherUpdateKind>! {
        get { try! _IUserChangedEventArgs2.get_ChangedPropertyKinds() }
    }

    deinit {
        _default = nil
        _IUserChangedEventArgs2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher)
public final class UserWatcher : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_System.IUserWatcher
    private typealias CABI = __x_ABI_CWindows_CSystem_CIUserWatcher
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.start)
    public func start() throws {
        try _default.Start()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.stop)
    public func stop() throws {
        try _default.Stop()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.status)
    public var status : UserWatcherStatus {
        get { try! _default.get_Status() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.added)
    public lazy var added : Event<TypedEventHandler<UserWatcher?, UserChangedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_Added($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_Added($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.authenticationstatuschanged)
    public lazy var authenticationStatusChanged : Event<TypedEventHandler<UserWatcher?, UserChangedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_AuthenticationStatusChanged($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_AuthenticationStatusChanged($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.authenticationstatuschanging)
    public lazy var authenticationStatusChanging : Event<TypedEventHandler<UserWatcher?, UserAuthenticationStatusChangingEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_AuthenticationStatusChanging($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_AuthenticationStatusChanging($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.enumerationcompleted)
    public lazy var enumerationCompleted : Event<TypedEventHandler<UserWatcher?, Any?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_EnumerationCompleted($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_EnumerationCompleted($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.removed)
    public lazy var removed : Event<TypedEventHandler<UserWatcher?, UserChangedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_Removed($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_Removed($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.stopped)
    public lazy var stopped : Event<TypedEventHandler<UserWatcher?, Any?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_Stopped($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_Stopped($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.system.userwatcher.updated)
    public lazy var updated : Event<TypedEventHandler<UserWatcher?, UserChangedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_Updated($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_Updated($0)
       }
      )
    }()

    deinit {
        _default = nil
    }
}

extension test_component.UserAgeConsentGroup {
    public static var child : test_component.UserAgeConsentGroup {
        __x_ABI_CWindows_CSystem_CUserAgeConsentGroup_Child
    }
    public static var minor : test_component.UserAgeConsentGroup {
        __x_ABI_CWindows_CSystem_CUserAgeConsentGroup_Minor
    }
    public static var adult : test_component.UserAgeConsentGroup {
        __x_ABI_CWindows_CSystem_CUserAgeConsentGroup_Adult
    }
}
extension test_component.UserAgeConsentGroup: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserAgeConsentResult {
    public static var notEnforced : test_component.UserAgeConsentResult {
        __x_ABI_CWindows_CSystem_CUserAgeConsentResult_NotEnforced
    }
    public static var included : test_component.UserAgeConsentResult {
        __x_ABI_CWindows_CSystem_CUserAgeConsentResult_Included
    }
    public static var notIncluded : test_component.UserAgeConsentResult {
        __x_ABI_CWindows_CSystem_CUserAgeConsentResult_NotIncluded
    }
    public static var unknown : test_component.UserAgeConsentResult {
        __x_ABI_CWindows_CSystem_CUserAgeConsentResult_Unknown
    }
    public static var ambiguous : test_component.UserAgeConsentResult {
        __x_ABI_CWindows_CSystem_CUserAgeConsentResult_Ambiguous
    }
}
extension test_component.UserAgeConsentResult: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserAuthenticationStatus {
    public static var unauthenticated : test_component.UserAuthenticationStatus {
        __x_ABI_CWindows_CSystem_CUserAuthenticationStatus_Unauthenticated
    }
    public static var locallyAuthenticated : test_component.UserAuthenticationStatus {
        __x_ABI_CWindows_CSystem_CUserAuthenticationStatus_LocallyAuthenticated
    }
    public static var remotelyAuthenticated : test_component.UserAuthenticationStatus {
        __x_ABI_CWindows_CSystem_CUserAuthenticationStatus_RemotelyAuthenticated
    }
}
extension test_component.UserAuthenticationStatus: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserPictureSize {
    public static var size64x64 : test_component.UserPictureSize {
        __x_ABI_CWindows_CSystem_CUserPictureSize_Size64x64
    }
    public static var size208x208 : test_component.UserPictureSize {
        __x_ABI_CWindows_CSystem_CUserPictureSize_Size208x208
    }
    public static var size424x424 : test_component.UserPictureSize {
        __x_ABI_CWindows_CSystem_CUserPictureSize_Size424x424
    }
    public static var size1080x1080 : test_component.UserPictureSize {
        __x_ABI_CWindows_CSystem_CUserPictureSize_Size1080x1080
    }
}
extension test_component.UserPictureSize: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserType {
    public static var localUser : test_component.UserType {
        __x_ABI_CWindows_CSystem_CUserType_LocalUser
    }
    public static var remoteUser : test_component.UserType {
        __x_ABI_CWindows_CSystem_CUserType_RemoteUser
    }
    public static var localGuest : test_component.UserType {
        __x_ABI_CWindows_CSystem_CUserType_LocalGuest
    }
    public static var remoteGuest : test_component.UserType {
        __x_ABI_CWindows_CSystem_CUserType_RemoteGuest
    }
    public static var systemManaged : test_component.UserType {
        __x_ABI_CWindows_CSystem_CUserType_SystemManaged
    }
}
extension test_component.UserType: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserWatcherStatus {
    public static var created : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_Created
    }
    public static var started : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_Started
    }
    public static var enumerationCompleted : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_EnumerationCompleted
    }
    public static var stopping : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_Stopping
    }
    public static var stopped : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_Stopped
    }
    public static var aborted : test_component.UserWatcherStatus {
        __x_ABI_CWindows_CSystem_CUserWatcherStatus_Aborted
    }
}
extension test_component.UserWatcherStatus: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension test_component.UserWatcherUpdateKind {
    public static var properties : test_component.UserWatcherUpdateKind {
        __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind_Properties
    }
    public static var picture : test_component.UserWatcherUpdateKind {
        __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind_Picture
    }
}
extension test_component.UserWatcherUpdateKind: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

