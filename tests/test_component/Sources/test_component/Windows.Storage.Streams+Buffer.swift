// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streams.buffer)
public final class Buffer : WinRTClass, IBufferByteAccess, IBuffer {
    private typealias SwiftABI = __ABI_Windows_Storage_Streams.IBuffer
    private typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIBuffer
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IBufferFactory: __ABI_Windows_Storage_Streams.IBufferFactory = try! RoGetActivationFactory("Windows.Storage.Streams.Buffer")
    public init(_ capacity: UInt32) {
        super.init(try! Self._IBufferFactory.Create(capacity))
    }

    private static let _IBufferStatics: __ABI_Windows_Storage_Streams.IBufferStatics = try! RoGetActivationFactory("Windows.Storage.Streams.Buffer")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streams.buffer.createcopyfrommemorybuffer)
    public static func createCopyFromMemoryBuffer(_ input: test_component.AnyIMemoryBuffer!) throws -> Buffer! {
        return try _IBufferStatics.CreateCopyFromMemoryBuffer(input)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streams.buffer.creatememorybufferoveribuffer)
    public static func createMemoryBufferOverIBuffer(_ input: AnyIBuffer!) throws -> test_component.MemoryBuffer! {
        return try _IBufferStatics.CreateMemoryBufferOverIBuffer(input)
    }

    private lazy var _IBufferByteAccess: __ABI_.IBufferByteAccess! = getInterfaceForCaching()
    public var buffer: UnsafeMutablePointer<UInt8>? {
        get throws {
            let bufferByteAccess: test_component.__ABI_.IBufferByteAccess = try _IBufferByteAccess.QueryInterface()
            return try bufferByteAccess.Buffer()
        }
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streams.buffer.capacity)
    public var capacity : UInt32 {
        get { try! _default.get_Capacity() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streams.buffer.length)
    public var length : UInt32 {
        get { try! _default.get_Length() }
        set { try! _default.put_Length(newValue) }
    }

    deinit {
        _IBufferByteAccess = nil
        _default = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_Streams {
    public enum BufferBridge: AbiBridge {
        public typealias SwiftProjection = Buffer
        public typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIBuffer
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CStreams_CIBuffer>?) -> Buffer? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class BufferMaker: MakeFromAbi {
    public typealias SwiftType = Buffer
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return Buffer(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_Streams {
    private static let IID___x_ABI_CWindows_CStorage_CStreams_CIBufferFactory: test_component.IID = .init(
        Data1: 0x71AF914D, Data2: 0xC10F, Data3: 0x484B, Data4: ( 0xBC,0x50,0x14,0xBC,0x62,0x3B,0x3A,0x27 )
    ) // 71AF914D-C10F-484B-BC50-14BC623B3A27
    public class IBufferFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CStreams_CIBufferFactory }

        public func Create(_ capacity: UInt32) throws -> IBuffer {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CStreams_CIBufferFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, capacity, &valueAbi))
                }
            }
            return IBuffer(value!)
        }

    }

    private static let IID___x_ABI_CWindows_CStorage_CStreams_CIBufferStatics: test_component.IID = .init(
        Data1: 0xE901E65B, Data2: 0xD716, Data3: 0x475A, Data4: ( 0xA9,0x0A,0xAF,0x72,0x29,0xB1,0xE7,0x41 )
    ) // E901E65B-D716-475A-A90A-AF7229B1E741
    public class IBufferStatics: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CStreams_CIBufferStatics }

        public func CreateCopyFromMemoryBuffer(_ input: test_component.AnyIMemoryBuffer?) throws -> test_component.Buffer? {
            let (value) = try ComPtrs.initialize { valueAbi in
                let inputWrapper = __ABI_Windows_Foundation.IMemoryBufferWrapper(input)
                let _input = try! inputWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CStorage_CStreams_CIBufferStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateCopyFromMemoryBuffer(pThis, _input, &valueAbi))
                }
            }
            return __IMPL_Windows_Storage_Streams.BufferBridge.from(abi: value)
        }

        public func CreateMemoryBufferOverIBuffer(_ input: test_component.AnyIBuffer?) throws -> test_component.MemoryBuffer? {
            let (value) = try ComPtrs.initialize { valueAbi in
                let inputWrapper = __ABI_Windows_Storage_Streams.IBufferWrapper(input)
                let _input = try! inputWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CStorage_CStreams_CIBufferStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateMemoryBufferOverIBuffer(pThis, _input, &valueAbi))
                }
            }
            return __IMPL_Windows_Foundation.MemoryBufferBridge.from(abi: value)
        }

    }

}
