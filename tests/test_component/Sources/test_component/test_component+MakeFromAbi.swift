// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Ctest_component

func makeIAsyncActionFrom(abi: IUnknownRef) -> Any {
    let swiftAbi: __ABI_Windows_Foundation.IAsyncAction = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation.IAsyncActionImpl(RawPointer(swiftAbi)!)
}

func makeIAsyncInfoFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Foundation.IAsyncInfo = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation.IAsyncInfoImpl(RawPointer(swiftAbi)!)
}

func makeIClosableFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Foundation.IClosable = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation.IClosableImpl(RawPointer(swiftAbi)!)
}

func makeIStringableFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Foundation.IStringable = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation.IStringableImpl(RawPointer(swiftAbi)!)
}

func makeIPropertySetFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Foundation_Collections.IPropertySet = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation_Collections.IPropertySetImpl(RawPointer(swiftAbi)!)
}

func makeIVectorChangedEventArgsFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Foundation_Collections.IVectorChangedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_Foundation_Collections.IVectorChangedEventArgsImpl(RawPointer(swiftAbi)!)
}

func makeIAsyncMethodsFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.IAsyncMethods = try! abi.QueryInterface()
    return __IMPL_test_component.IAsyncMethodsImpl(RawPointer(swiftAbi)!)
}

func makeIBasicFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.IBasic = try! abi.QueryInterface()
    return __IMPL_test_component.IBasicImpl(RawPointer(swiftAbi)!)
}

func makeIIAmImplementableFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.IIAmImplementable = try! abi.QueryInterface()
    return __IMPL_test_component.IIAmImplementableImpl(RawPointer(swiftAbi)!)
}

func makeIInterfaceWithObservableVectorFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.IInterfaceWithObservableVector = try! abi.QueryInterface()
    return __IMPL_test_component.IInterfaceWithObservableVectorImpl(RawPointer(swiftAbi)!)
}

func makeISimpleDelegateFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.ISimpleDelegate = try! abi.QueryInterface()
    return __IMPL_test_component.ISimpleDelegateImpl(RawPointer(swiftAbi)!)
}

func makeInterfaceWithReturnDelegateFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.InterfaceWithReturnDelegate = try! abi.QueryInterface()
    return __IMPL_test_component.InterfaceWithReturnDelegateImpl(RawPointer(swiftAbi)!)
}

func makeWithKeywordFrom(abi: test_component.IInspectable) -> Any {
    let swiftAbi: __ABI_test_component.WithKeyword = try! abi.QueryInterface()
    return __IMPL_test_component.WithKeywordImpl(RawPointer(swiftAbi)!)
}

func makeDeferralFrom(abi: test_component.IInspectable) -> Any {
    return Deferral(fromAbi: abi)
}

func makePropertySetFrom(abi: IUnknownRef) -> Any {
    return PropertySet(fromAbi: abi)
}

func makeStringMapFrom(abi: IUnknownRef) -> Any {
    return StringMap(fromAbi: abi)
}

func makeValueSetFrom(abi: IUnknownRef) -> Any {
    return ValueSet(fromAbi: abi)
}

func makeAsyncOperationIntFrom(abi: IUnknownRef) -> Any {
    return AsyncOperationInt(fromAbi: abi)
}

func makeBaseFrom(abi: IUnknownRef) -> Any {
    return Base(fromAbi: abi)
}

func makeBaseCollectionFrom(abi: IUnknownRef) -> Any {
    return BaseCollection(fromAbi: abi)
}

func makeBaseMapCollectionFrom(abi: IUnknownRef) -> Any {
    return BaseMapCollection(fromAbi: abi)
}

func makeBaseNoOverridesFrom(abi: IUnknownRef) -> Any {
    return BaseNoOverrides(fromAbi: abi)
}

func makeBaseObservableCollectionFrom(abi: IUnknownRef) -> Any {
    return BaseObservableCollection(fromAbi: abi)
}

func makeClassFrom(abi: IUnknownRef) -> Any {
    return Class(fromAbi: abi)
}

func makeCollectionTesterFrom(abi: IUnknownRef) -> Any {
    return CollectionTester(fromAbi: abi)
}

func makeDeferrableEventArgsFrom(abi: IUnknownRef) -> Any {
    return DeferrableEventArgs(fromAbi: abi)
}

func makeDerivedFrom(abi: IUnknownRef) -> Any {
    return Derived(fromAbi: abi)
}

func makeEventTesterFrom(abi: IUnknownRef) -> Any {
    return EventTester(fromAbi: abi)
}

func makeNoopClosableFrom(abi: IUnknownRef) -> Any {
    return NoopClosable(fromAbi: abi)
}

func makeSimpleFrom(abi: IUnknownRef) -> Any {
    return Simple(fromAbi: abi)
}

func makeUnsealedDerivedFrom(abi: IUnknownRef) -> Any {
    return UnsealedDerived(fromAbi: abi)
}

func makeUnsealedDerived2From(abi: IUnknownRef) -> Any {
    return UnsealedDerived2(fromAbi: abi)
}

func makeUnsealedDerivedNoOverridesFrom(abi: IUnknownRef) -> Any {
    return UnsealedDerivedNoOverrides(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static func from(typeName: String, abi: IUnknownRef) -> Any? {
        switch typeName {
            case "IAsyncAction": return makeIAsyncActionFrom(abi: abi)
            case "IAsyncInfo": return makeIAsyncInfoFrom(abi: abi)
            case "IClosable": return makeIClosableFrom(abi: abi)
            case "IStringable": return makeIStringableFrom(abi: abi)
            case "IPropertySet": return makeIPropertySetFrom(abi: abi)
            case "IVectorChangedEventArgs": return makeIVectorChangedEventArgsFrom(abi: abi)
            case "IAsyncMethods": return makeIAsyncMethodsFrom(abi: abi)
            case "IBasic": return makeIBasicFrom(abi: abi)
            case "IIAmImplementable": return makeIIAmImplementableFrom(abi: abi)
            case "IInterfaceWithObservableVector": return makeIInterfaceWithObservableVectorFrom(abi: abi)
            case "ISimpleDelegate": return makeISimpleDelegateFrom(abi: abi)
            case "InterfaceWithReturnDelegate": return makeInterfaceWithReturnDelegateFrom(abi: abi)
            case "WithKeyword": return makeWithKeywordFrom(abi: abi)
            case "Deferral": return makeDeferralFrom(abi: abi)
            case "PropertySet": return makePropertySetFrom(abi: abi)
            case "StringMap": return makeStringMapFrom(abi: abi)
            case "ValueSet": return makeValueSetFrom(abi: abi)
            case "AsyncOperationInt": return makeAsyncOperationIntFrom(abi: abi)
            case "Base": return makeBaseFrom(abi: abi)
            case "BaseCollection": return makeBaseCollectionFrom(abi: abi)
            case "BaseMapCollection": return makeBaseMapCollectionFrom(abi: abi)
            case "BaseNoOverrides": return makeBaseNoOverridesFrom(abi: abi)
            case "BaseObservableCollection": return makeBaseObservableCollectionFrom(abi: abi)
            case "Class": return makeClassFrom(abi: abi)
            case "CollectionTester": return makeCollectionTesterFrom(abi: abi)
            case "DeferrableEventArgs": return makeDeferrableEventArgsFrom(abi: abi)
            case "Derived": return makeDerivedFrom(abi: abi)
            case "EventTester": return makeEventTesterFrom(abi: abi)
            case "NoopClosable": return makeNoopClosableFrom(abi: abi)
            case "Simple": return makeSimpleFrom(abi: abi)
            case "UnsealedDerived": return makeUnsealedDerivedFrom(abi: abi)
            case "UnsealedDerived2": return makeUnsealedDerived2From(abi: abi)
            case "UnsealedDerivedNoOverrides": return makeUnsealedDerivedNoOverridesFrom(abi: abi)
            default: return nil
        }
    }
}
