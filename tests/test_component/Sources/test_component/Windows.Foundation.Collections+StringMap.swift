// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap)
public final class StringMap : WinRTClass, IMap, IIterable, IObservableMap {
    public typealias K = String
    public typealias V = String
    public typealias T = AnyIKeyValuePair<String, String>?
    private typealias SwiftABI = test_component.IMapString_String
    private typealias CABI = __x_ABI_C__FIMap_2_HSTRING_HSTRING
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _defaultFactory: test_component.IActivationFactory = try! RoGetActivationFactory("Windows.Foundation.Collections.StringMap")
    override public init() {
        super.init(try! Self._defaultFactory.ActivateInstance())
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.lookup)
    public func lookup(_ key: String) -> String {
        try! _default.Lookup(key)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.haskey)
    public func hasKey(_ key: String) -> Bool {
        try! _default.HasKey(key)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.getview)
    public func getView() -> AnyIMapView<String, String>? {
        try! _default.GetView()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.insert)
    public func insert(_ key: String, _ value: String) -> Bool {
        try! _default.Insert(key, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.remove)
    public func remove(_ key: String) {
        try! _default.Remove(key)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.clear)
    public func clear() {
        try! _default.Clear()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.size)
    public var size : UInt32 {
        get { try! _default.get_Size() }
    }

    private lazy var _IIterable: IIterableIKeyValuePairString_String! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.first)
    public func first() -> AnyIIterator<AnyIKeyValuePair<String, String>?>? {
        try! _IIterable.First()
    }

    private lazy var _IObservableMap: IObservableMapString_String! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.stringmap.mapchanged)
    public lazy var mapChanged : Event<MapChangedEventHandler<String, String>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._IObservableMap else { return .init() }
          return try! this.add_MapChanged($0)
        },
        remove: { [weak self] in
         try? self?._IObservableMap.remove_MapChanged($0)
       }
      )
    }()

    deinit {
        _default = nil
        _IIterable = nil
        _IObservableMap = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
    public enum StringMapBridge: AbiBridge {
        public typealias SwiftProjection = StringMap
        public typealias CABI = __x_ABI_C__FIMap_2_HSTRING_HSTRING
        public static func from(abi: ComPtr<__x_ABI_C__FIMap_2_HSTRING_HSTRING>?) -> StringMap? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StringMapMaker: MakeFromAbi {
    public typealias SwiftType = StringMap
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StringMap(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
}
