// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

// MARK: - Deferral

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.deferral)
public final class Deferral : WinRTClass, IClosable {
    private typealias SwiftABI = __ABI_Windows_Foundation.IDeferral
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIDeferral
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IDeferralFactory: __ABI_Windows_Foundation.IDeferralFactory = try! RoGetActivationFactory("Windows.Foundation.Deferral")
    public init(_ handler: DeferralCompletedHandler!) {
        super.init(try! Self._IDeferralFactory.Create(handler))
    }

    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.deferral.close)
    public func close() throws {
        try _IClosable.Close()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.deferral.complete)
    public func complete() throws {
        try _default.Complete()
    }

    deinit {
        _IClosable = nil
        _default = nil
    }
}

// MARK: - Deferral Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum DeferralBridge: AbiBridge {
        public typealias SwiftProjection = Deferral
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIDeferral
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIDeferral>?) -> Deferral? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class DeferralMaker: MakeFromAbi {
    public typealias SwiftType = Deferral
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return Deferral(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIDeferral: test_component.IID = .init(
        Data1: 0xD6269732, Data2: 0x3B7F, Data3: 0x46A7, Data4: ( 0xB4,0x0B,0x4F,0xDC,0xA2,0xA2,0xC6,0x93 ) // D6269732-3B7F-46A7-B40B-4FDCA2A2C693
    ) 
    public class IDeferral: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIDeferral }

        public func Complete() throws {
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIDeferral.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Complete(pThis))
            }
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIDeferralFactory: test_component.IID = .init(
        Data1: 0x65A1ECC5, Data2: 0x3FB5, Data3: 0x4832, Data4: ( 0x8C,0xA9,0xF0,0x61,0xB2,0x81,0xD1,0x3A ) // 65A1ECC5-3FB5-4832-8CA9-F061B281D13A
    ) 
    public class IDeferralFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIDeferralFactory }

        public func Create(_ handler: test_component.DeferralCompletedHandler?) throws -> IDeferral {
            let (result) = try ComPtrs.initialize { resultAbi in
                let handlerWrapper = __ABI_Windows_Foundation.DeferralCompletedHandlerWrapper(handler)
                let _handler = try! handlerWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIDeferralFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _handler, &resultAbi))
                }
            }
            return IDeferral(result!)
        }

    }

}
// MARK: - MemoryBuffer

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer)
public final class MemoryBuffer : WinRTClass, IClosable, IMemoryBuffer {
    private typealias SwiftABI = __ABI_Windows_Foundation.IMemoryBuffer
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIMemoryBuffer
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IMemoryBufferFactory: __ABI_Windows_Foundation.IMemoryBufferFactory = try! RoGetActivationFactory("Windows.Foundation.MemoryBuffer")
    public init(_ capacity: UInt32) {
        super.init(try! Self._IMemoryBufferFactory.Create(capacity))
    }

    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer.close)
    public func close() throws {
        try _IClosable.Close()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer.createreference)
    public func createReference() throws -> AnyIMemoryBufferReference! {
        try _default.CreateReference()
    }

    deinit {
        _IClosable = nil
        _default = nil
    }
}

// MARK: - MemoryBuffer Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum MemoryBufferBridge: AbiBridge {
        public typealias SwiftProjection = MemoryBuffer
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIMemoryBuffer
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIMemoryBuffer>?) -> MemoryBuffer? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class MemoryBufferMaker: MakeFromAbi {
    public typealias SwiftType = MemoryBuffer
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return MemoryBuffer(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIMemoryBufferFactory: test_component.IID = .init(
        Data1: 0xFBC4DD2B, Data2: 0x245B, Data3: 0x11E4, Data4: ( 0xAF,0x98,0x68,0x94,0x23,0x26,0x0C,0xF8 ) // FBC4DD2B-245B-11E4-AF98-689423260CF8
    ) 
    public class IMemoryBufferFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIMemoryBufferFactory }

        public func Create(_ capacity: UInt32) throws -> IMemoryBuffer {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIMemoryBufferFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, capacity, &valueAbi))
                }
            }
            return IMemoryBuffer(value!)
        }

    }

}
// MARK: - Uri

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri)
public final class Uri : WinRTClass, IStringable {
    private typealias SwiftABI = __ABI_Windows_Foundation.IUriRuntimeClass
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIUriRuntimeClass
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IUriEscapeStatics: __ABI_Windows_Foundation.IUriEscapeStatics = try! RoGetActivationFactory("Windows.Foundation.Uri")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.unescapecomponent)
    public static func unescapeComponent(_ toUnescape: String) throws -> String {
        return try _IUriEscapeStatics.UnescapeComponent(toUnescape)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.escapecomponent)
    public static func escapeComponent(_ toEscape: String) throws -> String {
        return try _IUriEscapeStatics.EscapeComponent(toEscape)
    }

    private static let _IUriRuntimeClassFactory: __ABI_Windows_Foundation.IUriRuntimeClassFactory = try! RoGetActivationFactory("Windows.Foundation.Uri")
    public init(_ uri: String) {
        super.init(try! Self._IUriRuntimeClassFactory.CreateUri(uri))
    }

    public init(_ baseUri: String, _ relativeUri: String) {
        super.init(try! Self._IUriRuntimeClassFactory.CreateWithRelativeUri(baseUri, relativeUri))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.equals)
    public func equals(_ pUri: Uri!) throws -> Bool {
        try _default.Equals(pUri)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.combineuri)
    public func combineUri(_ relativeUri: String) throws -> Uri! {
        try _default.CombineUri(relativeUri)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.absoluteuri)
    public var absoluteUri : String {
        get { try! _default.get_AbsoluteUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.displayuri)
    public var displayUri : String {
        get { try! _default.get_DisplayUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.domain)
    public var domain : String {
        get { try! _default.get_Domain() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.extension)
    public var `extension` : String {
        get { try! _default.get_Extension() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.fragment)
    public var fragment : String {
        get { try! _default.get_Fragment() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.host)
    public var host : String {
        get { try! _default.get_Host() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.password)
    public var password : String {
        get { try! _default.get_Password() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.path)
    public var path : String {
        get { try! _default.get_Path() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.port)
    public var port : Int32 {
        get { try! _default.get_Port() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.query)
    public var query : String {
        get { try! _default.get_Query() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.queryparsed)
    public var queryParsed : WwwFormUrlDecoder! {
        get { try! _default.get_QueryParsed() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.rawuri)
    public var rawUri : String {
        get { try! _default.get_RawUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.schemename)
    public var schemeName : String {
        get { try! _default.get_SchemeName() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.suspicious)
    public var suspicious : Bool {
        get { try! _default.get_Suspicious() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.username)
    public var userName : String {
        get { try! _default.get_UserName() }
    }

    private lazy var _IUriRuntimeClassWithAbsoluteCanonicalUri: __ABI_Windows_Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.absolutecanonicaluri)
    public var absoluteCanonicalUri : String {
        get { try! _IUriRuntimeClassWithAbsoluteCanonicalUri.get_AbsoluteCanonicalUri() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.displayiri)
    public var displayIri : String {
        get { try! _IUriRuntimeClassWithAbsoluteCanonicalUri.get_DisplayIri() }
    }

    private lazy var _IStringable: __ABI_Windows_Foundation.IStringable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.uri.tostring)
    public func toString() throws -> String {
        try _IStringable.ToString()
    }

    deinit {
        _default = nil
        _IUriRuntimeClassWithAbsoluteCanonicalUri = nil
        _IStringable = nil
    }
}

// MARK: - Uri Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum UriBridge: AbiBridge {
        public typealias SwiftProjection = Uri
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIUriRuntimeClass
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIUriRuntimeClass>?) -> Uri? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class UriMaker: MakeFromAbi {
    public typealias SwiftType = Uri
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return Uri(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClass: test_component.IID = .init(
        Data1: 0x9E365E57, Data2: 0x48B2, Data3: 0x4160, Data4: ( 0x95,0x6F,0xC7,0x38,0x51,0x20,0xBB,0xFC ) // 9E365E57-48B2-4160-956F-C7385120BBFC
    ) 
    public class IUriRuntimeClass: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClass }

        public func get_AbsoluteUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AbsoluteUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_DisplayUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Domain() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Domain(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Extension() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Extension(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Fragment() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fragment(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Host() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Host(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Password() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Password(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Path() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Path(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Query() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Query(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_QueryParsed() throws -> test_component.WwwFormUrlDecoder? {
            let (ppWwwFormUrlDecoder) = try ComPtrs.initialize { ppWwwFormUrlDecoderAbi in
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_QueryParsed(pThis, &ppWwwFormUrlDecoderAbi))
                }
            }
            return __IMPL_Windows_Foundation.WwwFormUrlDecoderBridge.from(abi: ppWwwFormUrlDecoder)
        }

        public func get_RawUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RawUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_SchemeName() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SchemeName(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_UserName() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserName(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_Port() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Port(pThis, &value))
            }
            return value
        }

        public func get_Suspicious() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Suspicious(pThis, &value))
            }
            return .init(from: value)
        }

        public func Equals(_ pUri: test_component.Uri?) throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Equals(pThis, RawPointer(pUri), &value))
            }
            return .init(from: value)
        }

        public func CombineUri(_ relativeUri: String) throws -> test_component.Uri? {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _relativeUri = try! HString(relativeUri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClass.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CombineUri(pThis, _relativeUri.get(), &instanceAbi))
                }
            }
            return __IMPL_Windows_Foundation.UriBridge.from(abi: instance)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri: test_component.IID = .init(
        Data1: 0x758D9661, Data2: 0x221C, Data3: 0x480F, Data4: ( 0xA3,0x39,0x50,0x65,0x66,0x73,0xF4,0x6F ) // 758D9661-221C-480F-A339-50656673F46F
    ) 
    public class IUriRuntimeClassWithAbsoluteCanonicalUri: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri }

        public func get_AbsoluteCanonicalUri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AbsoluteCanonicalUri(pThis, &value))
            }
            return .init(from: value)
        }

        public func get_DisplayIri() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayIri(pThis, &value))
            }
            return .init(from: value)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriEscapeStatics: test_component.IID = .init(
        Data1: 0xC1D432BA, Data2: 0xC824, Data3: 0x4452, Data4: ( 0xA7,0xFD,0x51,0x2B,0xC3,0xBB,0xE9,0xA1 ) // C1D432BA-C824-4452-A7FD-512BC3BBE9A1
    ) 
    public class IUriEscapeStatics: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIUriEscapeStatics }

        public func UnescapeComponent(_ toUnescape: String) throws -> String {
            var value: HSTRING?
            let _toUnescape = try! HString(toUnescape)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriEscapeStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.UnescapeComponent(pThis, _toUnescape.get(), &value))
            }
            return .init(from: value)
        }

        public func EscapeComponent(_ toEscape: String) throws -> String {
            var value: HSTRING?
            let _toEscape = try! HString(toEscape)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriEscapeStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.EscapeComponent(pThis, _toEscape.get(), &value))
            }
            return .init(from: value)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory: test_component.IID = .init(
        Data1: 0x44A9796F, Data2: 0x723E, Data3: 0x4FDF, Data4: ( 0xA2,0x18,0x03,0x3E,0x75,0xB0,0xC0,0x84 ) // 44A9796F-723E-4FDF-A218-033E75B0C084
    ) 
    public class IUriRuntimeClassFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory }

        public func CreateUri(_ uri: String) throws -> IUriRuntimeClass {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _uri = try! HString(uri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateUri(pThis, _uri.get(), &instanceAbi))
                }
            }
            return IUriRuntimeClass(instance!)
        }

        public func CreateWithRelativeUri(_ baseUri: String, _ relativeUri: String) throws -> IUriRuntimeClass {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _baseUri = try! HString(baseUri)
                let _relativeUri = try! HString(relativeUri)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithRelativeUri(pThis, _baseUri.get(), _relativeUri.get(), &instanceAbi))
                }
            }
            return IUriRuntimeClass(instance!)
        }

    }

}
// MARK: - WwwFormUrlDecoder

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder)
public final class WwwFormUrlDecoder : WinRTClass, IIterable, IVectorView {
    public typealias T = AnyIWwwFormUrlDecoderEntry?
    private typealias SwiftABI = __ABI_Windows_Foundation.IWwwFormUrlDecoderRuntimeClass
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IWwwFormUrlDecoderRuntimeClassFactory: __ABI_Windows_Foundation.IWwwFormUrlDecoderRuntimeClassFactory = try! RoGetActivationFactory("Windows.Foundation.WwwFormUrlDecoder")
    public init(_ query: String) {
        super.init(try! Self._IWwwFormUrlDecoderRuntimeClassFactory.CreateWwwFormUrlDecoder(query))
    }

    private lazy var _IIterable: IIterableIWwwFormUrlDecoderEntry! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.first)
    public func first() -> AnyIIterator<AnyIWwwFormUrlDecoderEntry?>? {
        try! _IIterable.First()
    }

    // MARK: Collection
    public typealias Element = T
    public var startIndex: Int { 0 }
    public var endIndex: Int { Int(size) }
    public func index(after i: Int) -> Int {
        i+1
    }

    public func index(of: Element) -> Int? {
        var index: UInt32 = 0
        let result = indexOf(of, &index)
        guard result else { return nil }
        return Int(index)
    }
    public var count: Int { Int(size) }

    public subscript(position: Int) -> Element {
        get {
            getAt(UInt32(position))
        }
    }
    // MARK: WinRT
    private lazy var _IVectorView: IVectorViewIWwwFormUrlDecoderEntry! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.getat)
    public func getAt(_ index: UInt32) -> AnyIWwwFormUrlDecoderEntry? {
        try! _IVectorView.GetAt(index)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.indexof)
    public func indexOf(_ value: AnyIWwwFormUrlDecoderEntry?, _ index: inout UInt32) -> Bool {
        try! _IVectorView.IndexOf(value, &index)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.getmany)
    public func getMany(_ startIndex: UInt32, _ items: inout [AnyIWwwFormUrlDecoderEntry?]) -> UInt32 {
        try! _IVectorView.GetMany(startIndex, &items)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.size)
    public var size : UInt32 {
        get { try! _IVectorView.get_Size() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.wwwformurldecoder.getfirstvaluebyname)
    public func getFirstValueByName(_ name: String) throws -> String {
        try _default.GetFirstValueByName(name)
    }

    deinit {
        _IIterable = nil
        _IVectorView = nil
        _default = nil
    }
}

// MARK: - WwwFormUrlDecoder Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum WwwFormUrlDecoderBridge: AbiBridge {
        public typealias SwiftProjection = WwwFormUrlDecoder
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass>?) -> WwwFormUrlDecoder? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class WwwFormUrlDecoderMaker: MakeFromAbi {
    public typealias SwiftType = WwwFormUrlDecoder
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return WwwFormUrlDecoder(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass: test_component.IID = .init(
        Data1: 0xD45A0451, Data2: 0xF225, Data3: 0x4542, Data4: ( 0x92,0x96,0x0E,0x1D,0xF5,0xD2,0x54,0xDF ) // D45A0451-F225-4542-9296-0E1DF5D254DF
    ) 
    public class IWwwFormUrlDecoderRuntimeClass: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass }

        public func GetFirstValueByName(_ name: String) throws -> String {
            var phstrValue: HSTRING?
            let _name = try! HString(name)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetFirstValueByName(pThis, _name.get(), &phstrValue))
            }
            return .init(from: phstrValue)
        }

    }

    private static let IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory: test_component.IID = .init(
        Data1: 0x5B8C6B3D, Data2: 0x24AE, Data3: 0x41B5, Data4: ( 0xA1,0xBF,0xF0,0xC3,0xD5,0x44,0x84,0x5B ) // 5B8C6B3D-24AE-41B5-A1BF-F0C3D544845B
    ) 
    public class IWwwFormUrlDecoderRuntimeClassFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory }

        public func CreateWwwFormUrlDecoder(_ query: String) throws -> IWwwFormUrlDecoderRuntimeClass {
            let (instance) = try ComPtrs.initialize { instanceAbi in
                let _query = try! HString(query)
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWwwFormUrlDecoder(pThis, _query.get(), &instanceAbi))
                }
            }
            return IWwwFormUrlDecoderRuntimeClass(instance!)
        }

    }

}
