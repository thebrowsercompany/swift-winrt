// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

public final class AsyncMethods {
    private static let _IAsyncMethodsStatics: __ABI_test_component.IAsyncMethodsStatics = try! RoGetActivationFactory("test_component.AsyncMethods")
    public static func getCompletedAsync(_ result: Int32) throws -> AnyIAsyncOperation<Int32>! {
        return try _IAsyncMethodsStatics.GetCompletedAsync(result)
    }

    public static func getCompletedWithErrorAsync(_ errorCode: HRESULT) throws -> AnyIAsyncOperation<Int32>! {
        return try _IAsyncMethodsStatics.GetCompletedWithErrorAsync(errorCode)
    }

    public static func getPendingAsync() throws -> AsyncOperationInt! {
        return try _IAsyncMethodsStatics.GetPendingAsync()
    }

}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_test_component {
}
@_spi(WinRTInternal)
extension __ABI_test_component {
    private static let IID___x_ABI_Ctest__component_CIAsyncMethodsStatics: test_component.IID = .init(
        Data1: 0x5FAAD8F4, Data2: 0x29D7, Data3: 0x5C26, Data4: ( 0xA8,0x72,0x35,0x42,0xE3,0xE1,0x86,0x7A )
    ) // 5FAAD8F4-29D7-5C26-A872-3542E3E1867A
    public class IAsyncMethodsStatics: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIAsyncMethodsStatics }

        public func GetCompletedAsync(_ result: Int32) throws -> test_component.AnyIAsyncOperation<Int32>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_Ctest__component_CIAsyncMethodsStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetCompletedAsync(pThis, result, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1_intWrapper.unwrapFrom(abi: operation)
        }

        public func GetCompletedWithErrorAsync(_ errorCode: HRESULT) throws -> test_component.AnyIAsyncOperation<Int32>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_Ctest__component_CIAsyncMethodsStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetCompletedWithErrorAsync(pThis, errorCode, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1_intWrapper.unwrapFrom(abi: operation)
        }

        public func GetPendingAsync() throws -> test_component.AsyncOperationInt? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_Ctest__component_CIAsyncMethodsStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetPendingAsync(pThis, &resultAbi))
                }
            }
            return __IMPL_test_component.AsyncOperationIntBridge.from(abi: result)
        }

    }

}
