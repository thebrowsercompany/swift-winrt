// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetracker)
public final class StorageLibraryChangeTracker : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Storage.IStorageLibraryChangeTracker
    private typealias CABI = __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetracker.getchangereader)
    public func getChangeReader() throws -> StorageLibraryChangeReader! {
        try _default.GetChangeReader()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetracker.enable)
    public func enable() throws {
        try _default.Enable()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagelibrarychangetracker.reset)
    public func reset() throws {
        try _default.Reset()
    }

    deinit {
        _default = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage {
    public enum StorageLibraryChangeTrackerBridge: AbiBridge {
        public typealias SwiftProjection = StorageLibraryChangeTracker
        public typealias CABI = __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker>?) -> StorageLibraryChangeTracker? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageLibraryChangeTrackerMaker: MakeFromAbi {
    public typealias SwiftType = StorageLibraryChangeTracker
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StorageLibraryChangeTracker(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage {
    private static let IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker: test_component.IID = .init(
        Data1: 0x9E157316, Data2: 0x6073, Data3: 0x44F6, Data4: ( 0x96,0x81,0x74,0x92,0xD1,0x28,0x6C,0x90 )
    ) // 9E157316-6073-44F6-9681-7492D1286C90
    public class IStorageLibraryChangeTracker: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker }

        public func GetChangeReader() throws -> test_component.StorageLibraryChangeReader? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetChangeReader(pThis, &valueAbi))
                }
            }
            return __IMPL_Windows_Storage.StorageLibraryChangeReaderBridge.from(abi: value)
        }

        public func Enable() throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Enable(pThis))
            }
        }

        public func Reset() throws {
            _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Reset(pThis))
            }
        }

    }

}
