// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer)
public final class MemoryBuffer : WinRTClass, IClosable, IMemoryBuffer {
    private typealias SwiftABI = __ABI_Windows_Foundation.IMemoryBuffer
    private typealias CABI = __x_ABI_CWindows_CFoundation_CIMemoryBuffer
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IMemoryBufferFactory: __ABI_Windows_Foundation.IMemoryBufferFactory = try! RoGetActivationFactory("Windows.Foundation.MemoryBuffer")
    public init(_ capacity: UInt32) {
        super.init(try! Self._IMemoryBufferFactory.Create(capacity))
    }

    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer.close)
    public func close() throws {
        try _IClosable.Close()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.memorybuffer.createreference)
    public func createReference() throws -> AnyIMemoryBufferReference! {
        try _default.CreateReference()
    }

    deinit {
        _IClosable = nil
        _default = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation {
    public enum MemoryBufferBridge: AbiBridge {
        public typealias SwiftProjection = MemoryBuffer
        public typealias CABI = __x_ABI_CWindows_CFoundation_CIMemoryBuffer
        public static func from(abi: ComPtr<__x_ABI_CWindows_CFoundation_CIMemoryBuffer>?) -> MemoryBuffer? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class MemoryBufferMaker: MakeFromAbi {
    public typealias SwiftType = MemoryBuffer
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return MemoryBuffer(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation {
    private static let IID___x_ABI_CWindows_CFoundation_CIMemoryBufferFactory: test_component.IID = .init(
        Data1: 0xFBC4DD2B, Data2: 0x245B, Data3: 0x11E4, Data4: ( 0xAF,0x98,0x68,0x94,0x23,0x26,0x0C,0xF8 )
    ) // FBC4DD2B-245B-11E4-AF98-689423260CF8
    public class IMemoryBufferFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CIMemoryBufferFactory }

        public func Create(_ capacity: UInt32) throws -> IMemoryBuffer {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CFoundation_CIMemoryBufferFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, capacity, &valueAbi))
                }
            }
            return IMemoryBuffer(value!)
        }

    }

}
