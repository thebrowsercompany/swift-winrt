// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder)
public final class StorageFolder : WinRTClass, IStorageItem, IStorageFolder, test_component.IStorageFolderQueryOperations, IStorageItemProperties, IStorageItemProperties2, IStorageItem2, IStorageFolder2, IStorageItemPropertiesWithProvider {
    private typealias SwiftABI = __ABI_Windows_Storage.IStorageFolder
    private typealias CABI = __x_ABI_CWindows_CStorage_CIStorageFolder
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static let _IStorageFolderStatics: __ABI_Windows_Storage.IStorageFolderStatics = try! RoGetActivationFactory("Windows.Storage.StorageFolder")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfolderfrompathasync)
    public static func getFolderFromPathAsync(_ path: String) throws -> AnyIAsyncOperation<StorageFolder?>! {
        return try _IStorageFolderStatics.GetFolderFromPathAsync(path)
    }

    private static let _IStorageFolderStatics2: __ABI_Windows_Storage.IStorageFolderStatics2 = try! RoGetActivationFactory("Windows.Storage.StorageFolder")
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfolderfrompathforuserasync)
    public static func getFolderFromPathForUserAsync(_ user: test_component.User!, _ path: String) throws -> AnyIAsyncOperation<StorageFolder?>! {
        return try _IStorageFolderStatics2.GetFolderFromPathForUserAsync(user, path)
    }

    private lazy var _IStorageItem: __ABI_Windows_Storage.IStorageItem! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.renameasync)
    public func renameAsync(_ desiredName: String) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItem.RenameAsyncOverloadDefaultOptions(desiredName)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.renameasync)
    public func renameAsync(_ desiredName: String, _ option: NameCollisionOption) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItem.RenameAsync(desiredName, option)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.deleteasync)
    public func deleteAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItem.DeleteAsyncOverloadDefaultOptions()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.deleteasync)
    public func deleteAsync(_ option: StorageDeleteOption) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItem.DeleteAsync(option)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getbasicpropertiesasync)
    public func getBasicPropertiesAsync() throws -> AnyIAsyncOperation<test_component.BasicProperties?>! {
        try _IStorageItem.GetBasicPropertiesAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.isoftype)
    public func isOfType(_ type: StorageItemTypes) throws -> Bool {
        try _IStorageItem.IsOfType(type)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.attributes)
    public var attributes : FileAttributes {
        get { try! _IStorageItem.get_Attributes() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.datecreated)
    public var dateCreated : test_component.DateTime {
        get { try! _IStorageItem.get_DateCreated() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.name)
    public var name : String {
        get { try! _IStorageItem.get_Name() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.path)
    public var path : String {
        get { try! _IStorageItem.get_Path() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfileasync)
    public func createFileAsync(_ desiredName: String) throws -> AnyIAsyncOperation<StorageFile?>! {
        try _default.CreateFileAsyncOverloadDefaultOptions(desiredName)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfileasync)
    public func createFileAsync(_ desiredName: String, _ options: CreationCollisionOption) throws -> AnyIAsyncOperation<StorageFile?>! {
        try _default.CreateFileAsync(desiredName, options)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfolderasync)
    public func createFolderAsync(_ desiredName: String) throws -> AnyIAsyncOperation<StorageFolder?>! {
        try _default.CreateFolderAsyncOverloadDefaultOptions(desiredName)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfolderasync)
    public func createFolderAsync(_ desiredName: String, _ options: CreationCollisionOption) throws -> AnyIAsyncOperation<StorageFolder?>! {
        try _default.CreateFolderAsync(desiredName, options)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfileasync)
    public func getFileAsync(_ name: String) throws -> AnyIAsyncOperation<StorageFile?>! {
        try _default.GetFileAsync(name)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfolderasync)
    public func getFolderAsync(_ name: String) throws -> AnyIAsyncOperation<StorageFolder?>! {
        try _default.GetFolderAsync(name)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getitemasync)
    public func getItemAsync(_ name: String) throws -> AnyIAsyncOperation<AnyIStorageItem?>! {
        try _default.GetItemAsync(name)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfilesasync)
    public func getFilesAsync() throws -> AnyIAsyncOperation<AnyIVectorView<StorageFile?>?>! {
        try _default.GetFilesAsyncOverloadDefaultOptionsStartAndCount()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfoldersasync)
    public func getFoldersAsync() throws -> AnyIAsyncOperation<AnyIVectorView<StorageFolder?>?>! {
        try _default.GetFoldersAsyncOverloadDefaultOptionsStartAndCount()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getitemsasync)
    public func getItemsAsync() throws -> AnyIAsyncOperation<AnyIVectorView<AnyIStorageItem?>?>! {
        try _default.GetItemsAsyncOverloadDefaultStartAndCount()
    }

    private lazy var _IStorageFolderQueryOperations: __ABI_Windows_Storage_Search.IStorageFolderQueryOperations! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getindexedstateasync)
    public func getIndexedStateAsync() throws -> AnyIAsyncOperation<test_component.IndexedState>! {
        try _IStorageFolderQueryOperations.GetIndexedStateAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfilequery)
    public func createFileQuery() throws -> test_component.StorageFileQueryResult! {
        try _IStorageFolderQueryOperations.CreateFileQueryOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfilequery)
    public func createFileQuery(_ query: test_component.CommonFileQuery) throws -> test_component.StorageFileQueryResult! {
        try _IStorageFolderQueryOperations.CreateFileQuery(query)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfilequerywithoptions)
    public func createFileQueryWithOptions(_ queryOptions: test_component.QueryOptions!) throws -> test_component.StorageFileQueryResult! {
        try _IStorageFolderQueryOperations.CreateFileQueryWithOptions(queryOptions)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfolderquery)
    public func createFolderQuery() throws -> test_component.StorageFolderQueryResult! {
        try _IStorageFolderQueryOperations.CreateFolderQueryOverloadDefault()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfolderquery)
    public func createFolderQuery(_ query: test_component.CommonFolderQuery) throws -> test_component.StorageFolderQueryResult! {
        try _IStorageFolderQueryOperations.CreateFolderQuery(query)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createfolderquerywithoptions)
    public func createFolderQueryWithOptions(_ queryOptions: test_component.QueryOptions!) throws -> test_component.StorageFolderQueryResult! {
        try _IStorageFolderQueryOperations.CreateFolderQueryWithOptions(queryOptions)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createitemquery)
    public func createItemQuery() throws -> test_component.StorageItemQueryResult! {
        try _IStorageFolderQueryOperations.CreateItemQuery()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.createitemquerywithoptions)
    public func createItemQueryWithOptions(_ queryOptions: test_component.QueryOptions!) throws -> test_component.StorageItemQueryResult! {
        try _IStorageFolderQueryOperations.CreateItemQueryWithOptions(queryOptions)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfilesasync)
    public func getFilesAsync(_ query: test_component.CommonFileQuery, _ startIndex: UInt32, _ maxItemsToRetrieve: UInt32) throws -> AnyIAsyncOperation<AnyIVectorView<StorageFile?>?>! {
        try _IStorageFolderQueryOperations.GetFilesAsync(query, startIndex, maxItemsToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfilesasync)
    public func getFilesAsync(_ query: test_component.CommonFileQuery) throws -> AnyIAsyncOperation<AnyIVectorView<StorageFile?>?>! {
        try _IStorageFolderQueryOperations.GetFilesAsyncOverloadDefaultStartAndCount(query)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfoldersasync)
    public func getFoldersAsync(_ query: test_component.CommonFolderQuery, _ startIndex: UInt32, _ maxItemsToRetrieve: UInt32) throws -> AnyIAsyncOperation<AnyIVectorView<StorageFolder?>?>! {
        try _IStorageFolderQueryOperations.GetFoldersAsync(query, startIndex, maxItemsToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getfoldersasync)
    public func getFoldersAsync(_ query: test_component.CommonFolderQuery) throws -> AnyIAsyncOperation<AnyIVectorView<StorageFolder?>?>! {
        try _IStorageFolderQueryOperations.GetFoldersAsyncOverloadDefaultStartAndCount(query)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getitemsasync)
    public func getItemsAsync(_ startIndex: UInt32, _ maxItemsToRetrieve: UInt32) throws -> AnyIAsyncOperation<AnyIVectorView<AnyIStorageItem?>?>! {
        try _IStorageFolderQueryOperations.GetItemsAsync(startIndex, maxItemsToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.arequeryoptionssupported)
    public func areQueryOptionsSupported(_ queryOptions: test_component.QueryOptions!) throws -> Bool {
        try _IStorageFolderQueryOperations.AreQueryOptionsSupported(queryOptions)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.iscommonfolderquerysupported)
    public func isCommonFolderQuerySupported(_ query: test_component.CommonFolderQuery) throws -> Bool {
        try _IStorageFolderQueryOperations.IsCommonFolderQuerySupported(query)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.iscommonfilequerysupported)
    public func isCommonFileQuerySupported(_ query: test_component.CommonFileQuery) throws -> Bool {
        try _IStorageFolderQueryOperations.IsCommonFileQuerySupported(query)
    }

    private lazy var _IStorageItemProperties: __ABI_Windows_Storage.IStorageItemProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getthumbnailasync)
    public func getThumbnailAsync(_ mode: test_component.ThumbnailMode) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties.GetThumbnailAsyncOverloadDefaultSizeDefaultOptions(mode)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getthumbnailasync)
    public func getThumbnailAsync(_ mode: test_component.ThumbnailMode, _ requestedSize: UInt32) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties.GetThumbnailAsyncOverloadDefaultOptions(mode, requestedSize)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getthumbnailasync)
    public func getThumbnailAsync(_ mode: test_component.ThumbnailMode, _ requestedSize: UInt32, _ options: test_component.ThumbnailOptions) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties.GetThumbnailAsync(mode, requestedSize, options)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.displayname)
    public var displayName : String {
        get { try! _IStorageItemProperties.get_DisplayName() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.displaytype)
    public var displayType : String {
        get { try! _IStorageItemProperties.get_DisplayType() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.folderrelativeid)
    public var folderRelativeId : String {
        get { try! _IStorageItemProperties.get_FolderRelativeId() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.properties)
    public var properties : test_component.StorageItemContentProperties! {
        get { try! _IStorageItemProperties.get_Properties() }
    }

    private lazy var _IStorageItemProperties2: __ABI_Windows_Storage.IStorageItemProperties2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getscaledimageasthumbnailasync)
    public func getScaledImageAsThumbnailAsync(_ mode: test_component.ThumbnailMode) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties2.GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions(mode)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getscaledimageasthumbnailasync)
    public func getScaledImageAsThumbnailAsync(_ mode: test_component.ThumbnailMode, _ requestedSize: UInt32) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties2.GetScaledImageAsThumbnailAsyncOverloadDefaultOptions(mode, requestedSize)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getscaledimageasthumbnailasync)
    public func getScaledImageAsThumbnailAsync(_ mode: test_component.ThumbnailMode, _ requestedSize: UInt32, _ options: test_component.ThumbnailOptions) throws -> AnyIAsyncOperation<test_component.StorageItemThumbnail?>! {
        try _IStorageItemProperties2.GetScaledImageAsThumbnailAsync(mode, requestedSize, options)
    }

    private lazy var _IStorageItem2: __ABI_Windows_Storage.IStorageItem2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.getparentasync)
    public func getParentAsync() throws -> AnyIAsyncOperation<StorageFolder?>! {
        try _IStorageItem2.GetParentAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.isequal)
    public func isEqual(_ item: AnyIStorageItem!) throws -> Bool {
        try _IStorageItem2.IsEqual(item)
    }

    private lazy var _IStorageFolder2: __ABI_Windows_Storage.IStorageFolder2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.trygetitemasync)
    public func tryGetItemAsync(_ name: String) throws -> AnyIAsyncOperation<AnyIStorageItem?>! {
        try _IStorageFolder2.TryGetItemAsync(name)
    }

    private lazy var _IStorageItemPropertiesWithProvider: __ABI_Windows_Storage.IStorageItemPropertiesWithProvider! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.provider)
    public var provider : StorageProvider! {
        get { try! _IStorageItemPropertiesWithProvider.get_Provider() }
    }

    private lazy var _IStorageFolder3: __ABI_Windows_Storage.IStorageFolder3! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.storagefolder.trygetchangetracker)
    public func tryGetChangeTracker() throws -> StorageLibraryChangeTracker! {
        try _IStorageFolder3.TryGetChangeTracker()
    }

    deinit {
        _IStorageItem = nil
        _default = nil
        _IStorageFolderQueryOperations = nil
        _IStorageItemProperties = nil
        _IStorageItemProperties2 = nil
        _IStorageItem2 = nil
        _IStorageFolder2 = nil
        _IStorageItemPropertiesWithProvider = nil
        _IStorageFolder3 = nil
    }
}

// MARK: - StorageFolder Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage {
    public enum StorageFolderBridge: AbiBridge {
        public typealias SwiftProjection = StorageFolder
        public typealias CABI = __x_ABI_CWindows_CStorage_CIStorageFolder
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CIStorageFolder>?) -> StorageFolder? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageFolderMaker: MakeFromAbi {
    public typealias SwiftType = StorageFolder
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StorageFolder(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage {
    private static let IID___x_ABI_CWindows_CStorage_CIStorageFolder3: test_component.IID = .init(
        Data1: 0x9F617899, Data2: 0xBDE1, Data3: 0x4124, Data4: ( 0xAE,0xB3,0xB0,0x6A,0xD9,0x6F,0x98,0xD4 ) // 9F617899-BDE1-4124-AEB3-B06AD96F98D4
    ) 

    public class IStorageFolder3: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CIStorageFolder3 }

        public func TryGetChangeTracker() throws -> test_component.StorageLibraryChangeTracker? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageFolder3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetChangeTracker(pThis, &resultAbi))
                }
            }
            return __IMPL_Windows_Storage.StorageLibraryChangeTrackerBridge.from(abi: result)
        }

    }

    private static let IID___x_ABI_CWindows_CStorage_CIStorageFolderStatics: test_component.IID = .init(
        Data1: 0x08F327FF, Data2: 0x85D5, Data3: 0x48B9, Data4: ( 0xAE,0xE9,0x28,0x51,0x1E,0x33,0x9F,0x9F ) // 08F327FF-85D5-48B9-AEE9-28511E339F9F
    ) 

    public class IStorageFolderStatics: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CIStorageFolderStatics }

        public func GetFolderFromPathAsync(_ path: String) throws -> test_component.AnyIAsyncOperation<test_component.StorageFolder?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let _path = try! HString(path)
                _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageFolderStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetFolderFromPathAsync(pThis, _path.get(), &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderWrapper.unwrapFrom(abi: operation)
        }

    }

    private static let IID___x_ABI_CWindows_CStorage_CIStorageFolderStatics2: test_component.IID = .init(
        Data1: 0xB4656DC3, Data2: 0x71D2, Data3: 0x467D, Data4: ( 0x8B,0x29,0x37,0x1F,0x0F,0x62,0xBF,0x6F ) // B4656DC3-71D2-467D-8B29-371F0F62BF6F
    ) 

    public class IStorageFolderStatics2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CIStorageFolderStatics2 }

        public func GetFolderFromPathForUserAsync(_ user: test_component.User?, _ path: String) throws -> test_component.AnyIAsyncOperation<test_component.StorageFolder?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let _path = try! HString(path)
                _ = try perform(as: __x_ABI_CWindows_CStorage_CIStorageFolderStatics2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetFolderFromPathForUserAsync(pThis, RawPointer(user), _path.get(), &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderWrapper.unwrapFrom(abi: operation)
        }

    }

}
