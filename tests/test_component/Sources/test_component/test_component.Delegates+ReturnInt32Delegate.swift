// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWindowsFoundation
import CWinRT

public typealias ReturnInt32Delegate = () throws -> Int32

// MARK: - ReturnInt32Delegate Internals

@_spi(WinRTInternal)
extension __IMPL_test_component_Delegates {
    public class ReturnInt32DelegateBridge : WinRTDelegateBridge {
        public typealias Handler = ReturnInt32Delegate
        public typealias CABI = __x_ABI_Ctest__component_CDelegates_CIReturnInt32Delegate
        public typealias SwiftABI = __ABI_test_component_Delegates.ReturnInt32Delegate

        public static func from(abi: ComPtr<CABI>?) -> Handler? {
            guard let abi = abi else { return nil }
            let _default = SwiftABI(abi)
            let handler: Handler = { () in
                try _default.Invoke()
            }
            return handler
        }
    }
}
@_spi(WinRTInternal)
extension __ABI_test_component_Delegates {
    private static let IID___x_ABI_Ctest__component_CDelegates_CIReturnInt32Delegate: WindowsFoundation.IID = .init(
        Data1: 0xBCB57CF7, Data2: 0x97F9, Data3: 0x5B38, Data4: ( 0x99,0x47,0x39,0xC5,0x14,0x92,0x20,0xF0 ) // BCB57CF7-97F9-5B38-9947-39C5149220F0
    ) 

    public class ReturnInt32Delegate: WindowsFoundation.IUnknown {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_Ctest__component_CDelegates_CIReturnInt32Delegate }

        open func Invoke() throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_Ctest__component_CDelegates_CIReturnInt32Delegate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, &result))
            }
            return result
        }

    }


    typealias ReturnInt32DelegateWrapper = InterfaceWrapperBase<__IMPL_test_component_Delegates.ReturnInt32DelegateBridge>
    internal static var ReturnInt32DelegateVTable: __x_ABI_Ctest__component_CDelegates_CIReturnInt32DelegateVtbl = .init(
        QueryInterface: { ReturnInt32DelegateWrapper.queryInterface($0, $1, $2) },
        AddRef: { ReturnInt32DelegateWrapper.addRef($0) },
        Release: { ReturnInt32DelegateWrapper.release($0) },
        Invoke: {
            do {
                guard let __unwrapped__instance = ReturnInt32DelegateWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let result = try __unwrapped__instance()
                $1?.initialize(to: result)
                return S_OK
            } catch { return failWith(error: error) }
        }
    )
}
public extension WinRTDelegateBridge where CABI == __x_ABI_Ctest__component_CDelegates_CIReturnInt32Delegate {
    static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_test_component_Delegates.ReturnInt32DelegateVTable) { $0 }
        return .init(lpVtbl:vtblPtr)
    }
}

