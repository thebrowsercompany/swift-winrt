// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult)
public final class StorageFolderQueryResult : WinRTClass, IStorageQueryResultBase {
    private typealias SwiftABI = __ABI_Windows_Storage_Search.IStorageFolderQueryResult
    private typealias CABI = __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageQueryResultBase: __ABI_Windows_Storage_Search.IStorageQueryResultBase! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.getitemcountasync)
    public func getItemCountAsync() throws -> AnyIAsyncOperation<UInt32>! {
        try _IStorageQueryResultBase.GetItemCountAsync()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.findstartindexasync)
    public func findStartIndexAsync(_ value: Any!) throws -> AnyIAsyncOperation<UInt32>! {
        try _IStorageQueryResultBase.FindStartIndexAsync(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.getcurrentqueryoptions)
    public func getCurrentQueryOptions() throws -> QueryOptions! {
        try _IStorageQueryResultBase.GetCurrentQueryOptions()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.applynewqueryoptions)
    public func applyNewQueryOptions(_ newQueryOptions: QueryOptions!) throws {
        try _IStorageQueryResultBase.ApplyNewQueryOptions(newQueryOptions)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.folder)
    public var folder : test_component.StorageFolder! {
        get { try! _IStorageQueryResultBase.get_Folder() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.contentschanged)
    public lazy var contentsChanged : Event<TypedEventHandler<IStorageQueryResultBase?, Any?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._IStorageQueryResultBase else { return .init() }
          return try! this.add_ContentsChanged($0)
        },
        remove: { [weak self] in
         try? self?._IStorageQueryResultBase.remove_ContentsChanged($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.optionschanged)
    public lazy var optionsChanged : Event<TypedEventHandler<IStorageQueryResultBase?, Any?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._IStorageQueryResultBase else { return .init() }
          return try! this.add_OptionsChanged($0)
        },
        remove: { [weak self] in
         try? self?._IStorageQueryResultBase.remove_OptionsChanged($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.getfoldersasync)
    public func getFoldersAsync(_ startIndex: UInt32, _ maxNumberOfItems: UInt32) throws -> AnyIAsyncOperation<AnyIVectorView<test_component.StorageFolder?>?>! {
        try _default.GetFoldersAsync(startIndex, maxNumberOfItems)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.search.storagefolderqueryresult.getfoldersasync)
    public func getFoldersAsync() throws -> AnyIAsyncOperation<AnyIVectorView<test_component.StorageFolder?>?>! {
        try _default.GetFoldersAsyncDefaultStartAndCount()
    }

    deinit {
        _IStorageQueryResultBase = nil
        _default = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage_Search {
    public enum StorageFolderQueryResultBridge: AbiBridge {
        public typealias SwiftProjection = StorageFolderQueryResult
        public typealias CABI = __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult>?) -> StorageFolderQueryResult? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StorageFolderQueryResultMaker: MakeFromAbi {
    public typealias SwiftType = StorageFolderQueryResult
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StorageFolderQueryResult(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage_Search {
    private static let IID___x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult: test_component.IID = .init(
        Data1: 0x6654C911, Data2: 0x7D66, Data3: 0x46FA, Data4: ( 0xAE,0xCF,0xE4,0xA4,0xBA,0xA9,0x3A,0xB8 ) // 6654C911-7D66-46FA-AECF-E4A4BAA93AB8
    ) 
    public class IStorageFolderQueryResult: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult }

        public func GetFoldersAsync(_ startIndex: UInt32, _ maxNumberOfItems: UInt32) throws -> test_component.AnyIAsyncOperation<test_component.AnyIVectorView<test_component.StorageFolder?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetFoldersAsync(pThis, startIndex, maxNumberOfItems, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderWrapper.unwrapFrom(abi: operation)
        }

        public func GetFoldersAsyncDefaultStartAndCount() throws -> test_component.AnyIAsyncOperation<test_component.AnyIVectorView<test_component.StorageFolder?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetFoldersAsyncDefaultStartAndCount(pThis, &operationAbi))
                }
            }
            return test_component.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderWrapper.unwrapFrom(abi: operation)
        }

    }

}
