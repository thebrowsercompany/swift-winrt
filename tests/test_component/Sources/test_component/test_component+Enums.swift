// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

// MARK: - Fruit

public typealias Fruit = __x_ABI_Ctest__component_CFruit

extension test_component.Fruit {
    public static var banana : test_component.Fruit {
        __x_ABI_Ctest__component_CFruit_Banana
    }
    public static var apple : test_component.Fruit {
        __x_ABI_Ctest__component_CFruit_Apple
    }
    public static var orange : test_component.Fruit {
        __x_ABI_Ctest__component_CFruit_Orange
    }
    public static var pineapple : test_component.Fruit {
        __x_ABI_Ctest__component_CFruit_Pineapple
    }
}
extension test_component.Fruit: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

// MARK: - Keywords

public typealias Keywords = __x_ABI_Ctest__component_CKeywords

extension test_component.Keywords {
    public static var `as` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_As
    }
    public static var `break` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Break
    }
    public static var `case` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Case
    }
    public static var `catch` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Catch
    }
    public static var `class` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Class
    }
    public static var `continue` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Continue
    }
    public static var `default` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Default
    }
    public static var `defer` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Defer
    }
    public static var `do` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Do
    }
    public static var `else` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Else
    }
    public static var `enum` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Enum
    }
    public static var `extension` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Extension
    }
    public static var `fallthrough` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Fallthrough
    }
    public static var `false` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_False
    }
    public static var `for` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_For
    }
    public static var `func` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Func
    }
    public static var `if` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_If
    }
    public static var `import` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Import
    }
    public static var `in` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_In
    }
    public static var `internal` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Internal
    }
    public static var `is` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Is
    }
    public static var `let` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Let
    }
    public static var `nil` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Nil
    }
    public static var `private` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Private
    }
    public static var `protocol` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Protocol
    }
    public static var `public` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Public
    }
    public static var `repeat` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Repeat
    }
    public static var `rethrows` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Rethrows
    }
    public static var `return` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Return
    }
    public static var `self` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Self
    }
    public static var `static` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Static
    }
    public static var `struct` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Struct
    }
    public static var `subscript` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Subscript
    }
    public static var `super` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Super
    }
    public static var `switch` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Switch
    }
    public static var `throw` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Throw
    }
    public static var `throws` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Throws
    }
    public static var `true` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_True
    }
    public static var `try` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Try
    }
    public static var `var` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Var
    }
    public static var `where` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_Where
    }
    public static var `while` : test_component.Keywords {
        __x_ABI_Ctest__component_CKeywords_While
    }
}
extension test_component.Keywords: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

// MARK: - Signed

public typealias Signed = __x_ABI_Ctest__component_CSigned

extension test_component.Signed {
    public static var first : test_component.Signed {
        __x_ABI_Ctest__component_CSigned_First
    }
    public static var second : test_component.Signed {
        __x_ABI_Ctest__component_CSigned_Second
    }
    public static var third : test_component.Signed {
        __x_ABI_Ctest__component_CSigned_Third
    }
}
extension test_component.Signed: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

// MARK: - SwiftifiableNames

public typealias SwiftifiableNames = __x_ABI_Ctest__component_CSwiftifiableNames

extension test_component.SwiftifiableNames {
    public static var camelCase : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_camelCase
    }
    public static var pascalCase : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_PascalCase
    }
    public static var esingleLetterPrefixed : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_ESingleLetterPrefixed
    }
    public static var leadingCaps : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_LEADINGCaps
    }
    public static var r8g8b8a8Typeless : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_R8G8B8A8Typeless
    }
    public static var uuid : test_component.SwiftifiableNames {
        __x_ABI_Ctest__component_CSwiftifiableNames_UUID
    }
}
extension test_component.SwiftifiableNames: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

// MARK: - Unsigned

public typealias Unsigned = __x_ABI_Ctest__component_CUnsigned

extension test_component.Unsigned {
    public static var first : test_component.Unsigned {
        __x_ABI_Ctest__component_CUnsigned_First
    }
    public static var second : test_component.Unsigned {
        __x_ABI_Ctest__component_CUnsigned_Second
    }
    public static var third : test_component.Unsigned {
        __x_ABI_Ctest__component_CUnsigned_Third
    }
}
extension test_component.Unsigned: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

