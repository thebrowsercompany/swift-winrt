// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

open class UnsealedDerived2 : test_component.UnsealedDerived {
    private typealias SwiftABI = __ABI_test_component.IUnsealedDerived2
    private typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived2
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout test_component.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _IUnsealedDerived2Factory : __ABI_test_component.IUnsealedDerived2Factory =  try! RoGetActivationFactory("test_component.UnsealedDerived2")

    override public init(_ prop: Int32) {
        super.init(composing: __IMPL_test_component.UnsealedDerived2Bridge.Composable.self) { baseInterface, innerInterface in 
            try! Self._IUnsealedDerived2Factory.CreateInstance(prop, baseInterface, &innerInterface)
        }
    }

    private static var _IUnsealedDerived2ProtectedFactory : __ABI_test_component.IUnsealedDerived2ProtectedFactory =  try! RoGetActivationFactory("test_component.UnsealedDerived2")

    override public init() {
        super.init(composing: __IMPL_test_component.UnsealedDerived2Bridge.Composable.self) { baseInterface, innerInterface in 
            try! Self._IUnsealedDerived2ProtectedFactory.CreateInstance(baseInterface, &innerInterface)
        }
    }

    public func method() throws {
        try _default.Method()
    }

    deinit {
        _default = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_test_component {
    public enum UnsealedDerived2Bridge: ComposableBridge {
        public typealias SwiftProjection = UnsealedDerived2
        public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived2
        public static func from(abi: ComPtr<__x_ABI_Ctest__component_CIUnsealedDerived2>?) -> UnsealedDerived2? {
            guard let abi = abi else { return nil }
            return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
        }
        public enum IUnsealedDerivedOverloads2 : ComposableImpl {
            public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerivedOverloads2
            public typealias SwiftABI = __ABI_test_component.IUnsealedDerivedOverloads2
            public typealias Class = UnsealedDerived2
            public typealias SwiftProjection = WinRTClassWeakReference<Class>
            public enum Default : AbiInterface {
                public typealias CABI = __x_ABI_Ctest__component_CIUnsealedDerived2
                public typealias SwiftABI = __ABI_test_component.IUnsealedDerived2
            }
        }
        @_spi(WinRTInternal)
        public typealias Composable = IUnsealedDerivedOverloads2
    }

}
@_spi(WinRTInternal)
public class UnsealedDerived2Maker: MakeFromAbi {
    public typealias SwiftType = UnsealedDerived2
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return UnsealedDerived2(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_test_component {
    private static let IID___x_ABI_Ctest__component_CIUnsealedDerived2: test_component.IID = .init(
        Data1: 0xA58C23CF, Data2: 0x4DC4, Data3: 0x59C5, Data4: ( 0x8D,0xE3,0x9F,0x06,0x3B,0x21,0x8D,0xDE ) // A58C23CF-4DC4-59C5-8DE3-9F063B218DDE
    ) 
    public class IUnsealedDerived2: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerived2 }

        public func Method() throws {
            _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerived2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Method(pThis))
            }
        }

    }

    private static let IID___x_ABI_Ctest__component_CIUnsealedDerived2Factory: test_component.IID = .init(
        Data1: 0x136F2143, Data2: 0x1044, Data3: 0x5A97, Data4: ( 0x8C,0x91,0x1E,0xF2,0x81,0x67,0xD9,0xFC ) // 136F2143-1044-5A97-8C91-1EF28167D9FC
    ) 
    public class IUnsealedDerived2Factory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerived2Factory }

        public func CreateInstance(_ prop: Int32, _ baseInterface: UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerived2Bridge.Composable>?, _ innerInterface: inout test_component.IInspectable?) throws -> IUnsealedDerived2 {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerived2Factory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, prop, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = test_component.IInspectable(_innerInterface!)
            }
            return IUnsealedDerived2(value!)
        }

    }

    private static let IID___x_ABI_Ctest__component_CIUnsealedDerived2ProtectedFactory: test_component.IID = .init(
        Data1: 0x0978D147, Data2: 0x77BF, Data3: 0x5E0A, Data4: ( 0xA1,0x64,0xCA,0x95,0x1B,0xCA,0xB8,0xB4 ) // 0978D147-77BF-5E0A-A164-CA951BCAB8B4
    ) 
    public class IUnsealedDerived2ProtectedFactory: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_Ctest__component_CIUnsealedDerived2ProtectedFactory }

        public func CreateInstance(_ baseInterface: UnsealedWinRTClassWrapper<__IMPL_test_component.UnsealedDerived2Bridge.Composable>?, _ innerInterface: inout test_component.IInspectable?) throws -> IUnsealedDerived2 {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_Ctest__component_CIUnsealedDerived2ProtectedFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = test_component.IInspectable(_innerInterface!)
            }
            return IUnsealedDerived2(value!)
        }

    }

}
