// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties)
public final class BasicProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IBasicProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties>?) -> BasicProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.datemodified)
    public var dateModified : test_component.DateTime {
        get { try! _default.get_DateModifiedImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.itemdate)
    public var itemDate : test_component.DateTime {
        get { try! _default.get_ItemDateImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.size)
    public var size : UInt64 {
        get { try! _default.get_SizeImpl() }
    }

    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.basicproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    deinit {
        _default = nil
        _IStorageItemExtraProperties = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties)
public final class DocumentProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IDocumentProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIDocumentProperties>?) -> DocumentProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.author)
    public var author : AnyIVector<String>! {
        get { try! _default.get_AuthorImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.comment)
    public var comment : String {
        get { try! _default.get_CommentImpl() }
        set { try! _default.put_CommentImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_KeywordsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.documentproperties.title)
    public var title : String {
        get { try! _default.get_TitleImpl() }
        set { try! _default.put_TitleImpl(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties)
public final class ImageProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IImageProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIImageProperties>?) -> ImageProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.cameramanufacturer)
    public var cameraManufacturer : String {
        get { try! _default.get_CameraManufacturerImpl() }
        set { try! _default.put_CameraManufacturerImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.cameramodel)
    public var cameraModel : String {
        get { try! _default.get_CameraModelImpl() }
        set { try! _default.put_CameraModelImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.datetaken)
    public var dateTaken : test_component.DateTime {
        get { try! _default.get_DateTakenImpl() }
        set { try! _default.put_DateTakenImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.height)
    public var height : UInt32 {
        get { try! _default.get_HeightImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_KeywordsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.latitude)
    public var latitude : Double? {
        get { try! _default.get_LatitudeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.longitude)
    public var longitude : Double? {
        get { try! _default.get_LongitudeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.orientation)
    public var orientation : PhotoOrientation {
        get { try! _default.get_OrientationImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.peoplenames)
    public var peopleNames : AnyIVectorView<String>! {
        get { try! _default.get_PeopleNamesImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_RatingImpl() }
        set { try! _default.put_RatingImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.title)
    public var title : String {
        get { try! _default.get_TitleImpl() }
        set { try! _default.put_TitleImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.imageproperties.width)
    public var width : UInt32 {
        get { try! _default.get_WidthImpl() }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties)
public final class MusicProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IMusicProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties>?) -> MusicProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.album)
    public var album : String {
        get { try! _default.get_AlbumImpl() }
        set { try! _default.put_AlbumImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.albumartist)
    public var albumArtist : String {
        get { try! _default.get_AlbumArtistImpl() }
        set { try! _default.put_AlbumArtistImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.artist)
    public var artist : String {
        get { try! _default.get_ArtistImpl() }
        set { try! _default.put_ArtistImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.bitrate)
    public var bitrate : UInt32 {
        get { try! _default.get_BitrateImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.composers)
    public var composers : AnyIVector<String>! {
        get { try! _default.get_ComposersImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.conductors)
    public var conductors : AnyIVector<String>! {
        get { try! _default.get_ConductorsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.duration)
    public var duration : test_component.TimeSpan {
        get { try! _default.get_DurationImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.genre)
    public var genre : AnyIVector<String>! {
        get { try! _default.get_GenreImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.producers)
    public var producers : AnyIVector<String>! {
        get { try! _default.get_ProducersImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.publisher)
    public var publisher : String {
        get { try! _default.get_PublisherImpl() }
        set { try! _default.put_PublisherImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_RatingImpl() }
        set { try! _default.put_RatingImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.subtitle)
    public var subtitle : String {
        get { try! _default.get_SubtitleImpl() }
        set { try! _default.put_SubtitleImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.title)
    public var title : String {
        get { try! _default.get_TitleImpl() }
        set { try! _default.put_TitleImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.tracknumber)
    public var trackNumber : UInt32 {
        get { try! _default.get_TrackNumberImpl() }
        set { try! _default.put_TrackNumberImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.writers)
    public var writers : AnyIVector<String>! {
        get { try! _default.get_WritersImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.musicproperties.year)
    public var year : UInt32 {
        get { try! _default.get_YearImpl() }
        set { try! _default.put_YearImpl(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties)
public final class StorageItemContentProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IStorageItemContentProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties>?) -> StorageItemContentProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getmusicpropertiesasync)
    public func getMusicPropertiesAsync() throws -> AnyIAsyncOperation<MusicProperties?>! {
        try _default.GetMusicPropertiesAsyncImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getvideopropertiesasync)
    public func getVideoPropertiesAsync() throws -> AnyIAsyncOperation<VideoProperties?>! {
        try _default.GetVideoPropertiesAsyncImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getimagepropertiesasync)
    public func getImagePropertiesAsync() throws -> AnyIAsyncOperation<ImageProperties?>! {
        try _default.GetImagePropertiesAsyncImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemcontentproperties.getdocumentpropertiesasync)
    public func getDocumentPropertiesAsync() throws -> AnyIAsyncOperation<DocumentProperties?>! {
        try _default.GetDocumentPropertiesAsyncImpl()
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail)
public final class StorageItemThumbnail : WinRTClass, test_component.IClosable, test_component.IInputStream, test_component.IOutputStream, test_component.IRandomAccessStream, test_component.IContentTypeProvider, test_component.IRandomAccessStreamWithContentType {
    private typealias SwiftABI = __ABI_Windows_Storage_Streams.IRandomAccessStreamWithContentType
    private typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>?) -> StorageItemThumbnail? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.close)
    public func close() throws {
        try _IClosable.CloseImpl()
    }

    private lazy var _IInputStream: __ABI_Windows_Storage_Streams.IInputStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.readasync)
    public func readAsync(_ buffer: test_component.AnyIBuffer!, _ count: UInt32, _ options: test_component.InputStreamOptions) throws -> AnyIAsyncOperationWithProgress<test_component.AnyIBuffer?, UInt32>! {
        try _IInputStream.ReadAsyncImpl(buffer, count, options)
    }

    private lazy var _IOutputStream: __ABI_Windows_Storage_Streams.IOutputStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.writeasync)
    public func writeAsync(_ buffer: test_component.AnyIBuffer!) throws -> AnyIAsyncOperationWithProgress<UInt32, UInt32>! {
        try _IOutputStream.WriteAsyncImpl(buffer)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.flushasync)
    public func flushAsync() throws -> AnyIAsyncOperation<Bool>! {
        try _IOutputStream.FlushAsyncImpl()
    }

    private lazy var _IRandomAccessStream: __ABI_Windows_Storage_Streams.IRandomAccessStream! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.getinputstreamat)
    public func getInputStreamAt(_ position: UInt64) throws -> test_component.AnyIInputStream! {
        try _IRandomAccessStream.GetInputStreamAtImpl(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.getoutputstreamat)
    public func getOutputStreamAt(_ position: UInt64) throws -> test_component.AnyIOutputStream! {
        try _IRandomAccessStream.GetOutputStreamAtImpl(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.seek)
    public func seek(_ position: UInt64) throws {
        try _IRandomAccessStream.SeekImpl(position)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.clonestream)
    public func cloneStream() throws -> test_component.AnyIRandomAccessStream! {
        try _IRandomAccessStream.CloneStreamImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.canread)
    public var canRead : Bool {
        get { try! _IRandomAccessStream.get_CanReadImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.canwrite)
    public var canWrite : Bool {
        get { try! _IRandomAccessStream.get_CanWriteImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.position)
    public var position : UInt64 {
        get { try! _IRandomAccessStream.get_PositionImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.size)
    public var size : UInt64 {
        get { try! _IRandomAccessStream.get_SizeImpl() }
        set { try! _IRandomAccessStream.put_SizeImpl(newValue) }
    }

    private lazy var _IContentTypeProvider: __ABI_Windows_Storage_Streams.IContentTypeProvider! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.contenttype)
    public var contentType : String {
        get { try! _IContentTypeProvider.get_ContentTypeImpl() }
    }

    private lazy var _IThumbnailProperties: __ABI_Windows_Storage_FileProperties.IThumbnailProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.originalheight)
    public var originalHeight : UInt32 {
        get { try! _IThumbnailProperties.get_OriginalHeightImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.originalwidth)
    public var originalWidth : UInt32 {
        get { try! _IThumbnailProperties.get_OriginalWidthImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.returnedsmallercachedsize)
    public var returnedSmallerCachedSize : Bool {
        get { try! _IThumbnailProperties.get_ReturnedSmallerCachedSizeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.storageitemthumbnail.type)
    public var type : ThumbnailType {
        get { try! _IThumbnailProperties.get_TypeImpl() }
    }

    deinit {
        _IClosable = nil
        _IInputStream = nil
        _IOutputStream = nil
        _IRandomAccessStream = nil
        _IContentTypeProvider = nil
        _default = nil
        _IThumbnailProperties = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties)
public final class VideoProperties : WinRTClass, IStorageItemExtraProperties {
    private typealias SwiftABI = __ABI_Windows_Storage_FileProperties.IVideoProperties
    private typealias CABI = __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties>?) -> VideoProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: test_component.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IStorageItemExtraProperties: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.retrievepropertiesasync)
    public func retrievePropertiesAsync(_ propertiesToRetrieve: AnyIIterable<String>!) throws -> AnyIAsyncOperation<AnyIMap<String, Any?>?>! {
        try _IStorageItemExtraProperties.RetrievePropertiesAsyncImpl(propertiesToRetrieve)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.savepropertiesasync)
    public func savePropertiesAsync(_ propertiesToSave: AnyIIterable<AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncImpl(propertiesToSave)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.savepropertiesasync)
    public func savePropertiesAsync() throws -> test_component.AnyIAsyncAction! {
        try _IStorageItemExtraProperties.SavePropertiesAsyncOverloadDefaultImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.bitrate)
    public var bitrate : UInt32 {
        get { try! _default.get_BitrateImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.directors)
    public var directors : AnyIVector<String>! {
        get { try! _default.get_DirectorsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.duration)
    public var duration : test_component.TimeSpan {
        get { try! _default.get_DurationImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.height)
    public var height : UInt32 {
        get { try! _default.get_HeightImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.keywords)
    public var keywords : AnyIVector<String>! {
        get { try! _default.get_KeywordsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.latitude)
    public var latitude : Double? {
        get { try! _default.get_LatitudeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.longitude)
    public var longitude : Double? {
        get { try! _default.get_LongitudeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.orientation)
    public var orientation : VideoOrientation {
        get { try! _default.get_OrientationImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.producers)
    public var producers : AnyIVector<String>! {
        get { try! _default.get_ProducersImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.publisher)
    public var publisher : String {
        get { try! _default.get_PublisherImpl() }
        set { try! _default.put_PublisherImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.rating)
    public var rating : UInt32 {
        get { try! _default.get_RatingImpl() }
        set { try! _default.put_RatingImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.subtitle)
    public var subtitle : String {
        get { try! _default.get_SubtitleImpl() }
        set { try! _default.put_SubtitleImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.title)
    public var title : String {
        get { try! _default.get_TitleImpl() }
        set { try! _default.put_TitleImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.width)
    public var width : UInt32 {
        get { try! _default.get_WidthImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.writers)
    public var writers : AnyIVector<String>! {
        get { try! _default.get_WritersImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.videoproperties.year)
    public var year : UInt32 {
        get { try! _default.get_YearImpl() }
        set { try! _default.put_YearImpl(newValue) }
    }

    deinit {
        _IStorageItemExtraProperties = nil
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.istorageitemextraproperties)
public protocol IStorageItemExtraProperties : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.istorageitemextraproperties.retrievepropertiesasync)
    func retrievePropertiesAsync(_ propertiesToRetrieve: test_component.AnyIIterable<String>!) throws -> test_component.AnyIAsyncOperation<test_component.AnyIMap<String, Any?>?>!
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.istorageitemextraproperties.savepropertiesasync)
    func savePropertiesAsync(_ propertiesToSave: test_component.AnyIIterable<test_component.AnyIKeyValuePair<String, Any?>?>!) throws -> test_component.AnyIAsyncAction!
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.fileproperties.istorageitemextraproperties.savepropertiesasync)
    func savePropertiesAsync() throws -> test_component.AnyIAsyncAction!
}

extension IStorageItemExtraProperties {
    public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_Storage_FileProperties.IStorageItemExtraPropertiesWrapper.IID:
                let wrapper = __ABI_Windows_Storage_FileProperties.IStorageItemExtraPropertiesWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIStorageItemExtraProperties = any IStorageItemExtraProperties

public struct PhotoOrientation : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let unspecified = Self(rawValue: 0)

    public static let normal = Self(rawValue: 1)

    public static let flipHorizontal = Self(rawValue: 2)

    public static let rotate180 = Self(rawValue: 3)

    public static let flipVertical = Self(rawValue: 4)

    public static let transpose = Self(rawValue: 5)

    public static let rotate270 = Self(rawValue: 6)

    public static let transverse = Self(rawValue: 7)

    public static let rotate90 = Self(rawValue: 8)

}
public struct PropertyPrefetchOptions : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let none = Self(rawValue: 0)

    public static let musicProperties = Self(rawValue: 1)

    public static let videoProperties = Self(rawValue: 2)

    public static let imageProperties = Self(rawValue: 4)

    public static let documentProperties = Self(rawValue: 8)

    public static let basicProperties = Self(rawValue: 16)

}
public struct ThumbnailMode : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let picturesView = Self(rawValue: 0)

    public static let videosView = Self(rawValue: 1)

    public static let musicView = Self(rawValue: 2)

    public static let documentsView = Self(rawValue: 3)

    public static let listView = Self(rawValue: 4)

    public static let singleItem = Self(rawValue: 5)

}
public struct ThumbnailOptions : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let none = Self(rawValue: 0)

    public static let returnOnlyIfCached = Self(rawValue: 1)

    public static let resizeThumbnail = Self(rawValue: 2)

    public static let useCurrentScale = Self(rawValue: 4)

}
public struct ThumbnailType : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let image = Self(rawValue: 0)

    public static let icon = Self(rawValue: 1)

}
public struct VideoOrientation : RawRepresentable, Hashable, Codable, Sendable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    public static let normal = Self(rawValue: 0)

    public static let rotate90 = Self(rawValue: 90)

    public static let rotate180 = Self(rawValue: 180)

    public static let rotate270 = Self(rawValue: 270)

}
