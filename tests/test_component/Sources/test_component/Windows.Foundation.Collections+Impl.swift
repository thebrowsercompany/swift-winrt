// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Ctest_component

public enum __IMPL_Windows_Foundation_Collections {
    public class IPropertySetImpl : IPropertySet, WinRTAbiBridge {
        public typealias K = String
        public typealias V = Any?
        public typealias T = AnyIKeyValuePair<String, Any?>?
        public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet
        public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IPropertySet
        public typealias SwiftProjection = AnyIPropertySet
        private (set) public var _default: SwiftABI
        public var thisPtr: test_component.IInspectable { _default }
        public static func from(abi: UnsafeMutablePointer<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IPropertySetImpl(abi)
        }
        public init(_ fromAbi: UnsafeMutablePointer<CABI>) {
            _default = SwiftABI(fromAbi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Foundation_Collections.IPropertySetVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
        internal lazy var _IObservableMap: IObservableMapString_Any = try! _default.QueryInterface()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.mapchanged)
        public lazy var mapChanged : Event<MapChangedEventHandler<String, Any?>> = {
          .init(
            add: { [weak this = _IObservableMap] in
              guard let this else { return .init() }
              let wrapper = test_component.__x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectableWrapper($0)
              let abi = try! wrapper?.toABI { $0 }
              return try! this.add_MapChangedImpl(abi)
            },
            remove: { [weak this = _IObservableMap] in
             try? this?.remove_MapChangedImpl($0)
           }
          )
        }()

        internal lazy var _IMap: IMapString_Any = try! _default.QueryInterface()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.lookup)
        public func lookup(_ key: String) -> Any? {
            let _key = try! HString(key)
            let result = try! _IMap.LookupImpl(_key.get())
            return __ABI_.AnyWrapper.unwrapFrom(abi: result)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.haskey)
        public func hasKey(_ key: String) -> Bool {
            let _key = try! HString(key)
            let result = try! _IMap.HasKeyImpl(_key.get())
            return .init(from: result)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.getview)
        public func getView() -> AnyIMapView<String, Any?>? {
            let result = try! _IMap.GetViewImpl()
            return test_component.__x_ABI_C__FIMapView_2_HSTRING_IInspectableWrapper.unwrapFrom(abi: result)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.insert)
        public func insert(_ key: String, _ value: Any?) -> Bool {
            let _key = try! HString(key)
            let valueWrapper = __ABI_.AnyWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            let result = try! _IMap.InsertImpl(_key.get(), _value)
            return .init(from: result)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.remove)
        public func remove(_ key: String) {
            let _key = try! HString(key)
            try! _IMap.RemoveImpl(_key.get())
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.clear)
        public func clear() {
            try! _IMap.ClearImpl()
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.size)
        public var size : UInt32 {
            get {
                let result = try! _IMap.get_SizeImpl()
                return result
            }

        }

        internal lazy var _IIterable: IIterableIKeyValuePairString_Any = try! _default.QueryInterface()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.first)
        public func first() -> AnyIIterator<AnyIKeyValuePair<String, Any?>?>? {
            let result = try! _IIterable.FirstImpl()
            return test_component.__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableWrapper.unwrapFrom(abi: result)
        }

    }

    public class IVectorChangedEventArgsImpl : IVectorChangedEventArgs, WinRTAbiBridge {
        public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs
        public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IVectorChangedEventArgs
        public typealias SwiftProjection = AnyIVectorChangedEventArgs
        private (set) public var _default: SwiftABI
        public var thisPtr: test_component.IInspectable { _default }
        public static func from(abi: UnsafeMutablePointer<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IVectorChangedEventArgsImpl(abi)
        }
        public init(_ fromAbi: UnsafeMutablePointer<CABI>) {
            _default = SwiftABI(fromAbi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Foundation_Collections.IVectorChangedEventArgsVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.collectionchange)
        public var collectionChange : CollectionChange {
            get {
                let value = try! _default.get_CollectionChangeImpl()
                return value
            }

        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.index)
        public var index : UInt32 {
            get {
                let value = try! _default.get_IndexImpl()
                return value
            }

        }

    }

}
@_spi(__MakeFromAbi_DoNotImport)
public class IPropertySet_MakeFromAbi : MakeFromAbi {
    public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet
    public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IPropertySet
    public typealias SwiftProjection = AnyIPropertySet
    public static func from(abi: UnsafeMutableRawPointer?) -> SwiftProjection? {
        guard let abi else { return nil }
        let swiftAbi: SwiftABI = try! test_component.IInspectable(abi).QueryInterface()
        return __IMPL_Windows_Foundation_Collections.IPropertySetImpl(RawPointer(swiftAbi)!)
    }
}

@_spi(__MakeFromAbi_DoNotImport)
public class IVectorChangedEventArgs_MakeFromAbi : MakeFromAbi {
    public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs
    public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IVectorChangedEventArgs
    public typealias SwiftProjection = AnyIVectorChangedEventArgs
    public static func from(abi: UnsafeMutableRawPointer?) -> SwiftProjection? {
        guard let abi else { return nil }
        let swiftAbi: SwiftABI = try! test_component.IInspectable(abi).QueryInterface()
        return __IMPL_Windows_Foundation_Collections.IVectorChangedEventArgsImpl(RawPointer(swiftAbi)!)
    }
}

