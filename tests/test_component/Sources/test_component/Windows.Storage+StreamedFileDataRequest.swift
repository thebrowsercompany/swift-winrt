// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streamedfiledatarequest)
public final class StreamedFileDataRequest : WinRTClass, test_component.IClosable, test_component.IOutputStream, IStreamedFileDataRequest {
    private typealias SwiftABI = __ABI_Windows_Storage_Streams.IOutputStream
    private typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIOutputStream
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: test_component.IInspectable) {
        super.init(fromAbi)
    }

    override public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streamedfiledatarequest.close)
    public func close() throws {
        try _IClosable.Close()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streamedfiledatarequest.writeasync)
    public func writeAsync(_ buffer: test_component.AnyIBuffer!) throws -> AnyIAsyncOperationWithProgress<UInt32, UInt32>! {
        try _default.WriteAsync(buffer)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streamedfiledatarequest.flushasync)
    public func flushAsync() throws -> AnyIAsyncOperation<Bool>! {
        try _default.FlushAsync()
    }

    private lazy var _IStreamedFileDataRequest: __ABI_Windows_Storage.IStreamedFileDataRequest! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.storage.streamedfiledatarequest.failandclose)
    public func failAndClose(_ failureMode: StreamedFileFailureMode) throws {
        try _IStreamedFileDataRequest.FailAndClose(failureMode)
    }

    deinit {
        _IClosable = nil
        _default = nil
        _IStreamedFileDataRequest = nil
    }
}


// MARK: - Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Storage {
    public enum StreamedFileDataRequestBridge: AbiBridge {
        public typealias SwiftProjection = StreamedFileDataRequest
        public typealias CABI = __x_ABI_CWindows_CStorage_CStreams_CIOutputStream
        public static func from(abi: ComPtr<__x_ABI_CWindows_CStorage_CStreams_CIOutputStream>?) -> StreamedFileDataRequest? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: test_component.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class StreamedFileDataRequestMaker: MakeFromAbi {
    public typealias SwiftType = StreamedFileDataRequest
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        return StreamedFileDataRequest(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
extension __ABI_Windows_Storage {
}
