// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
import Ctest_component

// MARK: - IIterable`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterable-1)
public protocol IIterable<T> : WinRTInterface {
    associatedtype T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterable-1.first)
    func first() -> test_component.AnyIIterator<T>?
}

public typealias AnyIIterable<T> = any IIterable<T>

// MARK: - IIterable Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIIterable_1_T: test_component.IID = .init(
        Data1: 0xFAA585EA, Data2: 0x6214, Data3: 0x4217, Data4: ( 0xAF,0xDA,0x7F,0x46,0xDE,0x58,0x69,0xB3 ) // FAA585EA-6214-4217-AFDA-7F46DE5869B3
    ) 

}
// MARK: - IIterator`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterator-1)
public protocol IIterator<T> : WinRTInterface {
    associatedtype T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterator-1.movenext)
    func moveNext() -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterator-1.getmany)
    func getMany(_ items: inout [T]) -> UInt32
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterator-1.current)
    var current: T { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iiterator-1.hascurrent)
    var hasCurrent: Bool { get }
}

public typealias AnyIIterator<T> = any IIterator<T>

// MARK: - IIterator Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIIterator_1_T: test_component.IID = .init(
        Data1: 0x6A79E863, Data2: 0x4300, Data3: 0x459A, Data4: ( 0x99,0x66,0xCB,0xB6,0x60,0x96,0x3E,0xE1 ) // 6A79E863-4300-459A-9966-CBB660963EE1
    ) 

}
// MARK: - IKeyValuePair`2

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ikeyvaluepair-2)
public protocol IKeyValuePair<K,V> : WinRTInterface {
    associatedtype K
    associatedtype V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ikeyvaluepair-2.key)
    var key: K { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ikeyvaluepair-2.value)
    var value: V { get }
}

public typealias AnyIKeyValuePair<K,V> = any IKeyValuePair<K,V>

// MARK: - IKeyValuePair Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIKeyValuePair_2_K_V: test_component.IID = .init(
        Data1: 0x02B51929, Data2: 0xC1C4, Data3: 0x4A7E, Data4: ( 0x89,0x40,0x03,0x12,0xB5,0xC1,0x85,0x00 ) // 02B51929-C1C4-4A7E-8940-0312B5C18500
    ) 

}
// MARK: - IMapChangedEventArgs`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapchangedeventargs-1)
public protocol IMapChangedEventArgs<K> : WinRTInterface {
    associatedtype K
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapchangedeventargs-1.collectionchange)
    var collectionChange: test_component.CollectionChange { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapchangedeventargs-1.key)
    var key: K { get }
}

public typealias AnyIMapChangedEventArgs<K> = any IMapChangedEventArgs<K>

// MARK: - IMapChangedEventArgs Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIMapChangedEventArgs_1_K: test_component.IID = .init(
        Data1: 0x9939F4DF, Data2: 0x050A, Data3: 0x4C0F, Data4: ( 0xAA,0x60,0x77,0x07,0x5F,0x9C,0x47,0x77 ) // 9939F4DF-050A-4C0F-AA60-77075F9C4777
    ) 

}
// MARK: - IMapView`2

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapview-2)
public protocol IMapView<K,V> : IIterable where T == AnyIKeyValuePair<K,V>? {
    associatedtype K
    associatedtype V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapview-2.lookup)
    func lookup(_ key: K) -> V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapview-2.haskey)
    func hasKey(_ key: K) -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapview-2.split)
    func split(_ first: inout test_component.AnyIMapView<K, V>?, _ second: inout test_component.AnyIMapView<K, V>?)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imapview-2.size)
    var size: UInt32 { get }
}

public typealias AnyIMapView<K,V> = any IMapView<K,V>

// MARK: - IMapView Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIMapView_2_K_V: test_component.IID = .init(
        Data1: 0xE480CE40, Data2: 0xA338, Data3: 0x4ADA, Data4: ( 0xAD,0xCF,0x27,0x22,0x72,0xE4,0x8C,0xB9 ) // E480CE40-A338-4ADA-ADCF-272272E48CB9
    ) 

}
// MARK: - IMap`2

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2)
public protocol IMap<K,V> : IIterable where T == AnyIKeyValuePair<K,V>? {
    associatedtype K
    associatedtype V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.lookup)
    func lookup(_ key: K) -> V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.haskey)
    func hasKey(_ key: K) -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.getview)
    func getView() -> test_component.AnyIMapView<K, V>?
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.insert)
    func insert(_ key: K, _ value: V) -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.remove)
    func remove(_ key: K)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.clear)
    func clear()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.imap-2.size)
    var size: UInt32 { get }
}

public typealias AnyIMap<K,V> = any IMap<K,V>

// MARK: - IMap Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIMap_2_K_V: test_component.IID = .init(
        Data1: 0x3C2925FE, Data2: 0x8519, Data3: 0x45C1, Data4: ( 0xAA,0x79,0x19,0x7B,0x67,0x18,0xC1,0xC1 ) // 3C2925FE-8519-45C1-AA79-197B6718C1C1
    ) 

}
// MARK: - IObservableMap`2

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iobservablemap-2)
public protocol IObservableMap<K,V> : IIterable, IMap {
    associatedtype K
    associatedtype V
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iobservablemap-2.mapchanged)
    var mapChanged: Event<MapChangedEventHandler<K,V>> { get }
}

public typealias AnyIObservableMap<K,V> = any IObservableMap<K,V>

// MARK: - IObservableMap Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIObservableMap_2_K_V: test_component.IID = .init(
        Data1: 0x65DF2BF5, Data2: 0xBF39, Data3: 0x41B5, Data4: ( 0xAE,0xBC,0x5A,0x9D,0x86,0x5E,0x47,0x2B ) // 65DF2BF5-BF39-41B5-AEBC-5A9D865E472B
    ) 

}
// MARK: - IObservableVector`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iobservablevector-1)
public protocol IObservableVector<T> : IIterable, IVector {
    associatedtype T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.iobservablevector-1.vectorchanged)
    var vectorChanged: Event<VectorChangedEventHandler<T>> { get }
}

public typealias AnyIObservableVector<T> = any IObservableVector<T>

// MARK: - IObservableVector Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIObservableVector_1_T: test_component.IID = .init(
        Data1: 0x5917EB53, Data2: 0x50B4, Data3: 0x4A0D, Data4: ( 0xB3,0x09,0x65,0x86,0x2B,0x3F,0x1D,0xBC ) // 5917EB53-50B4-4A0D-B309-65862B3F1DBC
    ) 

}
// MARK: - IPropertySet

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset)
public protocol IPropertySet : IObservableMap<String, Any?>, IMap<String, Any?>, IIterable<AnyIKeyValuePair<String, Any?>?> {
}

extension IPropertySet {
    public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_Foundation_Collections.IPropertySetWrapper.IID:
                let wrapper = __ABI_Windows_Foundation_Collections.IPropertySetWrapper(self)
                return wrapper!.queryInterface(iid)
            case test_component.__x_ABI_C__FIObservableMap_2_HSTRING_IInspectableWrapper.IID:
                let wrapper = test_component.__x_ABI_C__FIObservableMap_2_HSTRING_IInspectableWrapper(self)
                return wrapper!.queryInterface(iid)
            case test_component.__x_ABI_C__FIMap_2_HSTRING_IInspectableWrapper.IID:
                let wrapper = test_component.__x_ABI_C__FIMap_2_HSTRING_IInspectableWrapper(self)
                return wrapper!.queryInterface(iid)
            case test_component.__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableWrapper.IID:
                let wrapper = test_component.__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIPropertySet = any IPropertySet

// MARK: - IPropertySet Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
    public enum IPropertySetBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet
        public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IPropertySet
        public typealias SwiftProjection = AnyIPropertySet
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IPropertySetImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Foundation_Collections.IPropertySetVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IPropertySetImpl: IPropertySet, WinRTAbiImpl {
        fileprivate typealias Bridge = IPropertySetBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: test_component.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        public typealias K = String
        public typealias V = Any?
        public typealias T = AnyIKeyValuePair<String, Any?>?
        private lazy var _IObservableMap: IObservableMapString_Any! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.mapchanged)
        fileprivate lazy var mapChanged : Event<MapChangedEventHandler<String, Any?>> = {
          .init(
            add: { [weak self] in
              guard let this = self?._IObservableMap else { return .init() }
              return try! this.add_MapChanged($0)
            },
            remove: { [weak self] in
             try? self?._IObservableMap.remove_MapChanged($0)
           }
          )
        }()

        private lazy var _IMap: IMapString_Any! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.lookup)
        fileprivate func lookup(_ key: String) -> Any? {
            try! _IMap.Lookup(key)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.haskey)
        fileprivate func hasKey(_ key: String) -> Bool {
            try! _IMap.HasKey(key)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.getview)
        fileprivate func getView() -> AnyIMapView<String, Any?>? {
            try! _IMap.GetView()
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.insert)
        fileprivate func insert(_ key: String, _ value: Any?) -> Bool {
            try! _IMap.Insert(key, value)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.remove)
        fileprivate func remove(_ key: String) {
            try! _IMap.Remove(key)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.clear)
        fileprivate func clear() {
            try! _IMap.Clear()
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.size)
        fileprivate var size : UInt32 {
            get { try! _IMap.get_Size() }
        }

        private lazy var _IIterable: IIterableIKeyValuePairString_Any! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ipropertyset.first)
        fileprivate func first() -> AnyIIterator<AnyIKeyValuePair<String, Any?>?>? {
            try! _IIterable.First()
        }

    }

}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_CWindows_CFoundation_CCollections_CIPropertySet: test_component.IID = .init(
        Data1: 0x8A43ED9F, Data2: 0xF4E6, Data3: 0x4421, Data4: ( 0xAC,0xF9,0x1D,0xAB,0x29,0x86,0x82,0x0C ) // 8A43ED9F-F4E6-4421-ACF9-1DAB2986820C
    ) 

    public class IPropertySet: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CCollections_CIPropertySet }

    }

    internal static var IPropertySetVTable: __x_ABI_CWindows_CFoundation_CCollections_CIPropertySetVtbl = .init(
        QueryInterface: { IPropertySetWrapper.queryInterface($0, $1, $2) },
        AddRef: { IPropertySetWrapper.addRef($0) },
        Release: { IPropertySetWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<test_component.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 6).assumingMemoryBound(to: test_component.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Foundation_Collections.IPropertySetWrapper.IID
            iids[3] = test_component.__x_ABI_C__FIObservableMap_2_HSTRING_IInspectableWrapper.IID
            iids[4] = test_component.__x_ABI_C__FIMap_2_HSTRING_IInspectableWrapper.IID
            iids[5] = test_component.__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableWrapper.IID
            $1!.pointee = 6
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Foundation.Collections.IPropertySet").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        }
    )

    public typealias IPropertySetWrapper = InterfaceWrapperBase<__IMPL_Windows_Foundation_Collections.IPropertySetBridge>
}
@_spi(WinRTInternal)
public class IPropertySetMaker: MakeFromAbi {
    public typealias SwiftType = AnyIPropertySet
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        let swiftAbi: __ABI_Windows_Foundation_Collections.IPropertySet = try! abi.QueryInterface()
        return __IMPL_Windows_Foundation_Collections.IPropertySetBridge.from(abi: RawPointer(swiftAbi))!
    }
}
// MARK: - IVectorChangedEventArgs

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs)
public protocol IVectorChangedEventArgs : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.collectionchange)
    var collectionChange: test_component.CollectionChange { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.index)
    var index: UInt32 { get }
}

extension IVectorChangedEventArgs {
    public func queryInterface(_ iid: test_component.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_Foundation_Collections.IVectorChangedEventArgsWrapper.IID:
                let wrapper = __ABI_Windows_Foundation_Collections.IVectorChangedEventArgsWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIVectorChangedEventArgs = any IVectorChangedEventArgs

// MARK: - IVectorChangedEventArgs Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
    public enum IVectorChangedEventArgsBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs
        public typealias SwiftABI = __ABI_Windows_Foundation_Collections.IVectorChangedEventArgs
        public typealias SwiftProjection = AnyIVectorChangedEventArgs
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IVectorChangedEventArgsImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Foundation_Collections.IVectorChangedEventArgsVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IVectorChangedEventArgsImpl: IVectorChangedEventArgs, WinRTAbiImpl {
        fileprivate typealias Bridge = IVectorChangedEventArgsBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: test_component.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.collectionchange)
        fileprivate var collectionChange : CollectionChange {
            get { try! _default.get_CollectionChange() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorchangedeventargs.index)
        fileprivate var index : UInt32 {
            get { try! _default.get_Index() }
        }

    }

}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs: test_component.IID = .init(
        Data1: 0x575933DF, Data2: 0x34FE, Data3: 0x4480, Data4: ( 0xAF,0x15,0x07,0x69,0x1F,0x3D,0x5D,0x9B ) // 575933DF-34FE-4480-AF15-07691F3D5D9B
    ) 

    public class IVectorChangedEventArgs: test_component.IInspectable {
        override public class var IID: test_component.IID { IID___x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs }

        open func get_CollectionChange() throws -> test_component.CollectionChange {
            var value: __x_ABI_CWindows_CFoundation_CCollections_CCollectionChange = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CollectionChange(pThis, &value))
            }
            return value
        }

        open func get_Index() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Index(pThis, &value))
            }
            return value
        }

    }

    internal static var IVectorChangedEventArgsVTable: __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgsVtbl = .init(
        QueryInterface: { IVectorChangedEventArgsWrapper.queryInterface($0, $1, $2) },
        AddRef: { IVectorChangedEventArgsWrapper.addRef($0) },
        Release: { IVectorChangedEventArgsWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<test_component.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: test_component.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Foundation_Collections.IVectorChangedEventArgsWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Foundation.Collections.IVectorChangedEventArgs").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_CollectionChange: {
            guard let __unwrapped__instance = IVectorChangedEventArgsWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.collectionChange
            $1?.initialize(to: value)
            return S_OK
        },

        get_Index: {
            guard let __unwrapped__instance = IVectorChangedEventArgsWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.index
            $1?.initialize(to: value)
            return S_OK
        }
    )

    public typealias IVectorChangedEventArgsWrapper = InterfaceWrapperBase<__IMPL_Windows_Foundation_Collections.IVectorChangedEventArgsBridge>
}
@_spi(WinRTInternal)
public class IVectorChangedEventArgsMaker: MakeFromAbi {
    public typealias SwiftType = AnyIVectorChangedEventArgs
    public static func from(abi: test_component.IInspectable) -> SwiftType {
        let swiftAbi: __ABI_Windows_Foundation_Collections.IVectorChangedEventArgs = try! abi.QueryInterface()
        return __IMPL_Windows_Foundation_Collections.IVectorChangedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
    }
}
// MARK: - IVectorView`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorview-1)
public protocol IVectorView<T> : IIterable, Collection where Element == T, Index == Int {
    associatedtype T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorview-1.getat)
    func getAt(_ index: UInt32) -> T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorview-1.indexof)
    func indexOf(_ value: T, _ index: inout UInt32) -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorview-1.getmany)
    func getMany(_ startIndex: UInt32, _ items: inout [T]) -> UInt32
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivectorview-1.size)
    var size: UInt32 { get }
}

public typealias AnyIVectorView<T> = any IVectorView<T>

// MARK: - IVectorView Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIVectorView_1_T: test_component.IID = .init(
        Data1: 0xBBE1FA4C, Data2: 0xB0E3, Data3: 0x4583, Data4: ( 0xBA,0xEF,0x1F,0x1B,0x2E,0x48,0x3E,0x56 ) // BBE1FA4C-B0E3-4583-BAEF-1F1B2E483E56
    ) 

}
// MARK: - IVector`1

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1)
public protocol IVector<T> : IIterable, Collection where Element == T, Index == Int {
    associatedtype T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.getat)
    func getAt(_ index: UInt32) -> T
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.getview)
    func getView() -> test_component.AnyIVectorView<T>?
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.indexof)
    func indexOf(_ value: T, _ index: inout UInt32) -> Bool
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.setat)
    func setAt(_ index: UInt32, _ value: T)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.insertat)
    func insertAt(_ index: UInt32, _ value: T)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.removeat)
    func removeAt(_ index: UInt32)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.append)
    func append(_ value: T)
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.removeatend)
    func removeAtEnd()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.clear)
    func clear()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.getmany)
    func getMany(_ startIndex: UInt32, _ items: inout [T]) -> UInt32
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.replaceall)
    func replaceAll(_ items: [T])
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.foundation.collections.ivector-1.size)
    var size: UInt32 { get }
}

public typealias AnyIVector<T> = any IVector<T>

// MARK: - IVector Internals

@_spi(WinRTInternal)
extension __IMPL_Windows_Foundation_Collections {
}
@_spi(WinRTInternal)
extension __ABI_Windows_Foundation_Collections {
    private static let IID___x_ABI_C__FIVector_1_T: test_component.IID = .init(
        Data1: 0x913337E9, Data2: 0x11A1, Data3: 0x4345, Data4: ( 0xA3,0xA2,0x4E,0x7F,0x95,0x6E,0x22,0x2D ) // 913337E9-11A1-4345-A3A2-4E7F956E222D
    ) 

}
