// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Media.h"
#include "Windows.Media.Capture.Core.h"
#include "Windows.Media.Capture.Frames.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.Devices.h"
#include "Windows.Media.Effects.h"
#include "Windows.Media.MediaProperties.h"
#include "Windows.Security.Authentication.Web.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2 __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture __x_ABI_CWindows_CMedia_CCapture_CIAppCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIScreenCapture __x_ABI_CWindows_CMedia_CCapture_CIScreenCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_UINT32 __x_ABI_C__FIAsyncOperation_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIMediaExtension __x_ABI_CWindows_CMedia_CIMediaExtension;

#endif // ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIVideoFrame __x_ABI_CWindows_CMedia_CIVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CVideoFrame_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** first,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_boolean __x_ABI_C__FIReference_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_boolean;

    typedef struct __x_ABI_C__FIReference_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_booleanVtbl;

    interface __x_ABI_C__FIReference_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_float __x_ABI_C__FIReference_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_float;

    typedef struct __x_ABI_C__FIReference_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_float* This,
        FLOAT* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_floatVtbl;

    interface __x_ABI_C__FIReference_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain* This,
        struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGainVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode;

typedef enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue;

    typedef struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CAudioProcessing __x_ABI_CWindows_CMedia_CAudioProcessing;

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState;

typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

#if !defined(____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_GUID_IInspectable __x_ABI_C__FIMap_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult;

#endif // ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CVirtualKey __x_ABI_CWindows_CSystem_CVirtualKey;

typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory __x_ABI_CWindows_CMedia_CCapture_CMediaCategory;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation __x_ABI_CWindows_CMedia_CCapture_CVideoRotation;

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState_Stopped = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState_Started = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState_Failed = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_TopLeft = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_TopCenter = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_TopRight = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_MiddleLeft = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_MiddleCenter = 4,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_MiddleRight = 5,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_BottomLeft = 6,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_BottomCenter = 7,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation_BottomRight = 8,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize_Small = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize_Medium = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize_Large = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType_AppView = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType_EntireDisplay = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason_NormalExit = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason_UserCanceled = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason_AuthorizationFail = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason_ForegroundAppActivated = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState_Stopped = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState_Started = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState_Failed = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_Unknown = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_Initialized = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_MicrosoftSignInRequired = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_OAuthSignInRequired = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_ProviderSignInRequired = 4,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_InBandwidthTest = 5,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState_ReadyToBroadcast = 6,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState_Started = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState_Stopped = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState_Failed = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult_Success = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult_AuthenticationFailed = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult_Unauthorized = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult_ServiceUnavailable = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult_Unknown = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState_NotSignedIn = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState_MicrosoftSignInInProgress = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState_MicrosoftSignInComplete = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState_OAuthSignInInProgress = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState_OAuthSignInComplete = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState_Initializing = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState_StreamReady = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState_Started = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState_Paused = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState_Terminated = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_NormalTermination = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_LostConnectionToService = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_NoNetworkConnectivity = 2,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_ServiceAbort = 3,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_ServiceError = 4,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_ServiceUnavailable = 5,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_InternalError = 6,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_UnsupportedFormat = 7,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_BackgroundTaskTerminated = 8,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason_BackgroundTaskUnresponsive = 9,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode_Custom = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode_Auto = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode_Custom = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode_Auto = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit_Megabytes = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit_Seconds = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority_Informational = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority_Important = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState_Stopped = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState_Started = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState_Failed = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState_InProgress = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState_Completed = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState_Failed = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode_Custom = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode_High = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode_Standard = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode_Standard = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode_High = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode_Custom = 0,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode_High = 1,
    __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode_Standard = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_HighestAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_VerySmallQvga = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_SmallVga = 2,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_MediumXga = 3,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_Large3M = 4,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution_VeryLarge5M = 5,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_HighestAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_LowDefinition = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_StandardDefinition = 2,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution_HighDefinition = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_PhotoOrVideo = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_Photo = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode_Video = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_Jpeg = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_Png = 1,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat_JpegXR = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat
    {
        __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat_Mp4 = 0,
    __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat_Wmv = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CForegroundActivationArgument
    {
        __x_ABI_CWindows_CMedia_CCapture_CForegroundActivationArgument_SignInRequired = 0,
    __x_ABI_CWindows_CMedia_CCapture_CForegroundActivationArgument_MoreSettings = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand
    {
        __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_OpenGameBar = 0,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_RecordHistoricalBuffer = 1,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ToggleStartStopRecord = 2,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_StartRecord = 3,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_StopRecord = 4,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_TakeScreenshot = 5,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_StartBroadcast = 6,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_StopBroadcast = 7,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_PauseBroadcast = 8,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ResumeBroadcast = 9,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ToggleStartStopBroadcast = 10,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ToggleMicrophoneCapture = 11,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ToggleCameraCapture = 12,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand_ToggleRecordingIndicator = 13,
};

enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin
    {
        __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin_ShortcutKey = 0,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin_Cortana = 1,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin_AppCommand = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode_Windowed = 0,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode_FullScreenExclusive = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy
    {
        __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy_EnabledBySystem = 0,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy_EnabledByUser = 1,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy_NotEnabled = 2,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy_ProhibitedBySystem = 3,
    __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy_ProhibitedByPublisher = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile
    {
        __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoRecording = 0,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HighQualityPhoto = 1,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_BalancedVideoAndPhoto = 2,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoConferencing = 3,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_PhotoSequence = 4,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HighFrameRate = 5,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VariablePhotoSequence = 6,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HdrWithWcgVideo = 7,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_HdrWithWcgPhoto = 8,
    __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile_VideoHdr8 = 9,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus_ExclusiveControlAvailable = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus_SharedReadOnlyAvailable = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference_Auto = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference_Cpu = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode_ExclusiveControl = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode_SharedReadOnly = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus_Normal = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus_Overheated = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Other = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Communications = 1,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Media = 2,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_GameChat = 3,
    __x_ABI_CWindows_CMedia_CCapture_CMediaCategory_Speech = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType
    {
        __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoPreview = 0,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_VideoRecord = 1,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Audio = 2,
    __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType_Photo = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource
    {
        __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_Auto = 0,
    __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_VideoPreview = 1,
    __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource_Photo = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency
    {
        __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Disabled = 0,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_FiftyHertz = 1,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_SixtyHertz = 2,
    __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency_Auto = 3,
};

enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_AudioAndVideo = 0,
    __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_Audio = 1,
    __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode_Video = 2,
};

enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic
    {
        __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_AllStreamsIndependent = 0,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_PreviewRecordStreamsIdentical = 1,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_PreviewPhotoStreamsIdentical = 2,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_RecordPhotoStreamsIdentical = 3,
    __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic_AllStreamsIdentical = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation
    {
        __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_None = 0,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise90Degrees = 1,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise180Degrees = 2,
    __x_ABI_CWindows_CMedia_CCapture_CVideoRotation_Clockwise270Degrees = 3,
};

struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain
    {
        DOUBLE R;
    DOUBLE G;
    DOUBLE B;
};

#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* errorEventArgs);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameBoundsRelativeToReferencePhoto)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* CaptureWithContextAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        IInspectable* context,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* add_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture___x_ABI_CWindows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);
    HRESULT (STDMETHODCALLTYPE* put_SignInInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_SignInInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_StreamInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TerminateBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason reason,
        UINT32 providerSpecificReason);
    HRESULT (STDMETHODCALLTYPE* add_HeartbeatRequested)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HeartbeatRequested)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_TitleId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastChannel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastChannel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastTitleChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastTitleChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastLanguageChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastLanguageChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastChannelChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastChannelChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* put_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult** value);
    HRESULT (STDMETHODCALLTYPE* put_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_SignInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SignInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_UserNameChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UserNameChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_BandwidthTestBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthTestBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioCodec)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AudioCodec)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastStreamReader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader** value);
    HRESULT (STDMETHODCALLTYPE* add_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoEncodingResolutionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoEncodingResolutionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoEncodingBitrateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoEncodingBitrateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReportProblemWithStream)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBroadcastEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledByPolicy)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsGpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasHardwareEncoder)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCameraCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCameraCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedCameraId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedCameraId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CameraOverlayLocation)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation value);
    HRESULT (STDMETHODCALLTYPE* get_CameraOverlayLocation)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation* value);
    HRESULT (STDMETHODCALLTYPE* put_CameraOverlaySize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize value);
    HRESULT (STDMETHODCALLTYPE* get_CameraOverlaySize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetGlobalSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplyGlobalSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* value);
    HRESULT (STDMETHODCALLTYPE* GetProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplyProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_Logo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBroadcastProviderAvailable)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInList)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugIn** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultPlugIn)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultPlugIn)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager** ppInstance);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager** ppInstance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StopPreview)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
    HRESULT (STDMETHODCALLTYPE* get_PreviewState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* add_PreviewStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreview___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PreviewStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PreviewStreamReader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreviewState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoStride)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitmapPixelFormat)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitmapAlphaMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextVideoFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame** frame);
    HRESULT (STDMETHODCALLTYPE* add_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_DefaultBroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CaptureTargetType)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType* value);
    HRESULT (STDMETHODCALLTYPE* put_CaptureTargetType)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CanCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* EnterBroadcastModeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* plugIn,
        __x_ABI_C__FIAsyncOperation_1_UINT32** operation);
    HRESULT (STDMETHODCALLTYPE* ExitBroadcastMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason reason);
    HRESULT (STDMETHODCALLTYPE* StartBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* PauseBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* ResumeBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* StartPreview)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        struct __x_ABI_CWindows_CFoundation_CSize desiredSize,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview** preview);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCaptureTargetRunning)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartMicrophoneCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureCamera)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureCamera)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartCameraCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    HRESULT (STDMETHODCALLTYPE* get_EncodedVideoSize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult** value);
    HRESULT (STDMETHODCALLTYPE* put_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult* value);
    HRESULT (STDMETHODCALLTYPE* put_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState value);
    HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* get_TerminationReason)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason* value);
    HRESULT (STDMETHODCALLTYPE* get_TerminationReasonPlugInSpecific)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_ViewerCountChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewerCountChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CameraCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PlugInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PlugInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastState_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_HasDiscontinuity)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioChannels)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioSampleRate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioAacSequence)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextAudioFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame** frame);
    HRESULT (STDMETHODCALLTYPE* get_VideoWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextVideoFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame** frame);
    HRESULT (STDMETHODCALLTYPE* add_AudioFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AudioFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IsKeyFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasDiscontinuity)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundService)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCapturingAudio)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCapturingVideo)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ToggleGameBarKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleGameBarKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleGameBarKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleGameBarKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_SaveHistoricalVideoKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_SaveHistoricalVideoKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_SaveHistoricalVideoKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_SaveHistoricalVideoKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_TakeScreenshotKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_TakeScreenshotKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_TakeScreenshotKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_TakeScreenshotKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingIndicatorKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingIndicatorKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingIndicatorKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingIndicatorKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ToggleMicrophoneCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleMicrophoneCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleMicrophoneCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleMicrophoneCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ToggleCameraCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleCameraCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleCameraCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleCameraCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleBroadcastKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleBroadcastKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleBroadcastKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleBroadcastKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplySettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* appCaptureSettings);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddStringEvent)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        HSTRING value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* AddInt32Event)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        INT32 value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* AddDoubleEvent)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        DOUBLE value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartStringState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        HSTRING value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartInt32State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        INT32 value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartDoubleState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        DOUBLE value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StopState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* StopAllStates)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
    HRESULT (STDMETHODCALLTYPE* get_RemainingStorageBytesAvailable)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* add_MetadataPurged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MetadataPurged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StopRecording)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFileTruncated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DurationGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DurationGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FileGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureRecordOperation___x_ABI_CWindows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FileGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Record)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation** operation);
    HRESULT (STDMETHODCALLTYPE* RecordTimeSpan)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation** operation);
    HRESULT (STDMETHODCALLTYPE* get_CanCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AppCaptureDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptureDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* put_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_HistoricalBufferLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalBufferLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_HistoricalBufferLengthUnit)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalBufferLengthUnit)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureOnBatteryAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureOnBatteryAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureOnWirelessDisplayAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureOnWirelessDisplayAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MaximumRecordLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRecordLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_ScreenshotDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_ScreenshotDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAppCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAppCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledByPolicy)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMemoryConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasHardwareEncoder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsGpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AlternateShortcutKeys)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingFrameRateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingFrameRateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTargetRunning)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartMicrophoneCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState___x_ABI_CWindows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CAppCaptureState_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetAllowedAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        boolean allowed,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PhotoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* CaptureFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode mode,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* mediaCapture);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ControlValues)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues** value);
    HRESULT (STDMETHODCALLTYPE* get_BitmapProperties)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CGraphics__CImaging__CBitmapTypedValue** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Exposure)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_ExposureCompensation)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoSpeed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_SceneMode)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CCaptureSceneMode** value);
    HRESULT (STDMETHODCALLTYPE* get_Flashed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* get_FlashPowerPercent)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalance)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __x_ABI_C__FIReference_1_float** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CDevices__CMediaCaptureFocusState** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoDigitalGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoAnalogGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_SensorFrameRate)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalanceGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CCapture__CWhiteBalanceGain** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SoftwareBitmap)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetCapturePolicy)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy* value);
    HRESULT (STDMETHODCALLTYPE* EnableCapture)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    HRESULT (STDMETHODCALLTYPE* DisableCapture)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    HRESULT (STDMETHODCALLTYPE* get_TargetInfo)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppBroadcastServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices** value);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptureServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices** value);
    HRESULT (STDMETHODCALLTYPE* add_CommandReceived)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServices___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesCommandEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CommandReceived)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand* value);
    HRESULT (STDMETHODCALLTYPE* get_Origin)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_GameBarServicesCreated)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManager___x_ABI_CWindows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GameBarServicesCreated)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GameBarServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager** ppInstance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PauseAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ResumeAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PauseWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* add_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InitializeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* InitializeWithSettingsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* mediaCaptureInitializationSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* AddEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        HSTRING effectActivationID,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* effectSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ClearEffectsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* SetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable* propertyValue);
    HRESULT (STDMETHODCALLTYPE* GetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* errorEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* recordLimitationExceededEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* get_MediaCaptureSettings)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);
    HRESULT (STDMETHODCALLTYPE* SetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoCapture** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CLowLagPhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* SetEncodingPropertiesAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* mediaEncodingProperties,
        __x_ABI_C__FIMap_2_GUID_IInspectable* encoderProperties,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrepareVariablePhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* add_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddAudioEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition* definition,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* AddVideoEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition* definition,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* PauseRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ResumeRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* add_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_CameraStreamState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState* streamState);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameCopyAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame* destination,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* add_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_ThermalStatus)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus* value);
    HRESULT (STDMETHODCALLTYPE* PrepareAdvancedPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* encodingProperties,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CAdvancedPhotoCapture** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RemoveEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension* effect,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* PauseRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureStopResult** operation);
    HRESULT (STDMETHODCALLTYPE* get_FrameSources)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAndSizeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize outputSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CMediaCapture___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateMultiSourceFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource* inputSources,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Code)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode value);
    HRESULT (STDMETHODCALLTYPE* get_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference* value);
    HRESULT (STDMETHODCALLTYPE* put_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceCharacteristic)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraSoundRequiredForRegion)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Horizontal35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_PitchOffsetDegrees)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_Vertical35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Direct3D11Device)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsVideoProfileSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* FindAllVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindConcurrentProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindKnownVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile name,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedRecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* GetConcurrency)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameSourceInfos)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameRate)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVariablePhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHdrVideoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subtype)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioSuspended)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVideoSuspended)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_SourceSuspensionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CScreenCapture___x_ABI_CWindows__CMedia__CCapture__CSourceSuspensionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SourceSuspensionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCapture* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIScreenCapture
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIScreenCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIScreenCapture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIScreenCapture** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIScreenCaptureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAudioSuspended)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVideoSuspended)(__x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CISourceSuspensionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_OutputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__) */
    
