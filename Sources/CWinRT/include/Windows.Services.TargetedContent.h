// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue;

#endif // ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_boolean __x_ABI_C__FIIterator_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_boolean;

    typedef struct __x_ABI_C__FIIterator_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_boolean* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_boolean* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_boolean* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_boolean* This,
        UINT32 itemsLength,
        boolean* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_booleanVtbl;

    interface __x_ABI_C__FIIterator_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_boolean __x_ABI_C__FIIterable_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_boolean;

    typedef struct __x_ABI_C__FIIterable_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_boolean* This,
        __x_ABI_C__FIIterator_1_boolean** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_booleanVtbl;

    interface __x_ABI_C__FIIterable_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_double __x_ABI_C__FIIterator_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_double;

    typedef struct __x_ABI_C__FIIterator_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_double* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_doubleVtbl;

    interface __x_ABI_C__FIIterator_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_double __x_ABI_C__FIIterable_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_double;

    typedef struct __x_ABI_C__FIIterable_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_double* This,
        __x_ABI_C__FIIterator_1_double** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_doubleVtbl;

    interface __x_ABI_C__FIIterable_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        HSTRING key,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValueVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_boolean __x_ABI_C__FIVectorView_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_boolean;

    typedef struct __x_ABI_C__FIVectorView_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_boolean* This,
        UINT32 index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_boolean* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_boolean* This,
        boolean value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_boolean* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        boolean* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_booleanVtbl;

    interface __x_ABI_C__FIVectorView_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_double __x_ABI_C__FIVectorView_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_double;

    typedef struct __x_ABI_C__FIVectorView_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_doubleVtbl;

    interface __x_ABI_C__FIVectorView_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* sender,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* sender,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* sender,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState;

typedef enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability;

typedef enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction;

typedef enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind;

typedef enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind;

enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState
    {
        __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState_NotApplicable = 0,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState_NotInstalled = 1,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState_Installed = 2,
};

enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability
    {
        __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability_None = 0,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability_Partial = 1,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability_All = 2,
};

enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction
    {
        __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Impression = 0,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_ClickThrough = 1,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Hover = 2,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Like = 3,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Dislike = 4,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Dismiss = 5,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Ineligible = 6,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Accept = 7,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Decline = 8,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Defer = 9,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Canceled = 10,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Conversion = 11,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction_Opportunity = 12,
};

enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind
    {
        __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind_Collection = 0,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind_Item = 1,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind_Value = 2,
};

enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind
    {
        __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_String = 0,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Uri = 1,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Number = 2,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Boolean = 3,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_File = 4,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_ImageFile = 5,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Action = 6,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Strings = 7,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Uris = 8,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Numbers = 9,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Booleans = 10,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Files = 11,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_ImageFiles = 12,
    __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind_Actions = 13,
};

#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InvokeAsync)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentActionVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentActionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAvailabilityChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);
    HRESULT (STDMETHODCALLTYPE* get_HasPreviousContentExpired)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* ReportInteraction)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction interaction);
    HRESULT (STDMETHODCALLTYPE* ReportCustomInteraction)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        HSTRING customInteractionName);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Collections)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollectionVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Availability)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAvailability* value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** value);
    HRESULT (STDMETHODCALLTYPE* SelectSingleObject)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer* This,
        HSTRING path,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAsync)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics* This,
        HSTRING contentId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer** asyncOperation);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStaticsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentContainerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImageVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* ReportInteraction)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentInteraction interaction);
    HRESULT (STDMETHODCALLTYPE* ReportCustomInteraction)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        HSTRING customInteractionName);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Collections)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShouldDisplay)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AppInstallationState)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentAppInstallationState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemStateVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemStateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItemState_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ObjectKind)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentObjectKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Collection)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentItem** value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObjectVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObjectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentObject_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetContentContainerAsync)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentContainer** asyncOperation);
    HRESULT (STDMETHODCALLTYPE* add_ContentChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentChangedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_ContentChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_AvailabilityChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAvailabilityChangedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_AvailabilityChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentStateChangedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscription_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SubscriptionId)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowPartialContentAvailability)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowPartialContentAvailability)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CloudQueryParameters)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalFilters)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* Update)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions* This);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptionsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAsync)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
        HSTRING subscriptionId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentSubscription** asyncOperation);
    HRESULT (STDMETHODCALLTYPE* GetOptions)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics* This,
        HSTRING subscriptionId,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionOptions** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStaticsVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentSubscriptionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueKind)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        enum __x_ABI_CWindows_CServices_CTargetedContent_CTargetedContentValueKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_String)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Number)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Boolean)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_ImageFile)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentImage** value);
    HRESULT (STDMETHODCALLTYPE* get_Action)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentAction** value);
    HRESULT (STDMETHODCALLTYPE* get_Strings)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_Uris)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_Numbers)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_Booleans)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* get_Files)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentFile** value);
    HRESULT (STDMETHODCALLTYPE* get_ImageFiles)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentImage** value);
    HRESULT (STDMETHODCALLTYPE* get_Actions)(__x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CTargetedContent__CTargetedContentAction** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValueVtbl;

    interface __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValueVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue;
#endif /* !defined(____x_ABI_CWindows_CServices_CTargetedContent_CITargetedContentValue_INTERFACE_DEFINED__) */
    
