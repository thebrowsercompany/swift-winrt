// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.UI.h"
#include "Microsoft.UI.Content.h"
#include "Microsoft.UI.Dispatching.h"
#include "Windows.Graphics.h"
#include "Windows.System.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2 __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2 __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2 __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2 __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputObject __x_ABI_CMicrosoft_CUI_CInput_CIInputObject;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* sender,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CContent_CIContentIsland_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CContent_CIContentIsland_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland;

#endif // ____x_ABI_CMicrosoft_CUI_CContent_CIContentIsland_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge __x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge;

#endif // ____x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue;

#endif // ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__

typedef struct __x_ABI_CMicrosoft_CUI_CWindowId __x_ABI_CMicrosoft_CUI_CWindowId;

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef struct __x_ABI_CWindows_CGraphics_CRectInt32 __x_ABI_CWindows_CGraphics_CRectInt32;

typedef enum __x_ABI_CWindows_CSystem_CVirtualKey __x_ABI_CWindows_CSystem_CVirtualKey;

typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreCursor __x_ABI_CWindows_CUI_CCore_CICoreCursor;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CCore_CCoreVirtualKeyStates __x_ABI_CWindows_CUI_CCore_CCoreVirtualKeyStates;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CDraggingState __x_ABI_CMicrosoft_CUI_CInput_CDraggingState;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CHoldingState __x_ABI_CMicrosoft_CUI_CInput_CHoldingState;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind;

typedef enum __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates;

typedef struct __x_ABI_CMicrosoft_CUI_CInput_CCrossSlideThresholds __x_ABI_CMicrosoft_CUI_CInput_CCrossSlideThresholds;

typedef struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta;

typedef struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities;

typedef struct __x_ABI_CMicrosoft_CUI_CInput_CPhysicalKeyStatus __x_ABI_CMicrosoft_CUI_CInput_CPhysicalKeyStatus;

enum __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState
    {
        __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_Started = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_Dragging = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_Selecting = 2,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_SelectSpeedBumping = 3,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_SpeedBumping = 4,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_Rearranging = 5,
    __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState_Completed = 6,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CDraggingState
    {
        __x_ABI_CMicrosoft_CUI_CInput_CDraggingState_Started = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CDraggingState_Continuing = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CDraggingState_Completed = 2,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason
    {
        __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Programmatic = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Restore = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_First = 2,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Last = 3,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Left = 4,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Up = 5,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Right = 6,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason_Down = 7,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult
    {
        __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult_NotMoved = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult_Moved = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult_NoFocusableElements = 2,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings
    {
        __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_None = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_Tap = 0x1,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_DoubleTap = 0x2,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_Hold = 0x4,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_HoldWithMouse = 0x8,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_RightTap = 0x10,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_Drag = 0x20,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationTranslateX = 0x40,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationTranslateY = 0x80,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationTranslateRailsX = 0x100,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationTranslateRailsY = 0x200,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationRotate = 0x400,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationScale = 0x800,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationTranslateInertia = 0x1000,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationRotateInertia = 0x2000,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationScaleInertia = 0x4000,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_CrossSlide = 0x8000,
    __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings_ManipulationMultipleFingerPanning = 0x10000,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CHoldingState
    {
        __x_ABI_CMicrosoft_CUI_CInput_CHoldingState_Started = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CHoldingState_Completed = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CHoldingState_Canceled = 2,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState
    {
        __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState_None = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState_Deactivated = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState_Activated = 2,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds
    {
        __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds_None = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds_Touch = 0x1,
    __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds_Pen = 0x2,
    __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds_Mouse = 0x4,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape
    {
        __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Arrow = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Cross = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Hand = 3,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Help = 4,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_IBeam = 5,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_SizeAll = 6,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_SizeNortheastSouthwest = 7,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_SizeNorthSouth = 8,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_SizeNorthwestSoutheast = 9,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_SizeWestEast = 10,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_UniversalNo = 11,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_UpArrow = 12,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Wait = 13,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Pin = 14,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_Person = 15,
    __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape_AppStarting = 16,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind
    {
        __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Close = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Maximize = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Minimize = 2,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Icon = 3,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Caption = 4,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_TopBorder = 5,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_LeftBorder = 6,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_BottomBorder = 7,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_RightBorder = 8,
    __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind_Passthrough = 9,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType
    {
        __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType_Touch = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType_Pen = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType_Mouse = 2,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType_Touchpad = 3,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind
    {
        __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_Other = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_LeftButtonPressed = 1,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_LeftButtonReleased = 2,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_RightButtonPressed = 3,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_RightButtonReleased = 4,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_MiddleButtonPressed = 5,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_MiddleButtonReleased = 6,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_XButton1Pressed = 7,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_XButton1Released = 8,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_XButton2Pressed = 9,
    __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind_XButton2Released = 10,
};

enum __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates
    {
        __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates_None = 0,
    __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates_Down = 0x1,
    __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates_Locked = 0x2,
};

struct __x_ABI_CMicrosoft_CUI_CInput_CCrossSlideThresholds
    {
        FLOAT SelectionStart;
    FLOAT SpeedBumpStart;
    FLOAT SpeedBumpEnd;
    FLOAT RearrangeStart;
};

struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta
    {
        struct __x_ABI_CWindows_CFoundation_CPoint Translation;
    FLOAT Scale;
    FLOAT Rotation;
    FLOAT Expansion;
};

struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities
    {
        struct __x_ABI_CWindows_CFoundation_CPoint Linear;
    FLOAT Angular;
    FLOAT Expansion;
};

struct __x_ABI_CMicrosoft_CUI_CInput_CPhysicalKeyStatus
    {
        UINT32 RepeatCount;
    UINT32 ScanCode;
    boolean IsExtendedKey;
    boolean IsMenuKeyDown;
    boolean WasKeyDown;
    boolean IsKeyReleased;
};

#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KeyCode)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyStatus)(__x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CPhysicalKeyStatus* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CICharacterReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIContextMenuKeyEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CrossSlidingState)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CCrossSlidingState* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CICrossSlidingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DraggingState)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CDraggingState* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIDraggingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CorrelationId)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_HintRect)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult* value);
    HRESULT (STDMETHODCALLTYPE* put_Result)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason reason,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithHintRect)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason reason,
        struct __x_ABI_CWindows_CFoundation_CRect hintRect,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithHintRectAndId)(__x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationReason reason,
        struct __x_ABI_CWindows_CFoundation_CRect hintRect,
        GUID correlationId,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequestStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AutoProcessInertia)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoProcessInertia)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CrossSlideExact)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CrossSlideExact)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CrossSlideHorizontally)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CrossSlideHorizontally)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CrossSlideThresholds)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CCrossSlideThresholds* value);
    HRESULT (STDMETHODCALLTYPE* put_CrossSlideThresholds)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CCrossSlideThresholds value);
    HRESULT (STDMETHODCALLTYPE* get_GestureSettings)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings* value);
    HRESULT (STDMETHODCALLTYPE* put_GestureSettings)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CGestureSettings value);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInertial)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PivotCenter)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_PivotCenter)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_PivotRadius)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_PivotRadius)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaExpansionDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaExpansionDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaExpansion)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaExpansion)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaRotationAngle)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaRotationAngle)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaRotationDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaRotationDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaTranslationDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaTranslationDeceleration)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaTranslationDisplacement)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InertiaTranslationDisplacement)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationExact)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ManipulationExact)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MouseWheelParameters)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters** value);
    HRESULT (STDMETHODCALLTYPE* get_ShowGestureFeedback)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowGestureFeedback)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* CanBeDoubleTap)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* CompleteGesture)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This);
    HRESULT (STDMETHODCALLTYPE* ProcessDownEvent)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* ProcessMoveEvents)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* ProcessMouseWheelEvent)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value,
        boolean isShiftKeyDown,
        boolean isControlKeyDown);
    HRESULT (STDMETHODCALLTYPE* ProcessInertia)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This);
    HRESULT (STDMETHODCALLTYPE* ProcessUpEvent)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* value);
    HRESULT (STDMETHODCALLTYPE* add_Tapped)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CTappedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Tapped)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RightTapped)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CRightTappedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RightTapped)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Holding)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CHoldingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Holding)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Dragging)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CDraggingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Dragging)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationStarted)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationStartedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationStarted)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationUpdated)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationUpdated)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationInertiaStarting)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationInertiaStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationInertiaStarting)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationCompleted)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CManipulationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationCompleted)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CrossSliding)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CGestureRecognizer___x_ABI_CMicrosoft__CUI__CInput__CCrossSlidingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CrossSliding)(__x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIGestureRecognizer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HoldingState)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CHoldingState* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIHoldingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CInputActivationState* value);
    HRESULT (STDMETHODCALLTYPE* add_InputActivationChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListener___x_ABI_CMicrosoft__CUI__CInput__CInputActivationListenerActivationChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_InputActivationChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerActivationChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForWindowId)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForIsland)(__x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland* island,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListener** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputActivationListenerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputCursor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromCoreCursor)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics* This,
        __x_ABI_CWindows_CUI_CCore_CICoreCursor* cursor,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCursorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputCustomCursorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ModuleName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
        HSTRING resourceName,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromModule)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics* This,
        HSTRING moduleName,
        HSTRING resourceName,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopNamedResourceCursorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ModuleName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceId)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
        UINT32 resourceId,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromModule)(__x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics* This,
        HSTRING moduleName,
        UINT32 resourceId,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputDesktopResourceCursorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* TrySetFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DepartFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* request,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult* result);
    HRESULT (STDMETHODCALLTYPE* add_NavigateFocusRequested)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusController___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigateFocusRequested)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForIsland)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland* island,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusController** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContainsFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* NavigateFocus)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIFocusNavigationRequest* request,
        enum __x_ABI_CMicrosoft_CUI_CInput_CFocusNavigationResult* result);
    HRESULT (STDMETHODCALLTYPE* add_DepartFocusRequested)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputFocusNavigationHost___x_ABI_CMicrosoft__CUI__CInput__CFocusNavigationRequestEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DepartFocusRequested)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForSiteBridge)(__x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentSiteBridge* site,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHost** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputFocusNavigationHostStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentKeyState)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey virtualKey,
        enum __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates* result);
    HRESULT (STDMETHODCALLTYPE* GetKeyState)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey virtualKey,
        enum __x_ABI_CMicrosoft_CUI_CInput_CVirtualKeyStates* result);
    HRESULT (STDMETHODCALLTYPE* add_CharacterReceived)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CCharacterReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CharacterReceived)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuKey)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CContextMenuKeyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuKey)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_KeyDown)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KeyDown)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_KeyUp)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KeyUp)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SystemKeyDown)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SystemKeyDown)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SystemKeyUp)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputKeyboardSource___x_ABI_CMicrosoft__CUI__CInput__CKeyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SystemKeyUp)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetKeyStateForCurrentThread)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey virtualKey,
        enum __x_ABI_CWindows_CUI_CCore_CCoreVirtualKeyStates* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForIsland)(__x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland* island,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSource** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputKeyboardSourceStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Dismissed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissAction___x_ABI_CMicrosoft__CUI__CInput__CInputLightDismissEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Dismissed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForWindowId)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissAction** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissActionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputLightDismissEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue** value);
    HRESULT (STDMETHODCALLTYPE* ClearAllRegionRects)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This);
    HRESULT (STDMETHODCALLTYPE* ClearRegionRects)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind region);
    HRESULT (STDMETHODCALLTYPE* GetRegionRects)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind region,
        UINT32* resultLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32** result);
    HRESULT (STDMETHODCALLTYPE* SetRegionRects)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind region,
        UINT32 rectsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* rects);
    HRESULT (STDMETHODCALLTYPE* add_CaptionTapped)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientCaptionTappedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptionTapped)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerEntered)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerEntered)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerExited)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerExited)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerMoved)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerMoved)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RegionsChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputNonClientPointerSource___x_ABI_CMicrosoft__CUI__CInput__CNonClientRegionsChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RegionsChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForWindowId)(__x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSource** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputNonClientPointerSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObject* This,
        __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputObject
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputObject;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputObject_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputObjectFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cursor)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor** value);
    HRESULT (STDMETHODCALLTYPE* put_Cursor)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputCursor* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceKinds)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CInputPointerSourceDeviceKinds* value);
    HRESULT (STDMETHODCALLTYPE* add_PointerCaptureLost)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerCaptureLost)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerEntered)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerEntered)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerExited)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerExited)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerMoved)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerMoved)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerRoutedAway)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerRoutedAway)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerRoutedReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerRoutedReleased)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerRoutedTo)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerRoutedTo)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerWheelChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CInput__CInputPointerSource___x_ABI_CMicrosoft__CUI__CInput__CPointerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerWheelChanged)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForIsland)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland* island,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForIsland)(__x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics* This,
        __x_ABI_CMicrosoft_CUI_CContent_CIContentIsland* island,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSource** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputPreTranslateKeyboardSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CursorShape)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CInputSystemCursorShape type,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIInputSystemCursorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KeyStatus)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CPhysicalKeyStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_VirtualKey)(__x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIKeyEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cumulative)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_Velocities)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cumulative)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_Delta)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_Velocities)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationInertiaStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cumulative)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationStartedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cumulative)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_Delta)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationDelta* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_Velocities)(__x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CInput_CManipulationVelocities* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIManipulationUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParametersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CharTranslation)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_CharTranslation)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_DeltaScale)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DeltaScale)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DeltaRotationAngle)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DeltaRotationAngle)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_PageTranslation)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_PageTranslation)(__x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParametersVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParametersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIMouseWheelParameters_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientCaptionTappedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_RegionKind)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPointInRegion)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientPointerEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangedRegions)(__x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs* This,
        UINT32* valueLength,
        enum __x_ABI_CMicrosoft_CUI_CInput_CNonClientRegionKind** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CINonClientRegionsChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentPoint)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KeyModifiers)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* GetIntermediatePoints)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint** result);
    HRESULT (STDMETHODCALLTYPE* GetIntermediateTransformedPoints)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* transform,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CInput__CPointerPoint** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInContact)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerId)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* GetTransformedPoint)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* transform,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactRect)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBarrelButtonPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCanceled)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEraser)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalMouseWheel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInRange)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInverted)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsLeftButtonPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMiddleButtonPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPrimary)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRightButtonPressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsXButton1Pressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsXButton2Pressed)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MouseWheelDelta)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerUpdateKind)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerUpdateKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Pressure)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_TouchConfidence)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Twist)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_XTilt)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_YTilt)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointPropertiesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Inverse)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform** value);
    HRESULT (STDMETHODCALLTYPE* TryTransform)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
        struct __x_ABI_CWindows_CFoundation_CPoint inPoint,
        struct __x_ABI_CWindows_CFoundation_CPoint* outPoint,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* TryTransformBounds)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform* This,
        struct __x_ABI_CWindows_CFoundation_CRect inRect,
        struct __x_ABI_CWindows_CFoundation_CRect* outRect,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPointTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PredictionTime)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_PredictionTime)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* GetPredictedPoints)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* point,
        UINT32* resultLength,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint*** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateForInputPointerSource)(__x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIInputPointerSource* inputPointerSource,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIPointerPredictorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CIRightTappedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointerDeviceType)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CInput_CPointerDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_TapCount)(__x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CInput_CITappedEventArgs_INTERFACE_DEFINED__) */
    
