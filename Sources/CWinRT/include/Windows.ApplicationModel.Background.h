// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.ApplicationModel.Calls.h"
#include "Windows.ApplicationModel.Calls.Background.h"
#include "Windows.ApplicationModel.CommunicationBlocking.h"
#include "Windows.Devices.Bluetooth.h"
#include "Windows.Devices.Bluetooth.Advertisement.h"
#include "Windows.Devices.Bluetooth.Background.h"
#include "Windows.Devices.Bluetooth.GenericAttributeProfile.h"
#include "Windows.Devices.Geolocation.h"
#include "Windows.Devices.Sensors.h"
#include "Windows.Devices.SmartCards.h"
#include "Windows.Devices.Sms.h"
#include "Windows.Media.Capture.h"
#include "Windows.Networking.h"
#include "Windows.Networking.Sockets.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Provider.h"
#include "Windows.System.h"
#include "Windows.UI.Notifications.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2 __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2 __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2 __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition __x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTriggerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CDevices_CSensors_CActivityType __x_ABI_CWindows_CDevices_CSensors_CActivityType;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CSensors__CActivityType** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibrary __x_ABI_CWindows_CStorage_CIStorageLibrary;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_CWindows_CStorage_CIStorageLibrary** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageLibrary** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibrary** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

#if !defined(____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        GUID key,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration* This,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** first,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

#if !defined(____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration;

    typedef struct __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        GUID key,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration* This,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** first,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl;

    interface __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        HSTRING key,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CSensors_CActivityType* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* sender,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CBackground_CPhoneTriggerType __x_ABI_CWindows_CApplicationModel_CCalls_CBackground_CPhoneTriggerType;

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CBluetoothEventTriggeringMode __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CBluetoothEventTriggeringMode;

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CBluetooth_CBluetoothError __x_ABI_CWindows_CDevices_CBluetooth_CBluetoothError;

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter __x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters;

#endif // ____x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CGeolocation_CVisitMonitoringScope __x_ABI_CWindows_CDevices_CGeolocation_CVisitMonitoringScope;

#ifndef ____x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold __x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold;

#endif // ____x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CSmartCards_CSmartCardTriggerType __x_ABI_CWindows_CDevices_CSmartCards_CSmartCardTriggerType;

#ifndef ____x_ABI_CWindows_CDevices_CSms_CISmsFilterRules_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CSms_CISmsFilterRules_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CSms_CISmsFilterRules __x_ABI_CWindows_CDevices_CSms_CISmsFilterRules;

#endif // ____x_ABI_CWindows_CDevices_CSms_CISmsFilterRules_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CIHostName __x_ABI_CWindows_CNetworking_CIHostName;

#endif // ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CNetworking_CSockets_CSocketProtectionLevel __x_ABI_CWindows_CNetworking_CSockets_CSocketProtectionLevel;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget;

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType;

typedef enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType;

enum __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus_Unspecified = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus_AllowedWithWakeupCapability = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus_AllowedWithoutWakeupCapability = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus_Denied = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult_Allowed = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult_CurrentlyRunning = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult_DisabledByPolicy = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CApplicationTriggerResult_UnknownError = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind_AlwaysAllowed = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind_AllowedSubjectToSystemPolicy = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_Unspecified = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_AllowedWithAlwaysOnRealTimeConnectivity = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_AllowedMayUseActiveRealTimeConnectivity = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_Denied = 3,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_AlwaysAllowed = 4,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_AllowedSubjectToSystemPolicy = 5,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_DeniedBySystemPolicy = 6,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus_DeniedByUser = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_Abort = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_Terminating = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_LoggingOff = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_ServicingUpdate = 3,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_IdleTask = 4,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_Uninstall = 5,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_ConditionLoss = 6,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_SystemPolicy = 7,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_QuietHoursEntered = 8,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_ExecutionTimeExceeded = 9,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_ResourceRevocation = 10,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason_EnergySaver = 11,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter_All = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter_Cpu = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter_Network = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue_Low = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue_Medium = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue_High = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence_Once = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence_Always = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult_Allowed = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult_DeniedByUser = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult_DeniedBySystem = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CDeviceTriggerResult_LowBattery = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType_Geofence = 0,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult_Allowed = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult_CurrentlyRunning = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult_DisabledByPolicy = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CMediaProcessingTriggerResult_UnknownError = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_Invalid = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_UserPresent = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_UserNotPresent = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_InternetAvailable = 3,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_InternetNotAvailable = 4,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_SessionConnected = 5,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_SessionDisconnected = 6,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_FreeNetworkAvailable = 7,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType_BackgroundWorkCostNotHigh = 8,
};

enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType
    {
        __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_Invalid = 0,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_SmsReceived = 1,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_UserPresent = 2,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_UserAway = 3,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_NetworkStateChange = 4,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_ControlChannelReset = 5,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_InternetAvailable = 6,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_SessionConnected = 7,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_ServicingComplete = 8,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_LockScreenApplicationAdded = 9,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_LockScreenApplicationRemoved = 10,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_TimeZoneChange = 11,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_OnlineIdConnectedStateChange = 12,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_BackgroundWorkCostChange = 13,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_PowerStateChange = 14,
    __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType_DefaultSignInAccountChange = 15,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* sender,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskCancellationReason reason);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandlerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* sender,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandlerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* sender,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* args);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandlerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SubscribedActivities)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CDevices__CSensors__CActivityType** value);
    HRESULT (STDMETHODCALLTYPE* get_ReportInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedActivities)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CSensors__CActivityType** value);
    HRESULT (STDMETHODCALLTYPE* get_MinimumReportInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory* This,
        UINT32 reportIntervalInMilliseconds,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTrigger** activityTrigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIActivitySensorTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CAlarmAccessStatus** operation);
    HRESULT (STDMETHODCALLTYPE* GetAccessStatus)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CAlarmAccessStatus* status);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAlarmApplicationManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ProviderInfo)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderInfo)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAppBroadcastTrigger)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory* This,
        HSTRING providerKey,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTrigger** broadcastTrigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_DisplayNameResource)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameResource)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_LogoResource)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LogoResource)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoKeyFrameInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_VideoKeyFrameInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxVideoBitrate)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxVideoBitrate)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxVideoWidth)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxVideoWidth)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxVideoHeight)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxVideoHeight)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppBroadcastTriggerProviderInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* RequestAsyncWithArguments)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* arguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CApplicationTriggerResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Arguments)(__x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIApplicationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIAppointmentStoreNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundConditionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundConditionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundConditionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus** operation);
    HRESULT (STDMETHODCALLTYPE* RequestAccessForApplicationAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
        HSTRING applicationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundAccessStatus** operation);
    HRESULT (STDMETHODCALLTYPE* RemoveAccess)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* RemoveAccessForApplication)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
        HSTRING applicationId);
    HRESULT (STDMETHODCALLTYPE* GetAccessStatus)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus* status);
    HRESULT (STDMETHODCALLTYPE* GetAccessStatusForApplication)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics* This,
        HSTRING applicationId,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessStatus* status);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAccessKindAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundAccessRequestKind requestedAccess,
        HSTRING reason,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundExecutionManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Run)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* taskInstance);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_TaskEntryPoint)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TaskEntryPoint)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* SetTrigger)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* trigger);
    HRESULT (STDMETHODCALLTYPE* AddCondition)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundCondition* condition);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* Register)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** task);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_CancelOnConditionLoss)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CancelOnConditionLoss)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsNetworkRequested)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsNetworkRequested)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TaskGroup)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_TaskGroup)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskBuilder4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* CheckResult)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Task)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration** task);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TriggerDetails)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        IInspectable** triggerDetails);
    HRESULT (STDMETHODCALLTYPE* add_Canceled)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCanceledEventHandler* cancelHandler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_Canceled)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_SuspendedCount)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskDeferral** deferral);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetThrottleCount)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundTaskThrottleCounter counter,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TaskId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_Progress)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskProgressEventHandler* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_Progress)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskCompletedEventHandler* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* Unregister)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration* This,
        boolean cancelTask);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Trigger)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TaskGroup)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistration3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_BackgroundActivated)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BackgroundActivated)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_AllTasks)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup* This,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistration** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
        HSTRING id,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** group);
    HRESULT (STDMETHODCALLTYPE* CreateWithName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory* This,
        HSTRING id,
        HSTRING name,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** group);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllTasks)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics* This,
        __x_ABI_C__FIMapView_2_GUID___x_ABI_CWindows__CApplicationModel__CBackground__CIBackgroundTaskRegistration** tasks);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllTaskGroups)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CBackground__CBackgroundTaskRegistrationGroup** value);
    HRESULT (STDMETHODCALLTYPE* GetTaskGroup)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2* This,
        HSTRING groupId,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskRegistrationStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentBackgroundWorkCost)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CBackgroundWorkCostValue* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundWorkCostStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Advertisement)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementPublisherTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MinSamplingInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSamplingInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MinOutOfRangeTimeout)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOutOfRangeTimeout)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_SignalStrengthFilter)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter** value);
    HRESULT (STDMETHODCALLTYPE* put_SignalStrengthFilter)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CIBluetoothSignalStrengthFilter* value);
    HRESULT (STDMETHODCALLTYPE* get_AdvertisementFilter)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter** value);
    HRESULT (STDMETHODCALLTYPE* put_AdvertisementFilter)(__x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CAdvertisement_CIBluetoothLEAdvertisementFilter* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIBluetoothLEAdvertisementWatcherTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UpdateTarget)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget* value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateRequest)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_CanRequestUserInput)(__x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICachedFileUpdaterTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIChatMessageReceivedNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICommunicationBlockingAppSetAsActiveTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContactStoreNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WaitInterval)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* waitInterval);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan waitInterval,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIContentPrefetchTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TriggerId)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Recurrence)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory* This,
        HSTRING triggerId,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CCustomSystemEventTriggerRecurrence recurrence,
        __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CICustomSystemEventTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CanMaintainConnection)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MaintainConnection)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MaintainConnection)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceConnectionChangeTrigger** deviceChangeTrigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceConnectionChangeTriggerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TriggerQualifier)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OneShot)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger* This,
        boolean* oneShot);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory* This,
        HSTRING triggerQualifier,
        boolean oneShot,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceManufacturerNotificationTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAsyncSimple)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
        HSTRING deviceId,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan expectedDuration,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* RequestAsyncWithArguments)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger* This,
        HSTRING deviceId,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan expectedDuration,
        HSTRING arguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceServicingTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAsyncSimple)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* RequestAsyncWithArguments)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger* This,
        HSTRING deviceId,
        HSTRING arguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CDeviceTriggerResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceUseTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIDeviceWatcherTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIEmailStoreNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Characteristic)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EventTriggeringMode)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2* This,
        enum __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CBluetoothEventTriggeringMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic* characteristic,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger** gattCharacteristicNotificationTrigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithEventTriggeringMode)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattCharacteristic* characteristic,
        enum __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CBluetoothEventTriggeringMode eventTriggeringMode,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTrigger** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattCharacteristicNotificationTriggerFactory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TriggerId)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Service)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattLocalService** value);
    HRESULT (STDMETHODCALLTYPE* put_AdvertisingParameters)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters* value);
    HRESULT (STDMETHODCALLTYPE* get_AdvertisingParameters)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CGenericAttributeProfile_CIGattServiceProviderAdvertisingParameters** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Trigger)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTrigger** value);
    HRESULT (STDMETHODCALLTYPE* get_Error)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult* This,
        enum __x_ABI_CWindows_CDevices_CBluetooth_CBluetoothError* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics* This,
        HSTRING triggerId,
        GUID serviceUuid,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CGattServiceProviderTriggerResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGattServiceProviderTriggerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MonitoringScope)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
        enum __x_ABI_CWindows_CDevices_CGeolocation_CVisitMonitoringScope* value);
    HRESULT (STDMETHODCALLTYPE* put_MonitoringScope)(__x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger* This,
        enum __x_ABI_CWindows_CDevices_CGeolocation_CVisitMonitoringScope value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIGeovisitTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TriggerType)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType* triggerType);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CLocationTriggerType triggerType,
        __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTrigger** locationTrigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CILocationTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FreshnessTime)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
        UINT32* freshnessTime);
    HRESULT (STDMETHODCALLTYPE* get_OneShot)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger* This,
        boolean* oneShot);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory* This,
        UINT32 freshnessTime,
        boolean oneShot,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMaintenanceTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAsync)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult** result);
    HRESULT (STDMETHODCALLTYPE* RequestAsyncWithArguments)(__x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* arguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CBackground__CMediaProcessingTriggerResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIMediaProcessingTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorHotspotAuthenticationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory* This,
        HSTRING networkAccountId,
        __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CINetworkOperatorNotificationTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OneShot)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_TriggerType)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CBackground_CPhoneTriggerType* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CBackground_CPhoneTriggerType type,
        boolean oneShot,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTrigger** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPhoneTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIPushNotificationTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIRcsEndUserMessageAvailableTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InboundConnection)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommInboundConnectionInformation** value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundConnection)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        __x_ABI_CWindows_CDevices_CBluetooth_CBackground_CIRfcommOutboundConnectionInformation** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowMultipleConnections)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowMultipleConnections)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        enum __x_ABI_CWindows_CNetworking_CSockets_CSocketProtectionLevel* value);
    HRESULT (STDMETHODCALLTYPE* put_ProtectionLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        enum __x_ABI_CWindows_CNetworking_CSockets_CSocketProtectionLevel value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteHostName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        __x_ABI_CWindows_CNetworking_CIHostName** value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteHostName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger* This,
        __x_ABI_CWindows_CNetworking_CIHostName* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIRfcommConnectionTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISecondaryAuthenticationFactorAuthenticationTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory* This,
        __x_ABI_CWindows_CDevices_CSensors_CISensorDataThreshold* threshold,
        __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISensorDataThresholdTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TriggerType)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger* This,
        enum __x_ABI_CWindows_CDevices_CSmartCards_CSmartCardTriggerType* triggerType);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory* This,
        enum __x_ABI_CWindows_CDevices_CSmartCards_CSmartCardTriggerType triggerType,
        __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmartCardTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory* This,
        __x_ABI_CWindows_CDevices_CSms_CISmsFilterRules* filterRules,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISmsMessageReceivedTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsWakeFromLowPowerSupported)(__x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISocketActivityTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* tracker,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryChangeTrackerTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageLibrary* storageLibrary,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromLibraries)(__x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibrary* storageLibraries,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTrigger** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIStorageLibraryContentChangedTriggerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConditionType)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType* conditionType);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemConditionType conditionType,
        __x_ABI_CWindows_CApplicationModel_CBackground_CISystemCondition** condition);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemConditionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OneShot)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
        boolean* oneShot);
    HRESULT (STDMETHODCALLTYPE* get_TriggerType)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType* triggerType);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory* This,
        enum __x_ABI_CWindows_CApplicationModel_CBackground_CSystemTriggerType triggerType,
        boolean oneShot,
        __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CISystemTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FreshnessTime)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
        UINT32* freshnessTime);
    HRESULT (STDMETHODCALLTYPE* get_OneShot)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger* This,
        boolean* oneShot);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory* This,
        UINT32 freshnessTime,
        boolean oneShot,
        __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTrigger** trigger);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CITimeTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationActionTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIToastNotificationHistoryChangedTriggerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds notificationKinds,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CBackground_CIUserNotificationChangedTriggerFactory_INTERFACE_DEFINED__) */
    
