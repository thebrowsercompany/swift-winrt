// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem;

#endif // ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo;

#endif // ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason;

typedef enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState;

typedef enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState;

typedef enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction;

enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason
    {
        __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason_None = 0,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason_NetworkRequired = 1,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason_InsufficientDiskSpace = 2,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason_InsufficientBattery = 3,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason_UpdateBlocked = 4,
};

enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState
    {
        __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_NotStarted = 0,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Initializing = 1,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Preparing = 2,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Calculating = 3,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Downloading = 4,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Installing = 5,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Completed = 6,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_RebootRequired = 7,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState_Error = 8,
};

enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState
    {
        __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Idle = 0,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Detecting = 1,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_ReadyToDownload = 2,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Downloading = 3,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_ReadyToInstall = 4,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Installing = 5,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_RebootRequired = 6,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_ReadyToFinalize = 7,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Finalizing = 8,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Completed = 9,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_AttentionRequired = 10,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState_Error = 11,
};

enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction
    {
        __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction_UpToReboot = 0,
    __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction_AllowReboot = 1,
};

#if !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateItemState* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Revision)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgress)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_InstallProgress)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItemVtbl;

    interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem;
#endif /* !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
        enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInteractive)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfoVtbl;

    interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateManagerState* value);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgress)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_InstallProgress)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_UserActiveHoursStart)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_UserActiveHoursEnd)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_UserActiveHoursMax)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* TrySetUserActiveHours)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan start,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan end,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdateCheckTime)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdateInstallTime)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastErrorInfo)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateLastErrorInfo** value);
    HRESULT (STDMETHODCALLTYPE* GetAutomaticRebootBlockIds)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* BlockAutomaticRebootAsync)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        HSTRING lockId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* UnblockAutomaticRebootAsync)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        HSTRING lockId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* GetUpdateItems)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CUpdate__CSystemUpdateItem** result);
    HRESULT (STDMETHODCALLTYPE* get_AttentionRequiredReason)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateAttentionRequiredReason* value);
    HRESULT (STDMETHODCALLTYPE* SetFlightRing)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        HSTRING flightRing,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetFlightRing)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* StartInstall)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CUpdate_CSystemUpdateStartInstallAction action);
    HRESULT (STDMETHODCALLTYPE* RebootToCompleteInstall)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* StartCancelUpdates)(__x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics* This);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CUpdate_CISystemUpdateManagerStatics_INTERFACE_DEFINED__) */
    
