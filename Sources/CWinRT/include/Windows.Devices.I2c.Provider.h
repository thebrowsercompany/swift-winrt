// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed;

typedef enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode;

typedef enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus;

typedef struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult;

enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed
    {
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed_StandardMode = 0,
    __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed_FastMode = 1,
};

enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode
    {
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode_Exclusive = 0,
    __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode_Shared = 1,
};

enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus
    {
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus_FullTransfer = 0,
    __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus_PartialTransfer = 1,
    __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus_SlaveAddressNotAcknowledged = 2,
};

struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult
    {
        enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferStatus Status;
    UINT32 BytesTransferred;
};

#if !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceProvider)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider* This,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* settings,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider** device);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProviderVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cControllerProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* Write)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 bufferLength,
        BYTE* buffer);
    HRESULT (STDMETHODCALLTYPE* WritePartial)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 bufferLength,
        BYTE* buffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult* result);
    HRESULT (STDMETHODCALLTYPE* Read)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 bufferLength,
        BYTE* buffer);
    HRESULT (STDMETHODCALLTYPE* ReadPartial)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 bufferLength,
        BYTE* buffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult* result);
    HRESULT (STDMETHODCALLTYPE* WriteRead)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 writeBufferLength,
        BYTE* writeBuffer,
        UINT32 readBufferLength,
        BYTE* readBuffer);
    HRESULT (STDMETHODCALLTYPE* WriteReadPartial)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider* This,
        UINT32 writeBufferLength,
        BYTE* writeBuffer,
        UINT32 readBufferLength,
        BYTE* readBuffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cTransferResult* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProviderVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cDeviceProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetControllersAsync)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CProvider__CII2cControllerProvider** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProviderVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SlaveAddress)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SlaveAddress)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BusSpeed)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed* value);
    HRESULT (STDMETHODCALLTYPE* put_BusSpeed)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cBusSpeed value);
    HRESULT (STDMETHODCALLTYPE* get_SharingMode)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SharingMode)(__x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CProvider_CProviderI2cSharingMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettingsVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CProvider_CIProviderI2cConnectionSettings_INTERFACE_DEFINED__) */
    
