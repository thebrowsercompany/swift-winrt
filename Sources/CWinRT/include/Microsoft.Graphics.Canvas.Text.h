// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.Canvas.h"
#include "Microsoft.Graphics.Canvas.Brushes.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.UI.h"
#include "Windows.UI.Text.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBidi __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBidi;

#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBidi* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedGlyphOrientation __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedGlyphOrientation;

#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedGlyphOrientation* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript;

#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidiVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScriptVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitutionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFontVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypographyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush __x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAntialiasing __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAntialiasing;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;

typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;

typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBreakpoint __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBreakpoint;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterMetrics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterMetrics;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphMetrics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphMetrics;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasJustificationOpportunity __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasJustificationOpportunity;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineMetrics __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineMetrics;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptProperties __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptProperties;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeature __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeature;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasUnicodeRange __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasUnicodeRange;

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_CanWrapLineAfter = 0x1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_Whitespace = 0x2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_Newline = 0x4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_SoftHyphen = 0x8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties_RightToLeft = 0x10,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions_NoPixelSnap = 0x1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions_Clip = 0x2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions_EnableColorFont = 0x4,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_Cff = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_TrueType = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_TrueTypeCollection = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_Type1 = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_Vector = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_Bitmap = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_Unknown = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType_RawCff = 7,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_CopyrightNotice = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_VersionStrings = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Trademark = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Manufacturer = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Designer = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_DesignerUrl = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Description = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_FontVendorUrl = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_LicenseDescription = 9,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_LicenseInfoUrl = 10,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Win32FamilyNames = 11,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_Win32SubfamilyNames = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_PreferredFamilyNames = 13,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_PreferredSubfamilyNames = 14,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_SampleText = 15,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_FullName = 16,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_PostscriptName = 17,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_PostscriptCidName = 18,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_WwsFamilyName = 19,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_DesignScriptLanguageTag = 20,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation_SupportedScriptLanguageTag = 21,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_FamilyName = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_PreferredFamilyName = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_FaceName = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_FullName = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_Win32FamilyName = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_PostscriptName = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_DesignScriptLanguageTag = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_SupportedScriptLanguageTag = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_SemanticTag = 9,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_Weight = 10,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_Stretch = 11,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_Style = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier_Total = 13,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations_Bold = 0x1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations_Oblique = 0x2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicBlank = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_Character = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_Blank = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicNormal = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicKashida = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicAlef = 9,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicHa = 10,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicRa = 11,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicBa = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicBara = 13,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicSeen = 14,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification_ArabicSeenM = 15,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation_Upright = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation_Clockwise90Degrees = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation_Clockwise180Degrees = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation_Clockwise270Degrees = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment_Left = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment_Right = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment_Center = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment_Justified = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition_Neutral = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition_CanBreak = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition_CannotBreak = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition_MustBreak = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode_Uniform = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode_Proportional = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod_FromCulture = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod_Contextual = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod_Disabled = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod_National = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod_Traditional = 4,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment_NoSideBearings = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape_NoVisual = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextAntialiasing
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextAntialiasing_Auto = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextAntialiasing_ClearType = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextAntialiasing_Grayscale = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextAntialiasing_Aliased = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_LeftToRightThenTopToBottom = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_RightToLeftThenTopToBottom = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_LeftToRightThenBottomToTop = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_RightToLeftThenBottomToTop = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_TopToBottomThenLeftToRight = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_BottomToTopThenLeftToRight = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_TopToBottomThenRightToLeft = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection_BottomToTopThenRightToLeft = 7,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit_Disable = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit_Enable = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode_Natural = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode_GdiClassic = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode_GdiNatural = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_Aliased = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_GdiClassic = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_GdiNatural = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_Natural = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_NaturalSymmetric = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_Outline = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode_NaturalSymmetricDownsampled = 7,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity_Character = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity_Word = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign_Ellipsis = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Default = 1953261156,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_VerticalWriting = 1953654134,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_VerticalAlternatesAndRotation = 846492278,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_AlternativeFractions = 1668441697,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_PetiteCapitalsFromCapitals = 1668297315,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_SmallCapitalsFromCapitals = 1668493923,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ContextualAlternates = 1953259875,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_CaseSensitiveForms = 1702060387,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_GlyphCompositionDecomposition = 1886217059,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ContextualLigatures = 1734962275,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_CapitalSpacing = 1886613603,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ContextualSwash = 1752658787,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_CursivePositioning = 1936880995,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_DiscretionaryLigatures = 1734962276,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ExpertForms = 1953527909,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Fractions = 1667330662,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_FullWidth = 1684633446,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HalfForms = 1718378856,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HalantForms = 1852596584,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_AlternateHalfWidth = 1953259880,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HistoricalForms = 1953720680,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HorizontalKanaAlternates = 1634626408,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HistoricalLigatures = 1734962280,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HalfWidth = 1684633448,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_HojoKanjiForms = 1869246312,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Jis04Forms = 875589738,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Jis78Forms = 943157354,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Jis83Forms = 859336810,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Jis90Forms = 809070698,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Kerning = 1852990827,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StandardLigatures = 1634167148,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_LiningFigures = 1836412524,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_LocalizedForms = 1818455916,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_MarkPositioning = 1802658157,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_MathematicalGreek = 1802659693,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_MarkToMarkPositioning = 1802333037,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_AlternateAnnotationForms = 1953259886,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_NlcKanjiForms = 1801677934,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_OldStyleFigures = 1836412527,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Ordinals = 1852076655,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ProportionalAlternateWidth = 1953259888,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_PetiteCapitals = 1885430640,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ProportionalFigures = 1836412528,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ProportionalWidths = 1684633456,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_QuarterWidths = 1684633457,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_RequiredLigatures = 1734962290,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_RubyNotationForms = 2036495730,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticAlternates = 1953259891,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ScientificInferiors = 1718511987,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_SmallCapitals = 1885564275,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_SimplifiedForms = 1819307379,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet1 = 825258867,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet2 = 842036083,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet3 = 858813299,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet4 = 875590515,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet5 = 892367731,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet6 = 909144947,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet7 = 925922163,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet8 = 942699379,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet9 = 959476595,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet10 = 808547187,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet11 = 825324403,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet12 = 842101619,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet13 = 858878835,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet14 = 875656051,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet15 = 892433267,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet16 = 909210483,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet17 = 925987699,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet18 = 942764915,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet19 = 959542131,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_StylisticSet20 = 808612723,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Subscript = 1935832435,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Superscript = 1936749939,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Swash = 1752397683,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Titling = 1819568500,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_TraditionalNameForms = 1835101812,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_TabularFigures = 1836412532,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_TraditionalForms = 1684107892,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_ThirdWidths = 1684633460,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_Unicase = 1667853941,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName_SlashedZero = 1869768058,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment_Top = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment_Bottom = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment_Center = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation_Default = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation_Stacked = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping_Wrap = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping_NoWrap = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping_EmergencyBreak = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping_WholeWord = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping_Character = 4,
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBidi
    {
        UINT32 ExplicitLevel;
    UINT32 ResolvedLevel;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBreakpoint
    {
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition BreakBefore;
    enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition BreakAfter;
    boolean IsWhitespace;
    boolean IsSoftHyphen;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedGlyphOrientation
    {
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation GlyphOrientation;
    UINT32 AdjustedBidiLevel;
    boolean IsSideways;
    boolean IsRightToLeft;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript
    {
        INT32 ScriptIdentifier;
    enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptShape Shape;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange
    {
        INT32 CharacterIndex;
    INT32 CharacterCount;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterMetrics
    {
        INT32 CharacterCount;
    FLOAT Width;
    enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterProperties Properties;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty
    {
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier Identifier;
    HSTRING Value;
    HSTRING Locale;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph
    {
        INT32 Index;
    FLOAT Advance;
    FLOAT AdvanceOffset;
    FLOAT AscenderOffset;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphMetrics
    {
        FLOAT LeftSideBearing;
    FLOAT AdvanceWidth;
    FLOAT RightSideBearing;
    FLOAT TopSideBearing;
    FLOAT AdvanceHeight;
    FLOAT BottomSideBearing;
    FLOAT VerticalOrigin;
    struct __x_ABI_CWindows_CFoundation_CRect DrawBounds;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping
    {
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphJustification Justification;
    boolean IsClusterStart;
    boolean IsDiacritic;
    boolean IsZeroWidthSpace;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasJustificationOpportunity
    {
        FLOAT ExpansionMinimum;
    FLOAT ExpansionMaximum;
    FLOAT CompressionMaximum;
    BYTE ExpansionPriority;
    BYTE CompressionPriority;
    boolean AllowResidualExpansion;
    boolean AllowResidualCompression;
    boolean ApplyToLeadingEdge;
    boolean ApplyToTrailingEdge;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineMetrics
    {
        INT32 CharacterCount;
    INT32 TrailingWhitespaceCount;
    INT32 TerminalNewlineCount;
    FLOAT Height;
    FLOAT Baseline;
    boolean IsTrimmed;
    FLOAT LeadingWhitespaceBefore;
    FLOAT LeadingWhitespaceAfter;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptProperties
    {
        HSTRING IsoScriptCode;
    INT32 IsoScriptNumber;
    INT32 ClusterLookahead;
    HSTRING JustificationCharacter;
    boolean RestrictCaretToClusters;
    boolean UsesWordDividers;
    boolean IsDiscreteWriting;
    boolean IsBlockWriting;
    boolean IsDistributedWithinCluster;
    boolean IsConnectedWriting;
    boolean IsCursiveWriting;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion
    {
        INT32 CharacterIndex;
    INT32 CharacterCount;
    struct __x_ABI_CWindows_CFoundation_CRect LayoutBounds;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeature
    {
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName Name;
    UINT32 Parameter;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasUnicodeRange
    {
        UINT32 First;
    UINT32 Last;
};

#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetRecommendedRenderingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT fontSize,
        FLOAT dpi,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode measuringMode,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* renderingParameters,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode* renderingMode);
    HRESULT (STDMETHODCALLTYPE* GetRecommendedRenderingModeWithAllOptions)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT fontSize,
        FLOAT dpi,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode measuringMode,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* renderingParameters,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 transform,
        boolean isSideways,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAntialiasing outlineThreshold,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode* renderingMode);
    HRESULT (STDMETHODCALLTYPE* GetRecommendedGridFit)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT fontSize,
        FLOAT dpi,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode measuringMode,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* renderingParameters,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 transform,
        boolean isSideways,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAntialiasing outlineThreshold,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit* gridFit);
    HRESULT (STDMETHODCALLTYPE* get_GlyphBox)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_SubscriptPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_SubscriptSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_SuperscriptPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_SuperscriptSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_HasTypographicMetrics)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Ascent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_Descent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_LineGap)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_CapHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_LowercaseLetterHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_UnderlinePosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_UnderlineThickness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_StrikethroughPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_StrikethroughThickness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretSlopeRise)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretSlopeRun)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_UnicodeRanges)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasUnicodeRange** valueElements);
    HRESULT (STDMETHODCALLTYPE* get_IsMonospaced)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetVerticalGlyphVariants)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32 inputElementsLength,
        INT32* inputElements,
        UINT32* outputElementsLength,
        INT32** outputElements);
    HRESULT (STDMETHODCALLTYPE* get_HasVerticalGlyphVariants)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FileFormatType)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontFileFormatType* value);
    HRESULT (STDMETHODCALLTYPE* get_Simulations)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontSimulations* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSymbolFont)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetGlyphIndices)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32 inputElementsLength,
        UINT32* inputElements,
        UINT32* outputElementsLength,
        INT32** outputElements);
    HRESULT (STDMETHODCALLTYPE* GetGlyphMetrics)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32 inputElementsLength,
        INT32* inputElements,
        boolean isSideways,
        UINT32* outputElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphMetrics** outputElements);
    HRESULT (STDMETHODCALLTYPE* GetGdiCompatibleGlyphMetrics)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        FLOAT fontSize,
        FLOAT dpi,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 transform,
        boolean useGdiNatural,
        UINT32 inputElementsLength,
        INT32* inputElements,
        boolean isSideways,
        UINT32* outputElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphMetrics** outputElements);
    HRESULT (STDMETHODCALLTYPE* get_Weight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* get_Style)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_FamilyNames)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** values);
    HRESULT (STDMETHODCALLTYPE* get_FaceNames)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** values);
    HRESULT (STDMETHODCALLTYPE* GetInformationalStrings)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontInformation fontInformation,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** values);
    HRESULT (STDMETHODCALLTYPE* HasCharacter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32 unicodeValue,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetGlyphRunBounds)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession* drawingSession,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        FLOAT fontSize,
        UINT32 glyphsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* glyphs,
        boolean isSideways,
        UINT32 bidiLevel,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* GetGlyphRunBoundsWithMeasuringMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession* drawingSession,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        FLOAT fontSize,
        UINT32 glyphsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* glyphs,
        boolean isSideways,
        UINT32 bidiLevel,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode measuringMode,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* get_Panose)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        UINT32* valueElementsLength,
        BYTE** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetSupportedTypographicFeatureNames)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        UINT32* valueElementsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetSupportedTypographicFeatureNamesWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        HSTRING locale,
        UINT32* valueElementsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetTypographicFeatureGlyphSupport)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName typographicFeatureName,
        UINT32 glyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* glyphsElements,
        UINT32* valueElementsLength,
        boolean** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetTypographicFeatureGlyphSupportWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName typographicFeatureName,
        UINT32 glyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* glyphsElements,
        HSTRING locale,
        UINT32* valueElementsLength,
        boolean** valueElements);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFaceVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Fonts)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasFontFace** value);
    HRESULT (STDMETHODCALLTYPE* TryFindFontFace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        INT32* index,
        boolean* succeeded);
    HRESULT (STDMETHODCALLTYPE* GetMatchingFontsFromProperties)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        UINT32 propertyElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty* propertyElements,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet** matchingFonts);
    HRESULT (STDMETHODCALLTYPE* GetMatchingFontsFromWwsFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        HSTRING familyName,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight weight,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch stretch,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle style,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet** matchingFonts);
    HRESULT (STDMETHODCALLTYPE* CountFontsMatchingProperty)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty property,
        UINT32* count);
    HRESULT (STDMETHODCALLTYPE* GetPropertyValuesFromIndex)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        UINT32 fontIndex,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier propertyIdentifier,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** values);
    HRESULT (STDMETHODCALLTYPE* GetPropertyValuesFromIdentifier)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier propertyIdentifier,
        HSTRING preferredLocaleNames,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetPropertyValues)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontPropertyIdentifier propertyIdentifier,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasFontProperty** valueElements);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet** fontSet);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSystemFontSet)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet** fontSet);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSetStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod method,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution** canvasNumberSubstitution);
    HRESULT (STDMETHODCALLTYPE* CreateWithLocaleAndIgnoreOverrides)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasNumberSubstitutionMethod method,
        HSTRING localeName,
        boolean ignoreEnvironmentOverrides,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution** canvasNumberSubstitution);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitutionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontFace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleFactor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFontVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFontVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasScaledFont_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFontsUsingSystemFontSet)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* textFormat,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** values);
    HRESULT (STDMETHODCALLTYPE* GetFonts)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* textFormat,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontSet* fontSet,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasScaledFont** values);
    HRESULT (STDMETHODCALLTYPE* GetBidi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** values);
    HRESULT (STDMETHODCALLTYPE* GetBidiWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        HSTRING locale,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedBidi** values);
    HRESULT (STDMETHODCALLTYPE* GetBreakpoints)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBreakpoint** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetBreakpointsWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        HSTRING locale,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedBreakpoint** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetNumberSubstitutions)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasNumberSubstitution** values);
    HRESULT (STDMETHODCALLTYPE* GetScript)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** values);
    HRESULT (STDMETHODCALLTYPE* GetScriptWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        HSTRING locale,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedScript** values);
    HRESULT (STDMETHODCALLTYPE* GetGlyphOrientations)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** values);
    HRESULT (STDMETHODCALLTYPE* GetGlyphOrientationsWithLocale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        HSTRING locale,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasAnalyzedGlyphOrientation** values);
    HRESULT (STDMETHODCALLTYPE* GetScriptProperties)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript analyzedScript,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasScriptProperties* scriptProperties);
    HRESULT (STDMETHODCALLTYPE* GetGlyphs)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange characterRange,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        boolean isSideways,
        boolean isRightToLeft,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetGlyphsWithAllOptions)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange characterRange,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        boolean isSideways,
        boolean isRightToLeft,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        HSTRING locale,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* numberSubstitution,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasCharacterRange___x_ABI_CMicrosoft__CGraphics__CCanvas__CText__CCanvasTypography* typographyRanges,
        UINT32* clusterMapIndicesElementsLength,
        INT32** clusterMapIndicesElements,
        UINT32* isShapedAloneGlyphsElementsLength,
        boolean** isShapedAloneGlyphsElements,
        UINT32* glyphShapingResultsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping** glyphShapingResultsElements,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetJustificationOpportunities)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasCharacterRange characterRange,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        UINT32 clusterMapIndicesElementsLength,
        INT32* clusterMapIndicesElements,
        UINT32 glyphShapingResultsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping* glyphShapingResultsElements,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasJustificationOpportunity** valueElements);
    HRESULT (STDMETHODCALLTYPE* ApplyJustificationOpportunities)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        FLOAT lineWidth,
        UINT32 justificationOpportunitiesElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasJustificationOpportunity* justificationOpportunitiesElements,
        UINT32 sourceGlyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* sourceGlyphsElements,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph** valueElements);
    HRESULT (STDMETHODCALLTYPE* AddGlyphsAfterJustification)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        UINT32 clusterMapIndicesElementsLength,
        INT32* clusterMapIndicesElements,
        UINT32 originalGlyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* originalGlyphsElements,
        UINT32 justifiedGlyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* justifiedGlyphsElements,
        UINT32 glyphShapingResultsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping* glyphShapingResultsElements,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph** valueElements);
    HRESULT (STDMETHODCALLTYPE* AddGlyphsAfterJustificationWithClusterMap)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasAnalyzedScript script,
        UINT32 clusterMapIndicesElementsLength,
        INT32* clusterMapIndicesElements,
        UINT32 originalGlyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* originalGlyphsElements,
        UINT32 justifiedGlyphsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* justifiedGlyphsElements,
        UINT32 glyphShapingResultsElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphShaping* glyphShapingResultsElements,
        UINT32* outputClusterMapIndicesElementsLength,
        INT32** outputClusterMapIndicesElements,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph** valueElements);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
        HSTRING text,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection textDirection,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer** canvasTextAnalyzer);
    HRESULT (STDMETHODCALLTYPE* CreateWithNumberSubstitutionAndVerticalGlyphOrientationAndBidiLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
        HSTRING text,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection textDirection,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution* numberSubstitution,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation verticalGlyphOrientation,
        UINT32 bidiLevel,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer** canvasTextAnalyzer);
    HRESULT (STDMETHODCALLTYPE* CreateWithOptions)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory* This,
        HSTRING text,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection textDirection,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* options,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzer** canvasTextAnalyzer);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
        INT32 characterIndex,
        INT32* characterCount,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetNumberSubstitution)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
        INT32 characterIndex,
        INT32* characterCount,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasNumberSubstitution** value);
    HRESULT (STDMETHODCALLTYPE* GetVerticalGlyphOrientation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
        INT32 characterIndex,
        INT32* characterCount,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation* value);
    HRESULT (STDMETHODCALLTYPE* GetBidiLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions* This,
        INT32 characterIndex,
        INT32* characterCount,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptionsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextAnalyzerOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalTabStop)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_IncrementalTabStop)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacingBaseline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacingBaseline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_LocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingGranularity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingGranularity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingDelimiter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingDelimiter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingDelimiterCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingDelimiterCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_WordWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_WordWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_Options)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions* value);
    HRESULT (STDMETHODCALLTYPE* put_Options)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalGlyphOrientation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalGlyphOrientation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_OpticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_LastLineWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_LastLineWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign value);
    HRESULT (STDMETHODCALLTYPE* get_CustomTrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject** value);
    HRESULT (STDMETHODCALLTYPE* put_CustomTrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSystemFontFamilies)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
        UINT32* valueElementsLength,
        HSTRING** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetSystemFontFamiliesFromLocaleList)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics* This,
        __x_ABI_C__FIVectorView_1_HSTRING* localeList,
        UINT32* valueElementsLength,
        HSTRING** valueElements);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormatStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Draw)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* textRenderer,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        boolean isSideways,
        boolean isRightToLeft,
        IInspectable* brush);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_Baseline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsSideways)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DrawBounds)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* get_BreakBefore)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition* value);
    HRESULT (STDMETHODCALLTYPE* get_BreakAfter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineBreakCondition* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObjectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObjectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFormatChangeIndices)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        UINT32* stopsLength,
        INT32** stops);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFontFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFontSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFontStretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFontStyle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFontWeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalTabStop)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_IncrementalTabStop)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacingBaseline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacingBaseline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultLocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingGranularity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingGranularity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextTrimmingGranularity value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingDelimiter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingDelimiter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingDelimiterCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingDelimiterCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_WordWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_WordWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasWordWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_Options)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions* value);
    HRESULT (STDMETHODCALLTYPE* put_Options)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasDrawTextOptions value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineSpacingMode value);
    HRESULT (STDMETHODCALLTYPE* get_TrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTrimmingSign value);
    HRESULT (STDMETHODCALLTYPE* get_CustomTrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject** value);
    HRESULT (STDMETHODCALLTYPE* put_CustomTrimmingSign)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* value);
    HRESULT (STDMETHODCALLTYPE* get_RequestedSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_RequestedSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* GetMinimumLineLength)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* GetBrush)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush** brush);
    HRESULT (STDMETHODCALLTYPE* GetCustomBrush)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        IInspectable** brush);
    HRESULT (STDMETHODCALLTYPE* GetFontFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        HSTRING* fontFamily);
    HRESULT (STDMETHODCALLTYPE* GetFontSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        FLOAT* fontSize);
    HRESULT (STDMETHODCALLTYPE* GetFontStretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* fontStretch);
    HRESULT (STDMETHODCALLTYPE* GetFontStyle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* fontStyle);
    HRESULT (STDMETHODCALLTYPE* GetFontWeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* fontWeight);
    HRESULT (STDMETHODCALLTYPE* GetLocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        HSTRING* localeName);
    HRESULT (STDMETHODCALLTYPE* GetStrikethrough)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        boolean* hasStrikethrough);
    HRESULT (STDMETHODCALLTYPE* GetUnderline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        boolean* hasUnderline);
    HRESULT (STDMETHODCALLTYPE* GetInlineObject)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject** inlineObject);
    HRESULT (STDMETHODCALLTYPE* SetColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        struct __x_ABI_CWindows_CUI_CColor color);
    HRESULT (STDMETHODCALLTYPE* SetBrush)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush* brush);
    HRESULT (STDMETHODCALLTYPE* SetCustomBrush)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        IInspectable* brush);
    HRESULT (STDMETHODCALLTYPE* SetFontFamily)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        HSTRING fontFamily);
    HRESULT (STDMETHODCALLTYPE* SetFontSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        FLOAT fontSize);
    HRESULT (STDMETHODCALLTYPE* SetFontStretch)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch fontStretch);
    HRESULT (STDMETHODCALLTYPE* SetFontStyle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle fontStyle);
    HRESULT (STDMETHODCALLTYPE* SetFontWeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight fontWeight);
    HRESULT (STDMETHODCALLTYPE* SetLocaleName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* SetStrikethrough)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        boolean hasStrikethrough);
    HRESULT (STDMETHODCALLTYPE* SetUnderline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        boolean hasUnderline);
    HRESULT (STDMETHODCALLTYPE* SetInlineObject)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* inlineObject);
    HRESULT (STDMETHODCALLTYPE* DrawToTextRenderer)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* textRenderer,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 position);
    HRESULT (STDMETHODCALLTYPE* DrawToTextRendererWithCoords)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* textRenderer,
        FLOAT x,
        FLOAT y);
    HRESULT (STDMETHODCALLTYPE* get_LineMetrics)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasLineMetrics** valueElements);
    HRESULT (STDMETHODCALLTYPE* get_ClusterMetrics)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        UINT32* valueElementsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasClusterMetrics** valueElements);
    HRESULT (STDMETHODCALLTYPE* SetTypography)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* typography);
    HRESULT (STDMETHODCALLTYPE* GetTypography)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography** typography);
    HRESULT (STDMETHODCALLTYPE* get_LayoutBounds)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* get_LayoutBoundsIncludingTrailingWhitespace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* get_LineCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32* lineCount);
    HRESULT (STDMETHODCALLTYPE* get_MaximumBidiReorderingDepth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32* depth);
    HRESULT (STDMETHODCALLTYPE* get_DrawBounds)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CRect* bounds);
    HRESULT (STDMETHODCALLTYPE* HitTest)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* HitTestWithCoords)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT x,
        FLOAT y,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* HitTestWithDescription)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion* textLayoutRegion,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* HitTestWithDescriptionAndCoords)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT x,
        FLOAT y,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion* textLayoutRegion,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* HitTestWithDescriptionAndTrailingSide)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion* textLayoutRegion,
        boolean* trailingSideOfCharacter,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* HitTestWithDescriptionAndCoordsAndTrailingSide)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        FLOAT x,
        FLOAT y,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion* textLayoutRegion,
        boolean* trailingSideOfCharacter,
        boolean* isHit);
    HRESULT (STDMETHODCALLTYPE* GetCaretPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        boolean trailingSideOfCharacter,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* location);
    HRESULT (STDMETHODCALLTYPE* GetCaretPositionWithDescription)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        boolean trailingSideOfCharacter,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion* textLayoutRegion,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* location);
    HRESULT (STDMETHODCALLTYPE* GetCharacterRegions)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        UINT32* hitTestDescriptionsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextLayoutRegion** hitTestDescriptions);
    HRESULT (STDMETHODCALLTYPE* GetPairKerning)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        boolean* hasPairKerning);
    HRESULT (STDMETHODCALLTYPE* SetPairKerning)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        boolean hasPairKerning);
    HRESULT (STDMETHODCALLTYPE* GetLeadingCharacterSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        FLOAT* leadingSpacing);
    HRESULT (STDMETHODCALLTYPE* GetTrailingCharacterSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        FLOAT* trailingSpacing);
    HRESULT (STDMETHODCALLTYPE* GetMinimumCharacterAdvance)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        FLOAT* minimumAdvance);
    HRESULT (STDMETHODCALLTYPE* SetCharacterSpacing)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        INT32 characterIndex,
        INT32 characterCount,
        FLOAT leadingSpacing,
        FLOAT trailingSpacing,
        FLOAT minimumAdvance);
    HRESULT (STDMETHODCALLTYPE* get_VerticalGlyphOrientation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalGlyphOrientation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasVerticalGlyphOrientation value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_OpticalAlignment)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasOpticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_LastLineWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_LastLineWrapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        HSTRING textString,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextFormat* textFormat,
        FLOAT requestedWidth,
        FLOAT requestedHeight,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayout** canvasTextLayout);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetGlyphOrientationTransform)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation glyphOrientation,
        boolean isSideways,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* transform);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextLayoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRendererVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DrawGlyphRun)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasFontFace* fontFace,
        FLOAT fontSize,
        UINT32 glyphsLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyph* glyphs,
        boolean isSideways,
        UINT32 bidiLevel,
        IInspectable* brush,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode measuringMode,
        HSTRING localeName,
        HSTRING textString,
        UINT32 clusterMapIndicesLength,
        INT32* clusterMapIndices,
        UINT32 characterIndex,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation glyphOrientation);
    HRESULT (STDMETHODCALLTYPE* DrawStrikethrough)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        FLOAT strikethroughWidth,
        FLOAT strikethroughThickness,
        FLOAT strikethroughOffset,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection textDirection,
        IInspectable* brush,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode textMeasuringMode,
        HSTRING localeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation glyphOrientation);
    HRESULT (STDMETHODCALLTYPE* DrawUnderline)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        FLOAT underlineWidth,
        FLOAT underlineThickness,
        FLOAT underlineOffset,
        FLOAT runHeight,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextDirection textDirection,
        IInspectable* brush,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextMeasuringMode textMeasuringMode,
        HSTRING localeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation glyphOrientation);
    HRESULT (STDMETHODCALLTYPE* DrawInlineObject)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 point,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextInlineObject* inlineObject,
        boolean isSideways,
        boolean isRightToLeft,
        IInspectable* brush,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasGlyphOrientation glyphOrientation);
    HRESULT (STDMETHODCALLTYPE* get_PixelSnappingDisabled)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Transform)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* get_Dpi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRendererVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRendererVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RenderingMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode* value);
    HRESULT (STDMETHODCALLTYPE* get_GridFit)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextRenderingMode textRenderingMode,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTextGridFit gridFit,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParameters** textRenderingParameters);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTextRenderingParametersFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddFeature)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeature feature);
    HRESULT (STDMETHODCALLTYPE* AddFeatureWithNameAndParameter)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeatureName name,
        UINT32 parameter);
    HRESULT (STDMETHODCALLTYPE* GetFeatures)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography* This,
        UINT32* featuresLength,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CCanvasTypographyFeature** features);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypographyVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypographyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CText_CICanvasTypography_INTERFACE_DEFINED__) */
    
