// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.Enumeration.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Media.h"
#include "Windows.Media.Capture.h"
#include "Windows.Media.Devices.h"
#include "Windows.Media.Devices.Core.h"
#include "Windows.Media.MediaProperties.h"
#include "Windows.Perception.Spatial.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2 __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** first,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* sender,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* sender,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation;

#endif // ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CIAudioFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIAudioFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIAudioFrame __x_ABI_CWindows_CMedia_CIAudioFrame;

#endif // ____x_ABI_CWindows_CMedia_CIAudioFrame_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics __x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper __x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CIVideoFrame __x_ABI_CWindows_CMedia_CIVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind;

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode_Realtime = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode_Buffered = 1,
};

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus_Success = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus_UnknownFailure = 1,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus_DeviceNotAvailable = 2,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus_OutputFormatNotSupported = 3,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderStartStatus_ExclusiveControlNotAvailable = 4,
};

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_Success = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_UnknownFailure = 1,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_NotSupported = 2,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_DeviceNotAvailable = 3,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_MaxPropertyValueSizeTooSmall = 4,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus_MaxPropertyValueSizeRequired = 5,
};

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Custom = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Color = 1,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Infrared = 2,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Depth = 3,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Audio = 4,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind_Image = 5,
};

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_Success = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_UnknownFailure = 1,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_NotSupported = 2,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_InvalidValue = 3,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_DeviceNotAvailable = 4,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceSetPropertyStatus_NotInControl = 5,
};

enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus
    {
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus_Success = 0,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus_NotSupported = 1,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus_InsufficientResources = 2,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus_DeviceNotAvailable = 3,
    __x_ABI_CWindows_CMedia_CCapture_CFrames_CMultiSourceMediaFrameReaderStartStatus_UnknownFailure = 4,
};

#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameReference)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEncodingProperties)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* GetAudioFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame* This,
        __x_ABI_CWindows_CMedia_CIAudioFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameReference)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* get_Buffer)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameReference)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_DepthFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* TryCreateCoordinateMapper)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame* This,
        __x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics* cameraIntrinsics,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_CWindows_CMedia_CDevices_CCore_CIDepthCorrelatedCoordinateMapper** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxReliableDepth)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MinReliableDepth)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_DepthScaleInMeters)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormatVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormatVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameReference)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_IsIlluminated)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameArrivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MajorType)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtype)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameRate)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormatVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormatVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioEncodingProperties)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_FrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameArrivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryAcquireLatestFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameReaderStartStatus** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AcquisitionMode)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode value);
    HRESULT (STDMETHODCALLTYPE* get_AcquisitionMode)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceKind)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_SystemRelativeTime)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_BufferMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIBufferMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSystem)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReferenceVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIAudioMediaFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Info)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Controller)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedFormats)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* SetFormatAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* format,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* add_FormatChanged)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSource_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FormatChanged)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryGetCameraIntrinsics)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat* format,
        __x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPropertyAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
        HSTRING propertyId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult** value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
        HSTRING propertyId,
        IInspectable* propertyValue,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController* This,
        __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceControllerVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPropertyByExtendedIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
        UINT32 extendedPropertyIdLength,
        BYTE* extendedPropertyId,
        __x_ABI_C__FIReference_1_UINT32* maxPropertyValueSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGetPropertyResult** operation);
    HRESULT (STDMETHODCALLTYPE* SetPropertyByExtendedIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2* This,
        UINT32 extendedPropertyIdLength,
        BYTE* extendedPropertyId,
        UINT32 propertyValueLength,
        BYTE* propertyValue,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceSetPropertyStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AudioDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3* This,
        __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceController3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceGetPropertyStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResultVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGetPropertyResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceInfos)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindAllAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MediaStreamType)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceKind)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameSourceKind* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceInformation)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSystem)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProfileId)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoProfileMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameArrivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_FrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameArrivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryAcquireLatestFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderStartStatus** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReaderVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AcquisitionMode)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode value);
    HRESULT (STDMETHODCALLTYPE* get_AcquisitionMode)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CFrames_CMediaFrameReaderAcquisitionMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetFrameReferenceBySourceId)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference* This,
        HSTRING sourceId,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReferenceVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameReference)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReference** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_SoftwareBitmap)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** value);
    HRESULT (STDMETHODCALLTYPE* get_Direct3DSurface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface** value);
    HRESULT (STDMETHODCALLTYPE* get_CameraIntrinsics)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CDevices_CCore_CICameraIntrinsics** value);
    HRESULT (STDMETHODCALLTYPE* get_InfraredMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIInfraredMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_DepthMediaFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrame** value);
    HRESULT (STDMETHODCALLTYPE* GetVideoFrame)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaFrameFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_DepthFormat)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIDepthMediaFrameFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormatVtbl;

    interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormatVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CFrames_CIVideoMediaFrameFormat_INTERFACE_DEFINED__) */
    
