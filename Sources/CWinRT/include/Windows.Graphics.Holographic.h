// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Perception.h"
#include "Windows.Perception.Spatial.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3 __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration;

#endif // ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        UINT32 index,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPoseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform* This,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransformVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransformVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustumVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum* This,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustumVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustumVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* sender,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* sender,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CIPerceptionTimestamp __x_ABI_CWindows_CPerception_CIPerceptionTimestamp;

#endif // ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindow __x_ABI_CWindows_CUI_CCore_CICoreWindow;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult;

typedef enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior;

typedef enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode;

typedef enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence;

typedef enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind;

typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicAdapterId __x_ABI_CWindows_CGraphics_CHolographic_CHolographicAdapterId;

enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult
    {
        __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult_Success = 0,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult_DeviceRemoved = 1,
};

enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior
    {
        __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior_WaitForFrameToFinish = 0,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior_DoNotWaitForFrameToFinish = 1,
};

enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode
    {
        __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode_PositionAndOrientation = 0,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode_OrientationOnly = 1,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode_Disabled = 2,
};

enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence
    {
        __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence_Absent = 0,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence_PresentPassive = 1,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence_PresentActive = 2,
};

enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind
    {
        __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind_Display = 0,
    __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind_PhotoVideoCamera = 1,
};

struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicAdapterId
    {
        UINT32 LowPart;
    INT32 HighPart;
};

struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 Left;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 Right;
};

#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RenderTargetSize)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportScaleFactor)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewportScaleFactor)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* SetNearPlaneDistance)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* SetFarPlaneDistance)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftViewportParameters)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters** result);
    HRESULT (STDMETHODCALLTYPE* get_RightViewportParameters)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters** result);
    HRESULT (STDMETHODCALLTYPE* get_Display)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPrimaryLayerEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPrimaryLayerEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxQuadLayerCount)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_QuadLayers)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicQuadLayer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanOverrideViewport)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsHardwareContentProtectionSupported)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHardwareContentProtectionEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHardwareContentProtectionEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ViewConfiguration)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPoseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HolographicCamera)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** value);
    HRESULT (STDMETHODCALLTYPE* get_Viewport)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* TryGetViewTransform)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicStereoTransform** value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionTransform)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform* value);
    HRESULT (STDMETHODCALLTYPE* TryGetCullingFrustum)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum** value);
    HRESULT (STDMETHODCALLTYPE* TryGetVisibleFrustum)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingFrustum** value);
    HRESULT (STDMETHODCALLTYPE* get_NearPlaneDistance)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_FarPlaneDistance)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPoseVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPoseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OverrideViewTransform)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform coordinateSystemToViewTransform);
    HRESULT (STDMETHODCALLTYPE* OverrideProjectionTransform)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicStereoTransform projectionTransform);
    HRESULT (STDMETHODCALLTYPE* OverrideViewport)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2* This,
        struct __x_ABI_CWindows_CFoundation_CRect leftViewport,
        struct __x_ABI_CWindows_CFoundation_CRect rightViewport);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParametersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetFocusPoint)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position);
    HRESULT (STDMETHODCALLTYPE* SetFocusPointWithNormal)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 normal);
    HRESULT (STDMETHODCALLTYPE* SetFocusPointWithNormalLinearVelocity)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 normal,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 linearVelocity);
    HRESULT (STDMETHODCALLTYPE* get_Direct3D11Device)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice** value);
    HRESULT (STDMETHODCALLTYPE* get_Direct3D11BackBuffer)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParametersVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParametersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReprojectionMode)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ReprojectionMode)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicReprojectionMode value);
    HRESULT (STDMETHODCALLTYPE* CommitDirect3D11DepthBuffer)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsContentProtectionEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsContentProtectionEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParametersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HiddenAreaMesh)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2** value);
    HRESULT (STDMETHODCALLTYPE* get_VisibleAreaMesh)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParametersVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParametersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraViewportParameters_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxViewportSize)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpaque)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AdapterId)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicAdapterId* value);
    HRESULT (STDMETHODCALLTYPE* get_SpatialLocator)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RefreshRate)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetViewConfiguration)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind kind,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplayStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddedCameras)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedCameras)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCamera** value);
    HRESULT (STDMETHODCALLTYPE* GetRenderingParameters)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraPose* cameraPose,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCameraRenderingParameters** value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentPrediction)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction** value);
    HRESULT (STDMETHODCALLTYPE* UpdateCurrentPrediction)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This);
    HRESULT (STDMETHODCALLTYPE* PresentUsingCurrentPrediction)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult* result);
    HRESULT (STDMETHODCALLTYPE* PresentUsingCurrentPredictionWithBehavior)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentWaitBehavior waitBehavior,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicFramePresentResult* result);
    HRESULT (STDMETHODCALLTYPE* WaitForFrameToFinish)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame* This);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrameVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetQuadLayerUpdateParameters)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* layer,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePredictionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CameraPoses)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicCameraPose** value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction* This,
        __x_ABI_CWindows_CPerception_CIPerceptionTimestamp** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePredictionVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePredictionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePrediction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadReports)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CHolographic__CHolographicFramePresentationReport** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitorVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompositorGpuDuration)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_AppGpuDuration)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_AppGpuOverrun)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MissedPresentationOpportunityCount)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PresentationCount)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReportVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
        struct __x_ABI_CWindows_CFoundation_CSize size,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithPixelFormat)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory* This,
        struct __x_ABI_CWindows_CFoundation_CSize size,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParametersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AcquireBufferToUpdateContent)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface** value);
    HRESULT (STDMETHODCALLTYPE* UpdateViewport)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* UpdateContentProtectionEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* UpdateExtents)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* UpdateLocationWithStationaryMode)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion orientation);
    HRESULT (STDMETHODCALLTYPE* UpdateLocationWithDisplayRelativeMode)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion orientation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParametersVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParametersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanAcquireWithHardwareProtection)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* AcquireBufferToUpdateContentWithHardwareProtection)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicQuadLayerUpdateParameters2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryAdapterId)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        struct __x_ABI_CWindows_CGraphics_CHolographic_CHolographicAdapterId* value);
    HRESULT (STDMETHODCALLTYPE* SetDirect3D11Device)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* value);
    HRESULT (STDMETHODCALLTYPE* add_CameraAdded)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraAddedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_CameraAdded)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_CameraRemoved)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpaceCameraRemovedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_CameraRemoved)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* CreateNextFrame)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserPresence)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicSpaceUserPresence* value);
    HRESULT (STDMETHODCALLTYPE* add_UserPresenceChanged)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CHolographic__CHolographicSpace_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UserPresenceChanged)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* WaitForNextFrameReady)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This);
    HRESULT (STDMETHODCALLTYPE* WaitForNextFrameReadyWithHeadStart)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan requestedHeadStartDuration);
    HRESULT (STDMETHODCALLTYPE* CreateFramePresentationMonitor)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2* This,
        UINT32 maxQueuedReports,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicFramePresentationMonitor** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Camera)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraAddedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Camera)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicCamera** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceCameraRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateForCoreWindow)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow* window,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpace** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAvailable)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_IsAvailableChanged)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsAvailableChanged)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsConfigured)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3Vtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicSpaceStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NativeRenderTargetSize)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_RenderTargetSize)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* RequestRenderTargetSize)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        struct __x_ABI_CWindows_CFoundation_CSize size,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPixelFormats)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDirectX__CDirectXPixelFormat** value);
    HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_PixelFormat)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_RefreshRate)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        enum __x_ABI_CWindows_CGraphics_CHolographic_CHolographicViewConfigurationKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Display)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicDisplay** value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfigurationVtbl;

    interface __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CHolographic_CIHolographicViewConfiguration_INTERFACE_DEFINED__) */
    
