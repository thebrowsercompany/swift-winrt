// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.UI.Xaml.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.Xaml.Interop.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider __x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXamlBinaryWriterErrorInformation __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXamlBinaryWriterErrorInformation;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXmlnsDefinition __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXmlnsDefinition;

struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXamlBinaryWriterErrorInformation
    {
        UINT32 InputStreamIndex;
    UINT32 LineNumber;
    UINT32 LinePosition;
};

struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXmlnsDefinition
    {
        HSTRING XmlNamespace;
    HSTRING Namespace;
};

#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Connect)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
        INT32 connectionId,
        IInspectable* target);
    HRESULT (STDMETHODCALLTYPE* GetBindingConnector)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector* This,
        INT32 connectionId,
        IInspectable* target,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnectorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIComponentConnector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Recycle)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This);
    HRESULT (STDMETHODCALLTYPE* ProcessBindings)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* This,
        IInspectable* item,
        INT32 itemIndex,
        INT32 phase,
        INT32* nextPhase);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtension** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ProvideValue)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ProvideValueWithIXamlServiceProvider)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlServiceProvider* serviceProvider,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIMarkupExtensionOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetObject)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_TargetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTarget_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* get_DeclaringType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetPropertyVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetPropertyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIProvideValueTargetProperty_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RootObject)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProviderVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIRootObjectProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BaseUri)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContextVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIUriContext_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Write)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* inputStreams,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* outputStreams,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* xamlMetadataProvider,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXamlBinaryWriterErrorInformation* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBinaryWriterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnosticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Disable)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics* This,
        INT32 lineNumber,
        INT32 columnNumber);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnosticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnosticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindScopeDiagnostics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataTemplateComponentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetDataTemplateComponent)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent** result);
    HRESULT (STDMETHODCALLTYPE* SetDataTemplateComponent)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIDataTemplateComponent* value);
    HRESULT (STDMETHODCALLTYPE* SuspendRendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* target);
    HRESULT (STDMETHODCALLTYPE* ResumeRendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* target);
    HRESULT (STDMETHODCALLTYPE* ConvertValue)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName type,
        IInspectable* value,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromString)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromBoolean)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromChar16)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        WCHAR value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromDateTime)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromDouble)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromInt32)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromUInt32)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromInt64)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        INT64 value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromUInt64)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromSingle)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromRect)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromTimeSpan)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromByte)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        BYTE value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromUri)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* SetPropertyFromObject)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics* This,
        IInspectable* dependencyObject,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty* propertyToSet,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* UnloadObject)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMarkupHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMemberVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAttachable)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDependencyProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadOnly)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TargetType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* GetValue)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        IInspectable* instance,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetValue)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember* This,
        IInspectable* instance,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMemberVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMemberVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetXamlType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName type,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** result);
    HRESULT (STDMETHODCALLTYPE* GetXamlTypeByFullName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
        HSTRING fullName,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** result);
    HRESULT (STDMETHODCALLTYPE* GetXmlnsDefinitions)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider* This,
        UINT32* resultLength,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CXmlnsDefinition** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProviderVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMetadataProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Load)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
        HSTRING xaml,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* LoadWithInitialTemplateValidation)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics* This,
        HSTRING xaml,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReaderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BaseType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember** value);
    HRESULT (STDMETHODCALLTYPE* get_FullName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsArray)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCollection)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsConstructible)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDictionary)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMarkupExtension)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBindable)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* get_BoxedType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType** value);
    HRESULT (STDMETHODCALLTYPE* get_UnderlyingType)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* ActivateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromString)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        HSTRING value,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetMember)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        HSTRING name,
        __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlMember** result);
    HRESULT (STDMETHODCALLTYPE* AddToVector)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        IInspectable* instance,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* AddToMap)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This,
        IInspectable* instance,
        IInspectable* key,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RunInitializer)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlType_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Resolve)(__x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver* This,
        HSTRING qualifiedTypeName,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolverVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolverVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlTypeResolver_INTERFACE_DEFINED__) */
    
