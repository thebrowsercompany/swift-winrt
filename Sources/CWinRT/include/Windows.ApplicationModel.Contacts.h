// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Data.Text.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Popups.h"
#include "Windows.UI.ViewManagement.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2 __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact __x_ABI_CWindows_CApplicationModel_CContacts_CIContact;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3 __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2 __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReferenceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CData_CText_CTextSegment __x_ABI_CWindows_CData_CText_CTextSegment;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        struct __x_ABI_CWindows_CData_CText_CTextSegment* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CData_CText_CTextSegment* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CText__CTextSegment** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReasonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        UINT32 index,
        struct __x_ABI_CWindows_CData_CText_CTextSegment* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        struct __x_ABI_CWindows_CData_CText_CTextSegment value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CData_CText_CTextSegment* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 index,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* sender,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* sender,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* sender,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* sender,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CPopups_CPlacement __x_ABI_CWindows_CUI_CPopups_CPlacement;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType;

typedef enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface;

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind_Home = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind_Work = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind_Other = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_None = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_ContactProfile = 0x1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_Message = 0x2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_AudioCall = 0x4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_VideoCall = 0x8,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_SocialFeeds = 0x10,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations_Share = 0x20,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType_AppAnnotationsReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType_AllAnnotationsReadWrite = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus_ServerSearchSyncManagerError = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus_ServerSearchUnknownError = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind_Default = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind_Basic = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind_Enterprise = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_Default = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_Email = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_Messaging = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_Phone = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_Video = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind_OrganizationalHierarchy = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType_Created = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType_Modified = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType_Deleted = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType_ChangeTrackingLost = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind_Birthday = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind_Anniversary = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind_Other = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind_Personal = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind_Work = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind_Other = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory_None = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory_Home = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory_Work = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory_Mobile = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory_Other = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Email = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_PhoneNumber = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Location = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_InstantMessage = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Custom = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_ConnectedServiceAccount = 5,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_ImportantDate = 6,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Address = 7,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_SignificantOther = 8,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Notes = 9,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_Website = 10,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType_JobInfo = 11,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess_SystemOnly = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess_Limited = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess_Full = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess_None = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess_None = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess_SystemOnly = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess_Limited = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_Idle = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_Syncing = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_UpToDate = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_AuthenticationError = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_PolicyError = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_UnknownError = 5,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus_ManualAccountRemovalRequired = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_Name = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_EmailAddress = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_PhoneNumber = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_JobInfo = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_YomiName = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind_Other = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder_FirstNameLastName = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder_LastNameFirstName = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Home = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Mobile = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Work = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Other = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Pager = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_BusinessFax = 5,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_HomeFax = 6,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Company = 7,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Assistant = 8,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind_Radio = 9,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields_None = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields_PhoneNumber = 0x1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields_EmailAddress = 0x2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields_PostalAddress = 0x4,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields_None = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields_Name = 0x1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields_Email = 0x2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields_Phone = 0x4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields_All = 0xffffffff,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope_Local = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope_Server = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Other = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Spouse = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Partner = 2,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Sibling = 3,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Parent = 4,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship_Child = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode_Contacts = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode_Fields = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType_AppContactsReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType_AllContactsReadOnly = 1,
    __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType_AllContactsReadWrite = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface
    {
        __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface_StartMenu = 0,
    __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface_Taskbar = 1,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindRawContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** value);
    HRESULT (STDMETHODCALLTYPE* TryLinkContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* primaryContact,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* secondaryContact,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contact);
    HRESULT (STDMETHODCALLTYPE* UnlinkRawContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* TrySetPreferredSourceForPictureAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* aggregateContact,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* rawContact,
        __x_ABI_C__FIAsyncOperation_1_boolean** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetRemoteIdentificationInformationAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2* This,
        HSTRING contactListId,
        HSTRING remoteSourceId,
        HSTRING accountId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_Thumbnail)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_Fields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactField** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Notes)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Notes)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Phones)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhone** value);
    HRESULT (STDMETHODCALLTYPE* get_Emails)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmail** value);
    HRESULT (STDMETHODCALLTYPE* get_Addresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddress** value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectedServiceAccounts)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccount** value);
    HRESULT (STDMETHODCALLTYPE* get_ImportantDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDate** value);
    HRESULT (STDMETHODCALLTYPE* get_DataSuppliers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_JobInfo)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_SignificantOthers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOther** value);
    HRESULT (STDMETHODCALLTYPE* get_Websites)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsite** value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderProperties)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact2* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactListId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayPictureUserUpdateTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayPictureUserUpdateTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_IsMe)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AggregateId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RingToneToken)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RingToneToken)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisplayPictureManuallySet)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LargeDisplayPicture)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_SmallDisplayPicture)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayPicture)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceDisplayPicture)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_TextToneToken)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TextToneToken)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsAggregate)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FullName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameOverride)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayNameOverride)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Nickname)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Nickname)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SortName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContact3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContact3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StreetAddress)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StreetAddress)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Locality)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Locality)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Region)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Region)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Country)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Country)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PostalCode)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PostalCode)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddressVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddressVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AnnotationListId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContactId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContactId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedOperations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations* value);
    HRESULT (STDMETHODCALLTYPE* put_SupportedOperations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabled)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderProperties)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactListId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContactListId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderPackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserDataAccountId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* TrySaveAnnotationAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* annotation,
        __x_ABI_C__FIAsyncOperation_1_boolean** ppResult);
    HRESULT (STDMETHODCALLTYPE* GetAnnotationAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        HSTRING annotationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** annotation);
    HRESULT (STDMETHODCALLTYPE* FindAnnotationsByRemoteIdAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        HSTRING remoteId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** annotations);
    HRESULT (STDMETHODCALLTYPE* FindAnnotationsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** annotations);
    HRESULT (STDMETHODCALLTYPE* DeleteAnnotationAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* annotation,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationListVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindContactIdsByEmailAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        HSTRING emailAddress,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING** contactIds);
    HRESULT (STDMETHODCALLTYPE* FindContactIdsByPhoneNumberAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        HSTRING phoneNumber,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING** contactIds);
    HRESULT (STDMETHODCALLTYPE* FindAnnotationsForContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** annotations);
    HRESULT (STDMETHODCALLTYPE* DisableAnnotationAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotation* annotation,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* CreateAnnotationListAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** value);
    HRESULT (STDMETHODCALLTYPE* CreateAnnotationListInAccountAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        HSTRING userDataAccountId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** value);
    HRESULT (STDMETHODCALLTYPE* GetAnnotationListAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        HSTRING annotationListId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** value);
    HRESULT (STDMETHODCALLTYPE* FindAnnotationListsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** lists);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindAnnotationsForContactListAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2* This,
        HSTRING contactListId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotation** annotations);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationStore2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Contacts)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactBatchStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetData)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderKind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind* value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderKind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardHeaderKind value);
    HRESULT (STDMETHODCALLTYPE* get_InitialTabKind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialTabKind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactCardTabKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ServerSearchContactListIds)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactChangeType* value);
    HRESULT (STDMETHODCALLTYPE* get_Contact)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AcceptChanges)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesThrough)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChange* lastChangeToAccept);
    HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactChange** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTrackerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* GetChangeReader)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeReader** value);
    HRESULT (STDMETHODCALLTYPE* Reset)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTrackerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTrackerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTracking)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ServiceName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ServiceName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccountVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccountVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Day)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* put_Day)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Month)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* put_Month)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Year)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_Year)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDateVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Address)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmailVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmailVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* value);
    HRESULT (STDMETHODCALLTYPE* get_Category)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactField* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactField;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactField_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateField_Default)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
        HSTRING value,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType type,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** field);
    HRESULT (STDMETHODCALLTYPE* CreateField_Category)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
        HSTRING value,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType type,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** field);
    HRESULT (STDMETHODCALLTYPE* CreateField_Custom)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory* This,
        HSTRING name,
        HSTRING value,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType type,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField** field);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroupVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamWithContentType** operation);
    HRESULT (STDMETHODCALLTYPE* get_Emails)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField** value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField** value);
    HRESULT (STDMETHODCALLTYPE* get_Locations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactLocationField** value);
    HRESULT (STDMETHODCALLTYPE* get_InstantMessages)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInstantMessageField** value);
    HRESULT (STDMETHODCALLTYPE* get_CustomFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField** value);
    HRESULT (STDMETHODCALLTYPE* QueryCustomFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation* This,
        HSTRING customName,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactField** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Service)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayText)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LaunchUri)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstantMessage_Default)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
        HSTRING userName,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** field);
    HRESULT (STDMETHODCALLTYPE* CreateInstantMessage_Category)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
        HSTRING userName,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** field);
    HRESULT (STDMETHODCALLTYPE* CreateInstantMessage_All)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory* This,
        HSTRING userName,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        HSTRING service,
        HSTRING displayText,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* verb,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageField** field);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactInstantMessageFieldFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompanyName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CompanyName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CompanyYomiName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CompanyYomiName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Department)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Department)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Manager)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Manager)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Office)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Office)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CompanyAddress)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CompanyAddress)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Call)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Map)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Post)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoCall)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLaunchActionVerbsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHidden)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHidden)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListOtherAppWriteAccess value);
    HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker** value);
    HRESULT (STDMETHODCALLTYPE* get_SyncManager)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsServerSearch)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_UserDataAccountId)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_ContactChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactList___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* value,
        EventRegistrationToken* returnValue);
    HRESULT (STDMETHODCALLTYPE* remove_ContactChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        EventRegistrationToken value);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* GetContactFromRemoteIdAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING remoteId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contact);
    HRESULT (STDMETHODCALLTYPE* GetMeContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** meContact);
    HRESULT (STDMETHODCALLTYPE* GetContactReader)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader** value);
    HRESULT (STDMETHODCALLTYPE* GetContactReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader** value);
    HRESULT (STDMETHODCALLTYPE* SaveContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* DeleteContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* GetContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* This,
        HSTRING contactId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contacts);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactList;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RegisterSyncManagerAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* put_SupportsServerSearch)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SyncConstraints)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LimitedWriteOperations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations** value);
    HRESULT (STDMETHODCALLTYPE* GetChangeTracker)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3* This,
        HSTRING identity,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperationsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryCreateOrUpdateContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDeleteContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations* This,
        HSTRING contactId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperationsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperationsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListLimitedWriteOperations_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraintsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanSyncDescriptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanSyncDescriptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHomePhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHomePhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxMobilePhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxMobilePhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWorkPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWorkPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOtherPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxOtherPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxPagerPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxPagerPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBusinessFaxPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxBusinessFaxPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHomeFaxPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHomeFaxPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxCompanyPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxCompanyPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAssistantPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAssistantPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxRadioPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxRadioPhoneNumbers)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxPersonalEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxPersonalEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWorkEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWorkEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOtherEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxOtherEmailAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHomeAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHomeAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWorkAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWorkAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOtherAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxOtherAddresses)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBirthdayDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxBirthdayDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAnniversaryDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAnniversaryDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOtherDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxOtherDates)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxOtherRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxOtherRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSpouseRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSpouseRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxPartnerRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxPartnerRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSiblingRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSiblingRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxParentRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxParentRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxChildRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxChildRelationships)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxJobInfo)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxJobInfo)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWebsites)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWebsites)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints* This,
        __x_ABI_C__FIReference_1_int* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraintsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraintsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncConstraints_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* SyncAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactListSyncManager_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactListSyncStatus value);
    HRESULT (STDMETHODCALLTYPE* put_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* put_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactListSyncManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnstructuredAddress)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Street)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_City)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Region)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Country)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PostalCode)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLocation_Default)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
        HSTRING unstructuredAddress,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** field);
    HRESULT (STDMETHODCALLTYPE* CreateLocation_Category)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
        HSTRING unstructuredAddress,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** field);
    HRESULT (STDMETHODCALLTYPE* CreateLocation_All)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory* This,
        HSTRING unstructuredAddress,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory category,
        HSTRING street,
        HSTRING city,
        HSTRING region,
        HSTRING country,
        HSTRING postalCode,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationField** field);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactLocationFieldFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ConvertContactToVCardAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* ConvertContactToVCardAsyncWithMaxBytes)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        UINT32 maxBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* ConvertVCardToContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* vCard,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore** result);
    HRESULT (STDMETHODCALLTYPE* RequestAnnotationStoreAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore** result);
    HRESULT (STDMETHODCALLTYPE* get_SystemDisplayNameOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemDisplayNameOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder value);
    HRESULT (STDMETHODCALLTYPE* get_SystemSortOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemSortOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder value);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUserVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowFullContactCard)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* fullContactCardOptions);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowContactCard)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        struct __x_ABI_CWindows_CFoundation_CRect selection);
    HRESULT (STDMETHODCALLTYPE* ShowContactCardWithPlacement)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement);
    HRESULT (STDMETHODCALLTYPE* ShowDelayLoadedContactCard)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader** dataLoader);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore** store);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ConvertContactToVCardAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference** vCard);
    HRESULT (STDMETHODCALLTYPE* ConvertContactToVCardAsyncWithMaxBytes)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        UINT32 maxBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CRandomAccessStreamReference** vCard);
    HRESULT (STDMETHODCALLTYPE* ConvertVCardToContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* vCard,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contact);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsyncWithAccessType)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore** store);
    HRESULT (STDMETHODCALLTYPE* RequestAnnotationStoreAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationStore** store);
    HRESULT (STDMETHODCALLTYPE* IsShowContactCardSupported)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ShowContactCardWithOptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* contactCardOptions);
    HRESULT (STDMETHODCALLTYPE* IsShowDelayLoadedContactCardSupported)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ShowDelayLoadedContactCardWithOptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardOptions* contactCardOptions,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactCardDelayedDataLoader** dataLoader);
    HRESULT (STDMETHODCALLTYPE* ShowFullContactCard)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* fullContactCardOptions);
    HRESULT (STDMETHODCALLTYPE* get_SystemDisplayNameOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemDisplayNameOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder value);
    HRESULT (STDMETHODCALLTYPE* get_SystemSortOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemSortOrder)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactNameOrder value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsShowFullContactCardSupportedAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* get_IncludeMiddleNameInSystemDisplayAndSort)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IncludeMiddleNameInSystemDisplayAndSort)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactManagerStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Field)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactMatchReasonKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Segments)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CText__CTextSegment** value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReasonVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReasonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactMatchReason_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactNameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FirstName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LastName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_LastName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MiddleName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MiddleName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_YomiGivenName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_YomiGivenName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_YomiFamilyName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_YomiFamilyName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HonorificNameSuffix)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_HonorificNameSuffix)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HonorificNamePrefix)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_HonorificNamePrefix)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_YomiDisplayName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactName* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactNameVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactNameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactName;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactName_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ClosePanel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This);
    HRESULT (STDMETHODCALLTYPE* get_HeaderColor)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderColor)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* add_LaunchFullAppRequested)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LaunchFullAppRequested)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** deferral);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhoneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Number)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Number)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhoneVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhoneVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CommitButtonText)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CommitButtonText)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* PickSingleContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);
    HRESULT (STDMETHODCALLTYPE* PickMultipleContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactInformation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredFieldsWithContactFieldType)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldType** value);
    HRESULT (STDMETHODCALLTYPE* PickContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);
    HRESULT (STDMETHODCALLTYPE* PickContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateForUser)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPicker** result);
    HRESULT (STDMETHODCALLTYPE* IsSupportedAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextSearch)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch** value);
    HRESULT (STDMETHODCALLTYPE* get_ContactListIds)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_IncludeContactsFromHiddenLists)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IncludeContactsFromHiddenLists)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQueryDesiredFields value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredOperations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredOperations)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactAnnotationOperations value);
    HRESULT (STDMETHODCALLTYPE* get_AnnotationListIds)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithText)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
        HSTRING text,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithTextAndFields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory* This,
        HSTRING text,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields fields,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptionsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Fields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields* value);
    HRESULT (STDMETHODCALLTYPE* put_Fields)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchFields value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SearchScope)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope* value);
    HRESULT (STDMETHODCALLTYPE* put_SearchScope)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactQuerySearchScope value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryTextSearch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactBatch** value);
    HRESULT (STDMETHODCALLTYPE* GetMatchingPropertiesWithMatchReason)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactMatchReason** ppRetVal);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOtherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOtherVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOtherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Relationship)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship* value);
    HRESULT (STDMETHODCALLTYPE* put_Relationship)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contacts);
    HRESULT (STDMETHODCALLTYPE* FindContactsWithSearchTextAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
        HSTRING searchText,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contacts);
    HRESULT (STDMETHODCALLTYPE* GetContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore* This,
        HSTRING contactId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** contacts);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker** value);
    HRESULT (STDMETHODCALLTYPE* add_ContactChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactStore___x_ABI_CWindows__CApplicationModel__CContacts__CContactChangedEventArgs* value,
        EventRegistrationToken* returnValue);
    HRESULT (STDMETHODCALLTYPE* remove_ContactChanged)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        EventRegistrationToken value);
    HRESULT (STDMETHODCALLTYPE* get_AggregateContactManager)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIAggregateContactManager** value);
    HRESULT (STDMETHODCALLTYPE* FindContactListsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** value);
    HRESULT (STDMETHODCALLTYPE* GetContactListAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        HSTRING contactListId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** value);
    HRESULT (STDMETHODCALLTYPE* CreateContactListAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        HSTRING displayName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** value);
    HRESULT (STDMETHODCALLTYPE* GetMeContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact** meContact);
    HRESULT (STDMETHODCALLTYPE* GetContactReader)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader** value);
    HRESULT (STDMETHODCALLTYPE* GetContactReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateContactListInAccountAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2* This,
        HSTRING displayName,
        HSTRING userDataAccountId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetChangeTracker)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3* This,
        HSTRING identity,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactChangeTracker** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStore3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactStoreNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsiteVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsiteVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsiteVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RawValue)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RawValue)(__x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredRemainingView)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredRemainingView)(__x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIFullContactCardOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Email)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneNumber)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_InstantMessage)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* ConvertNameToType)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        HSTRING name,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType* type);
    HRESULT (STDMETHODCALLTYPE* ConvertTypeToName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType type,
        HSTRING* name);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIKnownContactFieldStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactIds)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactIdsQueryResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_CWindows_CSystem_CIUser** user);
    HRESULT (STDMETHODCALLTYPE* IsPinSurfaceSupported)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface surface,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsContactPinned)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface surface,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* RequestPinContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface surface,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestPinContactsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContact* contacts,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface surface,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestUnpinContactAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact,
        enum __x_ABI_CWindows_CApplicationModel_CContacts_CPinnedContactSurface surface,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* SignalContactActivity)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* contact);
    HRESULT (STDMETHODCALLTYPE* GetPinnedContactIdsAsync)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CContacts__CPinnedContactIdsQueryResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager** result);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManager** result);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CContacts_CIPinnedContactManagerStatics_INTERFACE_DEFINED__) */
    
