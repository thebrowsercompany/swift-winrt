// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2 __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding;

typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdr2086Metadata __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdr2086Metadata;

enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace_RgbLimited = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace_RgbFull = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace_BT2020 = 2,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace_BT709 = 3,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption_None = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption_EotfSdr = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption_Eotf2084 = 2,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption_DolbyVisionLowLatency = 3,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding_Rgb444 = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding_Ycc444 = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding_Ycc422 = 2,
    __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding_Ycc420 = 3,
};

struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdr2086Metadata
    {
        UINT16 RedPrimaryX;
    UINT16 RedPrimaryY;
    UINT16 GreenPrimaryX;
    UINT16 GreenPrimaryY;
    UINT16 BluePrimaryX;
    UINT16 BluePrimaryY;
    UINT16 WhitePointX;
    UINT16 WhitePointY;
    UINT16 MaxMasteringLuminance;
    UINT16 MinMasteringLuminance;
    UINT16 MaxContentLightLevel;
    UINT16 MaxFrameAverageLightLevel;
};

#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSupportedDisplayModes)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayMode** result);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDisplayMode)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode** result);
    HRESULT (STDMETHODCALLTYPE* SetDefaultDisplayModeAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* RequestSetCurrentDisplayModeAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* mode,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestSetCurrentDisplayModeWithHdrAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* mode,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption hdrOption,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestSetCurrentDisplayModeWithHdrAndMetadataAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* mode,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdrOption hdrOption,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayHdr2086Metadata hdrMetadata,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* add_DisplayModesChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CCore__CHdmiDisplayInformation_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayModesChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayInformationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResolutionWidthInRawPixels)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ResolutionHeightInRawPixels)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RefreshRate)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_StereoEnabled)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_BitsPerPixel)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        UINT16* value);
    HRESULT (STDMETHODCALLTYPE* IsEqual)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* mode,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpace)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelEncoding)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CCore_CHdmiDisplayPixelEncoding* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSdrLuminanceSupported)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSmpte2084Supported)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Is2086MetadataSupported)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayModeVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayModeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDolbyVisionLowLatencySupported)(__x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CCore_CIHdmiDisplayMode2_INTERFACE_DEFINED__) */
    
