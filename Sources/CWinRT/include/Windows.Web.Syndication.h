// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Data.Xml.Dom.h"
#include "Windows.Security.Credentials.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttributeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLinkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPersonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus;

typedef enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat;

typedef enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType;

enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus
    {
        __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_Unknown = 0,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_MissingRequiredElement = 1,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_MissingRequiredAttribute = 2,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_InvalidXml = 3,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_UnexpectedContent = 4,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_UnsupportedFormat = 5,
};

enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat
    {
        __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Atom10 = 0,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss20 = 1,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss10 = 2,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss092 = 3,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss091 = 4,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat_Atom03 = 5,
};

enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType
    {
        __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType_Text = 0,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType_Html = 1,
    __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType_Xhtml = 2,
};

struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress
    {
        UINT32 BytesRetrieved;
    UINT32 TotalBytesToRetrieve;
};

struct __x_ABI_CWindows_CWeb_CSyndication_CTransferProgress
    {
        UINT32 BytesSent;
    UINT32 TotalBytesToSend;
    UINT32 BytesRetrieved;
    UINT32 TotalBytesToRetrieve;
};

#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Namespace)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Namespace)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationAttribute)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This,
        HSTRING attributeName,
        HSTRING attributeNamespace,
        HSTRING attributeValue,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttribute** syndicationAttribute);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Label)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Scheme)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Term)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Term)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationCategory)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
        HSTRING term,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** category);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationCategoryEx)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This,
        HSTRING term,
        HSTRING scheme,
        HSTRING label,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** category);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential** value);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential** value);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResponseBufferSize)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResponseBufferSize)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Timeout)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Timeout)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BypassCacheOnRetrieve)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BypassCacheOnRetrieve)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RetrieveFeedAsync)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationFeed___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationClient)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* serverCredential,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient** syndicationClient);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClientFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationContent)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
        HSTRING text,
        enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType type,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent** content);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationContentWithSourceUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* sourceUri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent** content);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationContentFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatus)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This,
        INT32 hresult,
        enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationErrorStatus* status);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationErrorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Authors)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** value);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** value);
    HRESULT (STDMETHODCALLTYPE* get_Contributors)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** value);
    HRESULT (STDMETHODCALLTYPE* get_Generator)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator** value);
    HRESULT (STDMETHODCALLTYPE* put_Generator)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* value);
    HRESULT (STDMETHODCALLTYPE* get_IconUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_IconUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem** value);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdatedTime)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_LastUpdatedTime)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Links)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink** value);
    HRESULT (STDMETHODCALLTYPE* get_ImageUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ImageUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Rights)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Rights)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Subtitle)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_LastUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_NextUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceFormat)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat* value);
    HRESULT (STDMETHODCALLTYPE* Load)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        HSTRING feed);
    HRESULT (STDMETHODCALLTYPE* LoadFromXml)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* feedDocument);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationFeed)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This,
        HSTRING title,
        HSTRING subtitle,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed** feed);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeedFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Version)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationGenerator)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This,
        HSTRING text,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGenerator** generator);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Authors)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** value);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** value);
    HRESULT (STDMETHODCALLTYPE* get_Contributors)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationPerson** value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdatedTime)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_LastUpdatedTime)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Links)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationLink** value);
    HRESULT (STDMETHODCALLTYPE* get_PublishedDate)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_PublishedDate)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Rights)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Rights)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationFeed* value);
    HRESULT (STDMETHODCALLTYPE* get_Summary)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Summary)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_CommentsUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_CommentsUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_EditUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_EditMediaUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_ETag)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* Load)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        HSTRING item);
    HRESULT (STDMETHODCALLTYPE* LoadFromXml)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* itemDocument);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationItem)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This,
        HSTRING title,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationContent* content,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** item);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Length)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Relationship)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Relationship)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceLanguage)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ResourceLanguage)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationLink)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** link);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationLinkEx)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        HSTRING relationship,
        HSTRING title,
        HSTRING mediaType,
        UINT32 length,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLink** link);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationLinkFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NodeName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_NodeName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NodeNamespace)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_NodeNamespace)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NodeValue)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_NodeValue)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BaseUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseUri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_AttributeExtensions)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationAttribute** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementExtensions)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CSyndication__CISyndicationNode** value);
    HRESULT (STDMETHODCALLTYPE* GetXmlDocument)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode* This,
        enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationFormat format,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** xmlDocument);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationNode)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This,
        HSTRING nodeName,
        HSTRING nodeNamespace,
        HSTRING nodeValue,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode** node);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNodeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Email)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Email)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationPerson)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** person);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationPersonEx)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This,
        HSTRING name,
        HSTRING email,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPerson** person);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationPersonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Type)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Xml)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* put_Xml)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationText* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationText;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSyndicationText)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
        HSTRING text,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** syndicationText);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationTextEx)(__x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This,
        HSTRING text,
        enum __x_ABI_CWindows_CWeb_CSyndication_CSyndicationTextType type,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** syndicationText);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CSyndication_CISyndicationTextFactory_INTERFACE_DEFINED__) */
    
