// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Contacts.h"
#include "Windows.Devices.Enumeration.h"
#include "Windows.System.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2 __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2 __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2 __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2 __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3 __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4 __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2 __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3 __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID;

#if !defined(____x_ABI_C__FIAsyncOperation_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_GUID __x_ABI_C__FIAsyncOperation_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_GUID;

    typedef struct __x_ABI_C__FIAsyncOperation_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_GUID* This,
        GUID* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_GUIDVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID* This,
        __x_ABI_C__FIAsyncOperation_1_GUID* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUIDVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_GUID_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_UINT32 __x_ABI_C__FIAsyncOperation_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilitiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CDevices_CEnumeration_CDeviceAccessStatus __x_ABI_CWindows_CDevices_CEnumeration_CDeviceAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
        enum __x_ABI_CWindows_CDevices_CEnumeration_CDeviceAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* sender,
        __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact __x_ABI_CWindows_CApplicationModel_CContacts_CIContact;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason;

typedef enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState;

enum __x_ABI_CWindows_CApplicationModel_CCalls_CCellularDtmfMode
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CCellularDtmfMode_Continuous = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CCellularDtmfMode_Burst = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint_Default = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint_Bluetooth = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint_Speakerphone = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia_Audio = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia_Video = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess_Full = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess_SystemOnly = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia_None = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia_Audio = 0x1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia_Video = 0x2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia_All = 0xffffffff,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind_PhoneNumber = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind_Custom = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind_CellularPhoneLineId = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind_PackageFamilyName = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType_AppEntriesReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType_AllEntriesLimitedReadWrite = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType_AllEntriesReadWrite = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia_Audio = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia_AudioAndVideo = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia_AudioAndRealTimeText = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation_Default = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation_Tile = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation_Dialer = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation_InCallUI = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport_Cellular = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport_VoipApp = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport_Bluetooth = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus_Created = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus_Started = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus_Stopped = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_Unknown = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_NoSignal = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_Deregistered = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_Denied = 3,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_Searching = 4,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_Home = 5,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_RoamingInternational = 6,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState_RoamingDomestic = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_Unknown = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_PinNotRequired = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_PinUnlocked = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_PinLocked = 3,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_PukLocked = 4,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_NotInserted = 5,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_Invalid = 6,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState_Disabled = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType_None = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType_Traditional = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType_Visual = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia_None = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia_Audio = 0x1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia_Video = 0x2,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason_UserIgnored = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason_TimedOut = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason_OtherIncomingCall = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason_EmergencyCallExists = 3,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason_InvalidCallState = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallResourceReservationStatus_ResourcesNotAvailable = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState
    {
        __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState_Ended = 0,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState_Held = 1,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState_Active = 2,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState_Incoming = 3,
    __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState_Outgoing = 4,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AcceptedMedia)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallAnswerEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RejectReason)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallRejectReason* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallRejectEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CICallStateChangeEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndCallDeferral** value);
    HRESULT (STDMETHODCALLTYPE* get_Deadline)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallEndRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Dismiss)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This);
    HRESULT (STDMETHODCALLTYPE* add_EndRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallEndRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EndRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CLockScreenCallUI_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_CallTitle)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CallTitle)(__x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUIVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CILockScreenCallUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Muted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIMuteChangeEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlockUnknownNumbers)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlockUnknownNumbers)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlockPrivateNumbers)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlockPrivateNumbers)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* SetCallBlockingListAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics* This,
        __x_ABI_C__FIIterable_1_HSTRING* phoneNumberList,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallBlockingStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress** value);
    HRESULT (STDMETHODCALLTYPE* put_Address)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCallerIdBlocked)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCallerIdBlocked)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEmergency)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEmergency)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsIncoming)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIncoming)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMissed)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMissed)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsRinging)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRinging)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeen)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSeen)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuppressed)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSuppressed)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVoicemail)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVoicemail)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Media)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia* value);
    HRESULT (STDMETHODCALLTYPE* put_Media)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryMedia value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SourceIdKind)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceIdKind)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistorySourceIdKind value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContactId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RawAddress)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RawAddress)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RawAddressKind)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind* value);
    HRESULT (STDMETHODCALLTYPE* put_RawAddressKind)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory* This,
        HSTRING rawAddress,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryRawAddressKind rawAddressKind,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddress** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryAddressFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredMedia)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredMedia)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryEntryQueryDesiredMedia value);
    HRESULT (STDMETHODCALLTYPE* get_SourceIds)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUserVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallHistoryStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryStore** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetEntryAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        HSTRING callHistoryEntryId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry** result);
    HRESULT (STDMETHODCALLTYPE* GetEntryReader)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader** result);
    HRESULT (STDMETHODCALLTYPE* GetEntryReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryQueryOptions* queryOptions,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntryReader** result);
    HRESULT (STDMETHODCALLTYPE* SaveEntryAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* callHistoryEntry,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DeleteEntryAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* callHistoryEntry,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DeleteEntriesAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* callHistoryEntries,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkEntryAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryEntry* callHistoryEntry,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkEntriesAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallHistoryEntry* callHistoryEntries,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetUnseenCountAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* MarkAllAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetSourcesUnseenCountAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_C__FIIterable_1_HSTRING* sourceIds,
        __x_ABI_C__FIAsyncOperation_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* MarkSourcesAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore* This,
        __x_ABI_C__FIIterable_1_HSTRING* sourceIds,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallHistoryStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowPhoneCallUI)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics* This,
        HSTRING phoneNumber,
        HSTRING displayName);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_CallStateChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CallStateChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_IsCallActive)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCallIncoming)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* ShowPhoneCallSettingsUI)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallStore** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsEmergencyPhoneNumberAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
        HSTRING number,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetDefaultLineAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
        __x_ABI_C__FIAsyncOperation_1_GUID** result);
    HRESULT (STDMETHODCALLTYPE* RequestLineWatcher)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsVideoCallingCapable)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities* This,
        boolean* pValue);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCapabilitiesAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics* This,
        HSTRING phoneNumber,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneCallVideoCapabilities** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilitiesManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Number)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Number)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Contact)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** value);
    HRESULT (STDMETHODCALLTYPE* put_Contact)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value);
    HRESULT (STDMETHODCALLTYPE* get_ContactPhone)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone** value);
    HRESULT (STDMETHODCALLTYPE* put_ContactPhone)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone* value);
    HRESULT (STDMETHODCALLTYPE* get_Media)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia* value);
    HRESULT (STDMETHODCALLTYPE* put_Media)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneCallMedia value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEndpoint)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioEndpoint)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneAudioRoutingEndpoint value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_LineChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LineChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayColor)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkState)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneNetworkState* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Voicemail)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail** value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CellularDetails)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails** value);
    HRESULT (STDMETHODCALLTYPE* get_Transport)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport* value);
    HRESULT (STDMETHODCALLTYPE* get_CanDial)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsTile)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoCallingCapabilities)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneCallVideoCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_LineConfiguration)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration** value);
    HRESULT (STDMETHODCALLTYPE* IsImmediateDialNumberAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        HSTRING number,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* Dial)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        HSTRING number,
        HSTRING displayName);
    HRESULT (STDMETHODCALLTYPE* DialWithOptions)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneDialOptions* options);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* EnableTextReply)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TransportDeviceId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLine2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SimState)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneSimState* value);
    HRESULT (STDMETHODCALLTYPE* get_SimSlotIndex)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsModemOn)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_RegistrationRejectCode)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* GetNetworkOperatorDisplayText)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineNetworkOperatorDisplayTextLocation location,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineCellularDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsVideoCallingEnabled)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedProperties)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfigurationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics* This,
        GUID lineId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLine** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Transport)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport* value);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CEnumeration__CDeviceAccessStatus** operation);
    HRESULT (STDMETHODCALLTYPE* RegisterApp)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This);
    HRESULT (STDMETHODCALLTYPE* RegisterAppForUser)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        __x_ABI_CWindows_CSystem_CIUser* user);
    HRESULT (STDMETHODCALLTYPE* UnregisterApp)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This);
    HRESULT (STDMETHODCALLTYPE* UnregisterAppForUser)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        __x_ABI_CWindows_CSystem_CIUser* user);
    HRESULT (STDMETHODCALLTYPE* IsRegistered)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Connect)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
        HSTRING id,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDevice** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorForPhoneLineTransport)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineTransport transport,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineTransportDeviceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This);
    HRESULT (STDMETHODCALLTYPE* add_LineAdded)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LineAdded)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LineRemoved)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LineRemoved)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LineUpdated)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LineUpdated)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CPhoneLineWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneLineWatcherStatus* status);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LineId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs* This,
        GUID* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneLineWatcherEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Number)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MessageCount)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CPhoneVoicemailType* value);
    HRESULT (STDMETHODCALLTYPE* DialVoicemailAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemailVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemailVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIPhoneVoicemail_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReserveCallResourcesAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        HSTRING taskEntryPoint,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus** operation);
    HRESULT (STDMETHODCALLTYPE* add_MuteStateChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipCallCoordinator___x_ABI_CWindows__CApplicationModel__CCalls__CMuteChangeEventArgs* muteChangeHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MuteStateChanged)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* RequestNewIncomingCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING contactNumber,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* contactImage,
        HSTRING serviceName,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* brandingImage,
        HSTRING callDetails,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* ringtone,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan ringTimeout,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);
    HRESULT (STDMETHODCALLTYPE* RequestNewOutgoingCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING serviceName,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);
    HRESULT (STDMETHODCALLTYPE* NotifyMuted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This);
    HRESULT (STDMETHODCALLTYPE* NotifyUnmuted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This);
    HRESULT (STDMETHODCALLTYPE* RequestOutgoingUpgradeToVideoCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        GUID callUpgradeGuid,
        HSTRING context,
        HSTRING contactName,
        HSTRING serviceName,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);
    HRESULT (STDMETHODCALLTYPE* RequestIncomingUpgradeToVideoCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING contactNumber,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* contactImage,
        HSTRING serviceName,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* brandingImage,
        HSTRING callDetails,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* ringtone,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan ringTimeout,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);
    HRESULT (STDMETHODCALLTYPE* TerminateCellularCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        GUID callUpgradeGuid);
    HRESULT (STDMETHODCALLTYPE* CancelUpgrade)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator* This,
        GUID callUpgradeGuid);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetupNewAcceptedCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING contactNumber,
        HSTRING serviceName,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestNewAppInitiatedCall)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING contactNumber,
        HSTRING serviceName,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);
    HRESULT (STDMETHODCALLTYPE* RequestNewIncomingCallWithContactRemoteId)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3* This,
        HSTRING context,
        HSTRING contactName,
        HSTRING contactNumber,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* contactImage,
        HSTRING serviceName,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* brandingImage,
        HSTRING callDetails,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* ringtone,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan ringTimeout,
        HSTRING contactRemoteId,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall** call);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReserveOneProcessCallResourcesAsync)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCallResourceReservationStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics* This,
        __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinator** coordinator);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipCallCoordinatorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCallVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_EndRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EndRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_HoldRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HoldRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ResumeRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallStateChangeEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ResumeRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AnswerRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallAnswerEventArgs* acceptHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AnswerRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RejectRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCalls__CVoipPhoneCall___x_ABI_CWindows__CApplicationModel__CCalls__CCallRejectEventArgs* rejectHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RejectRequested)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* NotifyCallHeld)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);
    HRESULT (STDMETHODCALLTYPE* NotifyCallActive)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);
    HRESULT (STDMETHODCALLTYPE* NotifyCallEnded)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);
    HRESULT (STDMETHODCALLTYPE* get_ContactName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContactName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_CallMedia)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia* value);
    HRESULT (STDMETHODCALLTYPE* put_CallMedia)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia value);
    HRESULT (STDMETHODCALLTYPE* NotifyCallReady)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCallVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCallVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryShowAppUI)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* NotifyCallAccepted)(__x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3* This,
        enum __x_ABI_CWindows_CApplicationModel_CCalls_CVoipPhoneCallMedia media);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCalls_CIVoipPhoneCall3_INTERFACE_DEFINED__) */
    
