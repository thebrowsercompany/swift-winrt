// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
#include "Windows.Web.h"
#include "Windows.Web.Http.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControl __x_ABI_CWindows_CWeb_CUI_CIWebViewControl;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2 __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2 __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* sender,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CIUriToStreamResolver __x_ABI_CWindows_CWeb_CIUriToStreamResolver;

#endif // ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CWeb_CWebErrorStatus __x_ABI_CWindows_CWeb_CWebErrorStatus;

typedef enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState;

typedef enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType;

enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState
    {
        __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState_Unknown = 0,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState_Defer = 1,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState_Allow = 2,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState_Deny = 3,
};

enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType
    {
        __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_Geolocation = 0,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_UnlimitedIndexedDBQuota = 1,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_Media = 2,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_PointerLock = 3,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_WebNotifications = 4,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_Screen = 5,
    __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType_ImmersiveView = 6,
};

#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* source);
    HRESULT (STDMETHODCALLTYPE* get_DocumentTitle)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoBack)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForward)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultBackgroundColor)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBackgroundColor)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ContainsFullScreenElement)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Settings)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_DeferredPermissionRequests)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CUI__CWebViewControlDeferredPermissionRequest** value);
    HRESULT (STDMETHODCALLTYPE* GoForward)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* GoBack)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* Refresh)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* source);
    HRESULT (STDMETHODCALLTYPE* NavigateToString)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        HSTRING text);
    HRESULT (STDMETHODCALLTYPE* NavigateToLocalStreamUri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* source,
        __x_ABI_CWindows_CWeb_CIUriToStreamResolver* streamResolver);
    HRESULT (STDMETHODCALLTYPE* NavigateWithHttpRequestMessage)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* requestMessage);
    HRESULT (STDMETHODCALLTYPE* InvokeScriptAsync)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        HSTRING scriptName,
        __x_ABI_C__FIIterable_1_HSTRING* arguments,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* CapturePreviewToStreamAsync)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* CaptureSelectedContentToDataPackageAsync)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage** operation);
    HRESULT (STDMETHODCALLTYPE* BuildLocalStreamUri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        HSTRING contentIdentifier,
        HSTRING relativePath,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* GetDeferredPermissionRequestById)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        UINT32 id,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* add_NavigationStarting)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStarting)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLoading)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLoading)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DOMContentLoaded)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DOMContentLoaded)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationCompleted)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationCompleted)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationStarting)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationStarting)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameContentLoading)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameContentLoading)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameDOMContentLoaded)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlDOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameDOMContentLoaded)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationCompleted)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationCompleted)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScriptNotify)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlScriptNotifyEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScriptNotify)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LongRunningScriptDetected)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlLongRunningScriptDetectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LongRunningScriptDetected)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnsafeContentWarningDisplaying)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnsafeContentWarningDisplaying)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnviewableContentIdentified)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnviewableContentIdentifiedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnviewableContentIdentified)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PermissionRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlPermissionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PermissionRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnsupportedUriSchemeIdentified)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnsupportedUriSchemeIdentified)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NewWindowRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlNewWindowRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NewWindowRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContainsFullScreenElementChanged)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContainsFullScreenElementChanged)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WebResourceRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CUI__CIWebViewControl___x_ABI_CWindows__CWeb__CUI__CWebViewControlWebResourceRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebResourceRequested)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControl;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddInitializeScript)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControl2* This,
        HSTRING script);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2Vtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControl2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControl2;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControl2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This,
        enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType* value);
    HRESULT (STDMETHODCALLTYPE* Allow)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Deny)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExecutionTime)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_StopPageScriptExecution)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StopPageScriptExecution)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuccess)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WebErrorStatus)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewWindow)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl** value);
    HRESULT (STDMETHODCALLTYPE* put_NewWindow)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControl* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** deferral);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
        enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionType* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This,
        enum __x_ABI_CWindows_CWeb_CUI_CWebViewControlPermissionState* value);
    HRESULT (STDMETHODCALLTYPE* Defer)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Allow)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Deny)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PermissionRequest)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsJavaScriptEnabled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsJavaScriptEnabled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIndexedDBEnabled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsIndexedDBEnabled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsScriptNotifyAllowed)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsScriptNotifyAllowed)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** deferral);
    HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage** value);
    HRESULT (STDMETHODCALLTYPE* put_Response)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage* value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs_INTERFACE_DEFINED__) */
    
