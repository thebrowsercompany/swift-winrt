// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Perception.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.RemoteSystems.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2 __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2 __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference;

#endif // ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        HSTRING key,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiencyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReferenceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4 __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4Vtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* sender,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* sender,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* sender,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* sender,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* sender,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane __x_ABI_CWindows_CFoundation_CNumerics_CPlane;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

#ifndef ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__
#define ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPerception_CIPerceptionTimestamp __x_ABI_CWindows_CPerception_CIPerceptionTimestamp;

#endif // ____x_ABI_CWindows_CPerception_CIPerceptionTimestamp_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose;

typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus;

typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability;

typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange;

typedef enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange;

typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox;

typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum;

typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingOrientedBox __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingOrientedBox;

typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingSphere __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingSphere;

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose_Relocalization = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose_Sharing = 1,
};

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_Created = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_Started = 1,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_Stopping = 3,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_Stopped = 4,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus_Aborted = 5,
};

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability_Unavailable = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability_OrientationOnly = 1,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability_PositionalTrackingActivating = 2,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability_PositionalTrackingActive = 3,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability_PositionalTrackingInhibited = 4,
};

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange_ForwardOnly = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange_Omnidirectional = 1,
};

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange_NoMovement = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange_Bounded = 1,
};

enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus
    {
        __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus_Unspecified = 0,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus_Allowed = 1,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus_DeniedByUser = 2,
    __x_ABI_CWindows_CPerception_CSpatial_CSpatialPerceptionAccessStatus_DeniedBySystem = 3,
};

struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Center;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Extents;
};

struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Near;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Far;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Right;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Left;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Top;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CPlane Bottom;
};

struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingOrientedBox
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Center;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Extents;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion Orientation;
};

struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingSphere
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Center;
    FLOAT Radius;
};

struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialRay
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Origin;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 Direction;
};

#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CoordinateSystem)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);
    HRESULT (STDMETHODCALLTYPE* get_RawCoordinateSystem)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);
    HRESULT (STDMETHODCALLTYPE* add_RawCoordinateSystemAdjusted)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorRawCoordinateSystemAdjustedEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_RawCoordinateSystemAdjusted)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemovedByUser)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2Vtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiencyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsMinimallySufficient)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SufficiencyLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_RecommendedSufficiencyLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiencyVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiencyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExportSufficiency_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAnchorExportSufficiencyAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* anchor,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose purpose,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorExportSufficiency** operation);
    HRESULT (STDMETHODCALLTYPE* TryExportAnchorAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* anchor,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialAnchorExportPurpose purpose,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream* stream,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporter** value);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus** result);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorExporterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchorStore** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldRawCoordinateSystemToNewRawCoordinateSystemTransform)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorRawCoordinateSystemAdjustedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryCreateRelativeTo)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** value);
    HRESULT (STDMETHODCALLTYPE* TryCreateWithPositionRelativeTo)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** value);
    HRESULT (STDMETHODCALLTYPE* TryCreateWithPositionAndOrientationRelativeTo)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 position,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion orientation,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAllSavedAnchors)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** value);
    HRESULT (STDMETHODCALLTYPE* TrySave)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
        HSTRING id,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* anchor,
        boolean* succeeded);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This,
        HSTRING id);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore* This);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStoreVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryImportAnchorsAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor** operation);
    HRESULT (STDMETHODCALLTYPE* TryExportAnchorsAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPerception__CSpatial__CSpatialAnchor* anchors,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream* stream,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialPerceptionAccessStatus** result);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchorTransferManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromBox)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox box,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume** value);
    HRESULT (STDMETHODCALLTYPE* FromOrientedBox)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingOrientedBox box,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume** value);
    HRESULT (STDMETHODCALLTYPE* FromSphere)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingSphere sphere,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume** value);
    HRESULT (STDMETHODCALLTYPE* FromFrustum)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingFrustum frustum,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolume** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialBoundingVolumeStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetTransformTo)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* target,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CMatrix4x4** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystemVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Anchor)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Entity)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityAddedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithSpatialAnchor)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* spatialAnchor,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithSpatialAnchorAndProperties)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialAnchor* spatialAnchor,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* propertySet,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactoryVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Entity)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* entity,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* RemoveAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity* entity,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* CreateEntityWatcher)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* TryGetForRemoteSystemSession)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* session,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStore** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityStoreStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Entity)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntity** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialEntityWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityAddedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityRemovedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialEntityWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher* This);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcherVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialEntityWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteLinearVelocity)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteLinearAcceleration)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteAngularVelocity)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteAngularAcceleration)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocationVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteAngularVelocityAxisAngle)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteAngularAccelerationAxisAngle)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2Vtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Locatability)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLocatability* value);
    HRESULT (STDMETHODCALLTYPE* add_LocatabilityChanged)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_LocatabilityChanged)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PositionalTrackingDeactivating)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocator___x_ABI_CWindows__CPerception__CSpatial__CSpatialLocatorPositionalTrackingDeactivatingEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PositionalTrackingDeactivating)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* TryLocateAtTimestamp)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        __x_ABI_CWindows_CPerception_CIPerceptionTimestamp* timestamp,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocation** value);
    HRESULT (STDMETHODCALLTYPE* CreateAttachedFrameOfReferenceAtCurrentHeading)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateAttachedFrameOfReferenceAtCurrentHeadingWithPosition)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateAttachedFrameOfReferenceAtCurrentHeadingWithPositionAndOrientation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion relativeOrientation,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateAttachedFrameOfReferenceAtCurrentHeadingWithPositionAndOrientationAndRelativeHeading)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion relativeOrientation,
        DOUBLE relativeHeadingInRadians,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateStationaryFrameOfReferenceAtCurrentLocation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateStationaryFrameOfReferenceAtCurrentLocationWithPosition)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateStationaryFrameOfReferenceAtCurrentLocationWithPositionAndOrientation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion relativeOrientation,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* CreateStationaryFrameOfReferenceAtCurrentLocationWithPositionAndOrientationAndRelativeHeading)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 relativePosition,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion relativeOrientation,
        DOUBLE relativeHeadingInRadians,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RelativePosition)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativePosition)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeOrientation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeOrientation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* AdjustHeading)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        DOUBLE headingOffsetInRadians);
    HRESULT (STDMETHODCALLTYPE* GetStationaryCoordinateSystemAtTimestamp)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CIPerceptionTimestamp* timestamp,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);
    HRESULT (STDMETHODCALLTYPE* TryGetRelativeHeadingAtTimestamp)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CIPerceptionTimestamp* timestamp,
        __x_ABI_C__FIReference_1_double** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReferenceVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorAttachedFrameOfReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Canceled)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Canceled)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorPositionalTrackingDeactivatingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialLocatorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CoordinateSystem)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);
    HRESULT (STDMETHODCALLTYPE* get_MovementRange)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialMovementRange* value);
    HRESULT (STDMETHODCALLTYPE* get_LookDirectionRange)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
        enum __x_ABI_CWindows_CPerception_CSpatial_CSpatialLookDirectionRange* value);
    HRESULT (STDMETHODCALLTYPE* GetCoordinateSystemAtCurrentLocation)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialLocator* locator,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** result);
    HRESULT (STDMETHODCALLTYPE* TryGetMovementBounds)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem* coordinateSystem,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReference** value);
    HRESULT (STDMETHODCALLTYPE* add_CurrentChanged)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentChanged)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* RequestNewStageAsync)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialStageFrameOfReference** result);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStaticsVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStageFrameOfReferenceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CoordinateSystem)(__x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference* This,
        __x_ABI_CWindows_CPerception_CSpatial_CISpatialCoordinateSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReferenceVtbl;

    interface __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference;
#endif /* !defined(____x_ABI_CWindows_CPerception_CSpatial_CISpatialStationaryFrameOfReference_INTERFACE_DEFINED__) */
    
