// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.Canvas.h"
#include "Microsoft.Graphics.Canvas.Geometry.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasCapStyle __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasCapStyle;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasFilledRegionDetermination __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasFilledRegionDetermination;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasLineJoin __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasLineJoin;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility;

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMinYMin = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMidYMin = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMaxYMin = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMinYMid = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMidYMid = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMaxYMid = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMinYMax = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMidYMax = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment_XMaxYMax = 9,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling_Meet = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling_Slice = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay_Inline = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay_None = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits_Number = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits_Percentage = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow_DoNotClipToViewport = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow_ClipToViewport = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_None = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_Color = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_CurrentColor = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_Uri = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_UriThenNone = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_UriThenColor = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType_UriThenCurrentColor = 6,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_ClosePath = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_MoveAbsolute = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_MoveRelative = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_LineAbsolute = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_LineRelative = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_CubicAbsolute = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_CubicRelative = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_QuadraticAbsolute = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_QuadraticRelative = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_ArcAbsolute = 9,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_ArcRelative = 10,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_HorizontalAbsolute = 11,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_HorizontalRelative = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_VerticalAbsolute = 13,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_VerticalRelative = 14,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_CubicSmoothAbsolute = 15,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_CubicSmoothRelative = 16,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_QuadraticSmoothAbsolute = 17,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand_QuadraticSmoothRelative = 18,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits_UserSpaceOnUse = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits_ObjectBoundingBox = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility_Visible = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility_Hidden = 1,
};

#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Clone)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute** result);
    HRESULT (STDMETHODCALLTYPE* GetElement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** value);
    HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttributeVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);
    HRESULT (STDMETHODCALLTYPE* GetXml)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        HSTRING* xmlString);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* put_Root)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Root)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** value);
    HRESULT (STDMETHODCALLTYPE* FindElementById)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        HSTRING id,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** element);
    HRESULT (STDMETHODCALLTYPE* CreatePaintAttributeWithDefaults)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreatePaintAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType paintType,
        struct __x_ABI_CWindows_CUI_CColor color,
        HSTRING id,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathAttributeWithDefaults)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        UINT32 segmentDataLength,
        FLOAT* segmentData,
        UINT32 commandsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand* commands,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreatePointsAttributeWithDefaults)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreatePointsAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        UINT32 pointsLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* points,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreateStrokeDashArrayAttributeWithDefaults)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute** result);
    HRESULT (STDMETHODCALLTYPE* CreateStrokeDashArrayAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        UINT32 dashValuesLength,
        FLOAT* dashValues,
        UINT32 unitValuesLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits* unitValues,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute** result);
    HRESULT (STDMETHODCALLTYPE* LoadElementFromXml)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        HSTRING xmlString,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** svgElement);
    HRESULT (STDMETHODCALLTYPE* LoadElementAsync)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgNamedElement** svgElement);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateEmpty)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument** canvasSvgDocument);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadFromXml)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        HSTRING xmlString,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument** svgDocument);
    HRESULT (STDMETHODCALLTYPE* LoadAsync)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CSvg__CCanvasSvgDocument** svgDocument);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocumentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContainingDocument)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgDocument** value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** value);
    HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElementVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AppendChild)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* child);
    HRESULT (STDMETHODCALLTYPE* CreateAndAppendNamedChildElement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING childName,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement** childElement);
    HRESULT (STDMETHODCALLTYPE* CreateAndAppendTextChildElement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING textContent,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement** childElement);
    HRESULT (STDMETHODCALLTYPE* get_FirstChild)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement** value);
    HRESULT (STDMETHODCALLTYPE* get_LastChild)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement** value);
    HRESULT (STDMETHODCALLTYPE* GetPreviousSibling)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* child,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement** value);
    HRESULT (STDMETHODCALLTYPE* GetNextSibling)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* child,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement** value);
    HRESULT (STDMETHODCALLTYPE* get_SpecifiedAttributes)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        UINT32* valueElementsLength,
        HSTRING** valueElements);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasChildren)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* InsertChildBefore)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* child,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* referenceChild);
    HRESULT (STDMETHODCALLTYPE* IsAttributeSpecified)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* IsAttributeSpecifiedWithInherhited)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        boolean inherited,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName);
    HRESULT (STDMETHODCALLTYPE* RemoveChild)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* child);
    HRESULT (STDMETHODCALLTYPE* ReplaceChild)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* newChild,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgElement* oldChild);
    HRESULT (STDMETHODCALLTYPE* SetStringAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        HSTRING attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetStringAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        HSTRING* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute* attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgAttribute** attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetIdAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        HSTRING attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetIdAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        HSTRING* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetFloatAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        FLOAT attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetFloatAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        FLOAT* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetColorAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CUI_CColor attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetColorAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CUI_CColor* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetFilledRegionDeterminationAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasFilledRegionDetermination attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetFilledRegionDeterminationAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasFilledRegionDetermination* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetDisplayAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetDisplayAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgDisplay* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetOverflowAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetOverflowAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgOverflow* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetCapStyleAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasCapStyle attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetCapStyleAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasCapStyle* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetLineJoinAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasLineJoin attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetLineJoinAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasLineJoin* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetVisibilityAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetVisibilityAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgVisibility* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetTransformAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetTransformAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetUnitsAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetUnitsAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgUnits* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetEdgeBehaviorAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetEdgeBehaviorAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetRectangleAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CFoundation_CRect attributeValue);
    HRESULT (STDMETHODCALLTYPE* GetRectangleAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        struct __x_ABI_CWindows_CFoundation_CRect* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetLengthAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        FLOAT value,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits units);
    HRESULT (STDMETHODCALLTYPE* GetLengthAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits* units,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* SetAspectRatioAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment alignment,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling meetOrSlice);
    HRESULT (STDMETHODCALLTYPE* GetAspectRatioAttribute)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement* This,
        HSTRING attributeName,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectScaling* meetOrSlice,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgAspectAlignment* alignment);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElementVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgNamedElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_PaintType)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType value);
    HRESULT (STDMETHODCALLTYPE* get_PaintType)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPaintType* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttributeVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPaintAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePathGeometry)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry** outputGeometry);
    HRESULT (STDMETHODCALLTYPE* CreatePathGeometryWithFill)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CCanvasFilledRegionDetermination fill,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CGeometry_CICanvasGeometry** outputGeometry);
    HRESULT (STDMETHODCALLTYPE* get_Commands)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        UINT32* valueElementsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetCommands)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 startIndex,
        INT32 elementCount,
        UINT32* outputValueElementsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand** outputValueElements);
    HRESULT (STDMETHODCALLTYPE* get_SegmentData)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetSegmentData)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 startIndex,
        INT32 elementCount,
        UINT32* outputValueElementsLength,
        FLOAT** outputValueElements);
    HRESULT (STDMETHODCALLTYPE* RemoveCommandsAtEnd)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 commandsCount);
    HRESULT (STDMETHODCALLTYPE* RemoveSegmentDataAtEnd)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 commandsCount);
    HRESULT (STDMETHODCALLTYPE* SetCommands)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 startIndex,
        UINT32 commandsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgPathCommand* commands);
    HRESULT (STDMETHODCALLTYPE* SetSegmentData)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute* This,
        INT32 startIndex,
        UINT32 segmentDataLength,
        FLOAT* segmentData);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttributeVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPathAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
        UINT32* valueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetPoints)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
        INT32 startIndex,
        INT32 elementCount,
        UINT32* outputValueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2** outputValueElements);
    HRESULT (STDMETHODCALLTYPE* RemovePointsAtEnd)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
        INT32 pointCount);
    HRESULT (STDMETHODCALLTYPE* SetPoints)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute* This,
        INT32 startIndex,
        UINT32 pointsLength,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* points);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttributeVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgPointsAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDashes)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetDashesWithUnits)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        INT32 startIndex,
        INT32 elementCount,
        UINT32* outputUnitsElementsLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits** outputUnitsElements,
        UINT32* outputValueElementsLength,
        FLOAT** outputValueElements);
    HRESULT (STDMETHODCALLTYPE* RemoveDashesAtEnd)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        INT32 dashCount);
    HRESULT (STDMETHODCALLTYPE* SetDashes)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        INT32 startIndex,
        UINT32 dashesLength,
        FLOAT* dashes);
    HRESULT (STDMETHODCALLTYPE* SetDashesWithUnit)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        INT32 startIndex,
        UINT32 dashesLength,
        FLOAT* dashes,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits units);
    HRESULT (STDMETHODCALLTYPE* SetDashesWithUnits)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute* This,
        INT32 startIndex,
        UINT32 dashValuesLength,
        FLOAT* dashValues,
        UINT32 unitValuesLength,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CCanvasSvgLengthUnits* unitValues);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttributeVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgStrokeDashArrayAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElementVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CSvg_CICanvasSvgTextElement_INTERFACE_DEFINED__) */
    
