// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2 __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2 __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2;

#endif // ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItem __x_ABI_CWindows_CStorage_CIStorageItem;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        UINT32 index,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs* This,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* sender,
        __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions;

typedef enum __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility;

enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions
    {
        __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions_None = 0,
    __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions_DisallowUserInput = 0x1,
    __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions_FastLocationsOnly = 0x2,
    __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions_UseReadOnlyCachedCopy = 0x4,
    __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions_SuppressAccessTimeUpdate = 0x8,
};

enum __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility
    {
        __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility_AppOnly = 0,
    __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility_AppAndSystem = 1,
};

struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry
    {
        HSTRING Token;
    HSTRING Metadata;
};

#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemovedEntry)(__x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This,
        struct __x_ABI_CWindows_CStorage_CAccessCache_CAccessListEntry* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FutureAccessList)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList** value);
    HRESULT (STDMETHODCALLTYPE* get_MostRecentlyUsedList)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFutureAccessListForUser)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList** value);
    HRESULT (STDMETHODCALLTYPE* GetMostRecentlyUsedListForUser)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddOverloadDefaultMetadata)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        HSTRING* token);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        HSTRING metadata,
        HSTRING* token);
    HRESULT (STDMETHODCALLTYPE* AddOrReplaceOverloadDefaultMetadata)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        __x_ABI_CWindows_CStorage_CIStorageItem* file);
    HRESULT (STDMETHODCALLTYPE* AddOrReplace)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        HSTRING metadata);
    HRESULT (STDMETHODCALLTYPE* GetItemAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);
    HRESULT (STDMETHODCALLTYPE* GetFileAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* GetItemWithOptionsAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);
    HRESULT (STDMETHODCALLTYPE* GetFileWithOptionsAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* GetFolderWithOptionsAsync)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token);
    HRESULT (STDMETHODCALLTYPE* ContainsItem)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        HSTRING token,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This);
    HRESULT (STDMETHODCALLTYPE* CheckAccess)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Entries)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CAccessCache__CAccessListEntry** entries);
    HRESULT (STDMETHODCALLTYPE* get_MaximumItemsAllowed)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ItemRemoved)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CAccessCache__CStorageItemMostRecentlyUsedList___x_ABI_CWindows__CStorage__CAccessCache__CItemRemovedEventArgs* handler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_ItemRemoved)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This,
        EventRegistrationToken eventCookie);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddWithMetadataAndVisibility)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        HSTRING metadata,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility visibility,
        HSTRING* token);
    HRESULT (STDMETHODCALLTYPE* AddOrReplaceWithMetadataAndVisibility)(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This,
        HSTRING token,
        __x_ABI_CWindows_CStorage_CIStorageItem* file,
        HSTRING metadata,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility visibility);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl;

    interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2_INTERFACE_DEFINED__) */
    
