// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.Geolocation.h"
#include "Windows.Globalization.h"
#include "Windows.Services.Maps.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2 __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        UINT32 index,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle __x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle;

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint;

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CGlobalization_CDayOfWeek __x_ABI_CWindows_CGlobalization_CDayOfWeek;

#ifndef ____x_ABI_CWindows_CServices_CMaps_CIMapAddress_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CIMapAddress_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CIMapAddress __x_ABI_CWindows_CServices_CMaps_CIMapAddress;

#endif // ____x_ABI_CWindows_CServices_CMaps_CIMapAddress_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CServices_CMaps_CIPlaceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CIPlaceInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CServices_CMaps_CIPlaceInfo __x_ABI_CWindows_CServices_CMaps_CIPlaceInfo;

#endif // ____x_ABI_CWindows_CServices_CMaps_CIPlaceInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus;

enum __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus
    {
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_Success = 0,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_UnknownError = 1,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_InvalidCredentials = 2,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_InvalidCategory = 3,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_InvalidSearchTerm = 4,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_InvalidSearchArea = 5,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_NetworkFailure = 6,
    __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus_NotSupported = 7,
};

#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BankAndCreditUnions)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_EatDrink)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Hospitals)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HotelsAndMotels)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_All)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Parking)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SeeDo)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Shop)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStaticsVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalCategoriesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        __x_ABI_CWindows_CServices_CMaps_CIMapAddress** value);
    HRESULT (STDMETHODCALLTYPE* get_Identifier)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint** value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneNumber)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DataAttribution)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Category)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RatingInfo)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_HoursOfOperation)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationHoursOfOperationItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2Vtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LocalLocations)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocation** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult* This,
        enum __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CLocalLocationFinderStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResultVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindLocalLocationsAsync)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics* This,
        HSTRING searchTerm,
        __x_ABI_CWindows_CDevices_CGeolocation_CIGeocircle* searchArea,
        HSTRING localCategory,
        UINT32 maxResults,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CServices__CMaps__CLocalSearch__CLocalLocationFinderResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStaticsVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationFinderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Day)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
        enum __x_ABI_CWindows_CGlobalization_CDayOfWeek* value);
    HRESULT (STDMETHODCALLTYPE* get_Start)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Span)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItemVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationHoursOfOperationItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AggregateRating)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_RatingCount)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderIdentifier)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfoVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocationRatingInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromLocalLocation)(__x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics* This,
        __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation* location,
        __x_ABI_CWindows_CServices_CMaps_CIPlaceInfo** resultValue);

        END_INTERFACE
    } __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStaticsVtbl;

    interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CIPlaceInfoHelperStatics_INTERFACE_DEFINED__) */
    
