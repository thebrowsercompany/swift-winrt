// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Background.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Media.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2 __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3 __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2 __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3 __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* sender,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* sender,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType;

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions_IgnoreImageCache = 0x8,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType_Physical = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType_Logical = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus_Success = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus_NetworkError = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus_InvalidFormat = 2,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus_Other = 3,
};

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CreateOptions)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions* value);
    HRESULT (STDMETHODCALLTYPE* put_CreateOptions)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CBitmapCreateOptions value);
    HRESULT (STDMETHODCALLTYPE* get_UriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_UriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_DecodePixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodePixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DecodePixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodePixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* add_DownloadProgress)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DownloadProgress)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImageOpened)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageOpened)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImageFailed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageFailed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DecodePixelType)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodePixelType)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CDecodePixelType value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAnimatedBitmap)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaying)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* Play)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithUriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uriSource,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CreateOptionsProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_UriSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DecodePixelWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DecodePixelHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DecodePixelTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAnimatedBitmapProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlayingProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlayProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImageStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* SetSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* streamSource);
    HRESULT (STDMETHODCALLTYPE* SetSourceAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* streamSource,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PixelHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIDownloadProgressEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* RenderAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* RenderToSizeAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32 scaledWidth,
        INT32 scaledHeight,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* GetPixelsAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PixelHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIRenderTargetBitmapStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetBitmapAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISoftwareBitmapSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDimensions)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
        INT32 pixelWidth,
        INT32 pixelHeight,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDimensionsAndOpacity)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory* This,
        INT32 pixelWidth,
        INT32 pixelHeight,
        boolean isOpaque,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISurfaceImageSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_UriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_RasterizePixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RasterizePixelWidth)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RasterizePixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RasterizePixelHeight)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceOpenedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_OpenFailed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSource___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceFailedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OpenFailed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetSourceAsync)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* streamSource,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CMedia__CImaging__CSvgImageSourceLoadStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithUriSource)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uriSource,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CSvgImageSourceLoadStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceOpenedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RasterizePixelWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RasterizePixelHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CISvgImageSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDimensions)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
        INT32 pixelWidth,
        INT32 pixelHeight,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDimensionsAndOpacity)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory* This,
        INT32 pixelWidth,
        INT32 pixelHeight,
        boolean isOpaque,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIVirtualSurfaceImageSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelBuffer)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* Invalidate)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDimensions)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory* This,
        INT32 pixelWidth,
        INT32 pixelHeight,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmap** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIWriteableBitmapFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTask** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnRun)(__x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* taskInstance);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIXamlRenderingBackgroundTaskOverrides_INTERFACE_DEFINED__) */
    
