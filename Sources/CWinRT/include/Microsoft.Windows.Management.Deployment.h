// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.Windows.ApplicationModel.DynamicDependency.h"
#include "Windows.ApplicationModel.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgress __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgress;

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress* asyncInfo,
        struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** first,
        __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING;

    typedef struct __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_C__FIMapView_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDispositionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolumeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions_FWD_DEFINED__

typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyContextId __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyContextId;

typedef enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyProcessorArchitectures __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyProcessorArchitectures;

typedef struct __x_ABI_CWindows_CApplicationModel_CPackageVersion __x_ABI_CWindows_CApplicationModel_CPackageVersion;

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus;

typedef enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus;

typedef enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption;

enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus
    {
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus_Queued = 0,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus_InProgress = 1,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus_CompletedSuccess = 2,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus_CompletedFailure = 3,
};

enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus
    {
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus_InProgress = 0,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus_CompletedSuccess = 1,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus_CompletedFailure = 2,
};

enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption
    {
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption_Default = 0,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption_InstallFull = 1,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption_InstallStub = 2,
    __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption_UsePreference = 3,
};

struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgress
    {
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentProgressStatus Status;
    DOUBLE Progress;
};

#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* get_DependencyPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_RelatedPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_StubPackageOption)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption* value);
    HRESULT (STDMETHODCALLTYPE* put_StubPackageOption)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption value);
    HRESULT (STDMETHODCALLTYPE* get_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceTargetAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceTargetAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RequiredContentGroupOnly)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RequiredContentGroupOnly)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RetainFilesOnFailure)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RetainFilesOnFailure)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DeferRegistrationWhenPackagesAreInUse)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DeferRegistrationWhenPackagesAreInUse)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpectedDigestsSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpectedDigests)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLimitToExistingPackagesSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LimitToExistingPackages)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitToExistingPackages)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddPackageOptions)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsPackageReady)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsPackageReadyByUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsPackageSetReady)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* EnsurePackageReadyAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* EnsurePackageReadyByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* EnsurePackageSetReadyAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIEnsureReadyOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* AddPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* AddPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* AddPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIAddPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* StagePackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* StagePackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* StagePackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RegisterPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RegisterPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RegisterPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemovePackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemovePackageByFullNameAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING packageFullName,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemovePackageByFamilyNameAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING packageFamilyName,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemovePackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemovePackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ResetPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ResetPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ResetPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RepairPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RepairPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RepairPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ProvisionPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ProvisionPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* ProvisionPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* DeprovisionPackageAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING package,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* DeprovisionPackageByUriAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* packageUri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* DeprovisionPackageSetAsync)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentResult___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageDeploymentProgress** operation);
    HRESULT (STDMETHODCALLTYPE* IsPackageRegistrationPending)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING packageFamilyName,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsPackageRegistrationPendingForUser)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager* This,
        HSTRING userSecurityId,
        HSTRING packageFamilyName,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManager** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CPackageDeploymentStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Error)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorText)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult* This,
        GUID* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResultVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageDeploymentResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddPackageSet)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* AddPackageSetWithOptions)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* packageSet,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CICreatePackageDependencyOptions* createOptions,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CIAddPackageDependencyOptions* addOptions,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition** result);
    HRESULT (STDMETHODCALLTYPE* RemovePackageSet)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* packageSetRuntimeDisposition);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManager** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageRuntimeManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PackageUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_PackageUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItem** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSet_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFamilyName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PackageFamilyName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MinVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        struct __x_ABI_CWindows_CApplicationModel_CPackageVersion* value);
    HRESULT (STDMETHODCALLTYPE* put_MinVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        struct __x_ABI_CWindows_CApplicationModel_CPackageVersion value);
    HRESULT (STDMETHODCALLTYPE* get_ProcessorArchitectureFilter)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyProcessorArchitectures* value);
    HRESULT (STDMETHODCALLTYPE* put_ProcessorArchitectureFilter)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyProcessorArchitectures value);
    HRESULT (STDMETHODCALLTYPE* get_PackageUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_PackageUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PackageSetItemId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFullName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageDependencyId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageDependencyContextId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition* This,
        struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CDynamicDependency_CPackageDependencyContextId* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDispositionVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDispositionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetItemRuntimeDisposition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDispositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PackageSetId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PackageSetId)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PackageSetItemRuntimeDispositions)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageSetItemRuntimeDisposition** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDispositionVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDispositionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageSetRuntimeDisposition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSystemVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MountPoint)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageStorePath)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsHardLinks)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullTrustPackageSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAppxInstallSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* IsRepairNeeded)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Repair)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindPackageVolumes)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWindows__CManagement__CDeployment__CPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* FindPackageVolumeByPath)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
        HSTRING packageStorePath,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** result);
    HRESULT (STDMETHODCALLTYPE* FindPackageVolumeByName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics* This,
        HSTRING name,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolumeStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOptionalPackageFamilyNamesSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_IsProjectionOrderPackageFamilyNamesSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionOrderPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIProvisionPackageOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppDataVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** value);
    HRESULT (STDMETHODCALLTYPE* put_AppDataVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* get_DependencyPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_DependencyPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceTargetAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceTargetAppShutdown)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DeferRegistrationWhenPackagesAreInUse)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DeferRegistrationWhenPackagesAreInUse)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpectedDigestsSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpectedDigests)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions* This,
        __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRegisterPackageOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FailIfNotFound)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_FailIfNotFound)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PreserveApplicationData)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreserveApplicationData)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PreserveRoamableApplicationData)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreserveRoamableApplicationData)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RemoveForAllUsers)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoveForAllUsers)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIRemovePackageOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetVolume)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIPackageVolume* value);
    HRESULT (STDMETHODCALLTYPE* get_DependencyPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageFamilyNames)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_OptionalPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_RelatedPackageUris)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ExternalLocationUri)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_StubPackageOption)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption* value);
    HRESULT (STDMETHODCALLTYPE* put_StubPackageOption)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        enum __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CStubPackageOption value);
    HRESULT (STDMETHODCALLTYPE* get_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DeveloperMode)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ForceUpdateFromAnyVersion)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_InstallAllResources)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RequiredContentGroupOnly)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RequiredContentGroupOnly)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StageInPlace)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowUnsigned)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpectedDigestsSupported)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpectedDigests)(__x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions* This,
        __x_ABI_C__FIMap_2___x_ABI_CWindows__CFoundation__CUri_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CManagement_CDeployment_CIStagePackageOptions_INTERFACE_DEFINED__) */
    
