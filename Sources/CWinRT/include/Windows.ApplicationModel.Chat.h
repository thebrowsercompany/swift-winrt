// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Media.MediaProperties.h"
#include "Windows.Security.Credentials.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2 __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2 __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_int __x_ABI_C__FIAsyncOperationCompletedHandler_1_int;

#if !defined(____x_ABI_C__FIAsyncOperation_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_int __x_ABI_C__FIAsyncOperation_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_int;

    typedef struct __x_ABI_C__FIAsyncOperation_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_int* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_int* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_int* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_int** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_intVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_int __x_ABI_C__FIAsyncOperationCompletedHandler_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_int;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_int* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_int* This,
        __x_ABI_C__FIAsyncOperation_1_int* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_intVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_int_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilitiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManagerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransportVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus;

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        HSTRING key,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* sender,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* sender,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* sender,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* sender,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* sender,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode;

typedef enum __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind;

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind_Participants = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind_ContactId = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind_ConversationId = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind_Custom = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind_Message = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind_Conversation = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType_MessageCreated = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType_MessageModified = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType_MessageDeleted = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType_ChangeTrackingLost = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_Standard = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_FileTransferRequest = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_TransportCustom = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_JoinedConversation = 3,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_LeftConversation = 4,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_OtherParticipantJoinedConversation = 5,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind_OtherParticipantLeftConversation = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind_Unspecified = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind_Sms = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind_Mms = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind_Rcs = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Draft = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Sending = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Sent = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_SendRetryNeeded = 3,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_SendFailed = 4,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Received = 5,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_ReceiveDownloadNeeded = 6,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_ReceiveDownloadFailed = 7,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_ReceiveDownloading = 8,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Deleted = 9,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Declined = 10,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Cancelled = 11,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_Recalled = 12,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus_ReceiveRetryNeeded = 13,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind_Text = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind_Untriaged = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind_Blocked = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind_Custom = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_Valid = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_NoRecipients = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_InvalidData = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_MessageTooLarge = 3,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_TooManyRecipients = 4,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_TransportInactive = 5,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_TransportNotFound = 6,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_TooManyAttachments = 7,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_InvalidRecipients = 8,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_InvalidBody = 9,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_InvalidOther = 10,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_ValidWithLargeMessage = 11,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_VoiceRoamingRestriction = 12,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus_DataRoamingRestriction = 13,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan_LastMonth = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan_LastYear = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan_AnyTime = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_NotificationsMissed = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_StoreModified = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_MessageCreated = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_MessageModified = 3,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_MessageDeleted = 4,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_ConversationModified = 5,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_ConversationDeleted = 6,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind_ConversationTransportDeleted = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory_None = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory_Http = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory_Network = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory_MmsServer = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_None = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_Unknown = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_InvalidRecipientAddress = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_NetworkConnectivity = 3,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_ServiceDenied = 4,
    __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode_Timeout = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind
    {
        __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind_Chat = 0,
    __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind_GroupChat = 1,
    __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind_FileTransfer = 2,
    __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind_Capability = 3,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOnline)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_IsChatCapable)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_IsFileTransferCapable)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_IsGeoLocationPushCapable)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_IsIntegratedMessagingCapable)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCachedCapabilitiesAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
        HSTRING address,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities** result);
    HRESULT (STDMETHODCALLTYPE* GetCapabilitiesFromNetworkAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics* This,
        HSTRING address,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCachedCapabilitiesForTransportAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
        HSTRING address,
        HSTRING transportId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities** operation);
    HRESULT (STDMETHODCALLTYPE* GetCapabilitiesFromNetworkForTransportAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2* This,
        HSTRING address,
        HSTRING transportId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatCapabilities** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatCapabilitiesManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasUnreadMessages)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_Subject)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsConversationMuted)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsConversationMuted)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MostRecentMessageId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Participants)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_C__FIVector_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_ThreadingInfo)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo** result);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* MarkAllMessagesAsReadAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkMessagesAsReadAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* NotifyLocalParticipantComposing)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING transportId,
        HSTRING participantAddress,
        boolean isComposing);
    HRESULT (STDMETHODCALLTYPE* NotifyRemoteParticipantComposing)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        HSTRING transportId,
        HSTRING participantAddress,
        boolean isComposing);
    HRESULT (STDMETHODCALLTYPE* add_RemoteParticipantComposingChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation___x_ABI_CWindows__CApplicationModel__CChat__CRemoteParticipantComposingChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemoteParticipantComposingChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanModifyParticipants)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_CanModifyParticipants)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* ReadBatchWithCountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader* This,
        INT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContactId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_ContactId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Custom)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_Custom)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ConversationId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_ConversationId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Participants)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        __x_ABI_C__FIVector_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind* result);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatConversationThreadingKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatItem* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatItemKind* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatItemVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatItem;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Attachments)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageAttachment** value);
    HRESULT (STDMETHODCALLTYPE* get_Body)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Body)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsForwardingDisabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsIncoming)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRead)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalTimestamp)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkTimestamp)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Recipients)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_RecipientSendStatuses)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStatus** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportFriendlyName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EstimatedDownloadSize)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        UINT64* result);
    HRESULT (STDMETHODCALLTYPE* put_EstimatedDownloadSize)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsAutoReply)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsAutoReply)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_IsForwardingDisabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsReplyDisabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsIncoming)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_IsRead)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeen)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsSeen)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSimMessage)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_LocalTimestamp)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_MessageKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind* result);
    HRESULT (STDMETHODCALLTYPE* put_MessageKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageKind value);
    HRESULT (STDMETHODCALLTYPE* get_MessageOperatorKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind* result);
    HRESULT (STDMETHODCALLTYPE* put_MessageOperatorKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageOperatorKind value);
    HRESULT (STDMETHODCALLTYPE* put_NetworkTimestamp)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_IsReceivedDuringQuietHours)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsReceivedDuringQuietHours)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus value);
    HRESULT (STDMETHODCALLTYPE* put_Subject)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldSuppressNotification)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_ShouldSuppressNotification)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ThreadingInfo)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo** result);
    HRESULT (STDMETHODCALLTYPE* put_ThreadingInfo)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_RecipientsDeliveryInfos)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CChat__CChatRecipientDeliveryInfo** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SyncId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_SyncId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataStreamReference)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_DataStreamReference)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_GroupId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MimeType)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MimeType)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* put_Thumbnail)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferProgress)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* put_TransferProgress)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OriginalFileName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_OriginalFileName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateChatMessageAttachment)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory* This,
        HSTRING mimeType,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* dataStreamReference,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachment** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageAttachmentFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStaticVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* MarkMessageAsBlockedAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic* This,
        HSTRING localChatMessageId,
        boolean blocked,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStaticVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStaticVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageBlockingStatic_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageChangeType* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AcceptChanges)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesThrough)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChange* lastChangeToAcknowledge);
    HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChange** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTrackerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* GetChangeReader)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeReader** value);
    HRESULT (STDMETHODCALLTYPE* Reset)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTrackerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTrackerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2StaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RegisterTransportAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetTransportAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics* This,
        HSTRING transportId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2StaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2StaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManager2Statics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStaticVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetTransportsAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageTransport** value);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore** value);
    HRESULT (STDMETHODCALLTYPE* ShowComposeSmsMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* ShowSmsSettings)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStaticVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStaticVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatic_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestSyncManagerAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatSyncManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageManagerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChatMessage)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShouldDisplayToast)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_ShouldUpdateDetailText)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_ShouldUpdateBadge)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_ShouldUpdateActionCenter)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageNotificationTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchWithCountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2* This,
        INT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageChangeTracker** value);
    HRESULT (STDMETHODCALLTYPE* DeleteMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        HSTRING localMessageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* DownloadMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        HSTRING localChatMessageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* GetMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        HSTRING localChatMessageId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** value);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader1)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader** value);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader2)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan recentTimeLimit,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageReader** value);
    HRESULT (STDMETHODCALLTYPE* MarkMessageReadAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        HSTRING localChatMessageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* RetrySendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        HSTRING localChatMessageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* SendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* chatMessage,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* ValidateMessage)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* chatMessage,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult** value);
    HRESULT (STDMETHODCALLTYPE* add_MessageChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageChangedEventArgs* value,
        EventRegistrationToken* returnValue);
    HRESULT (STDMETHODCALLTYPE* remove_MessageChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore* This,
        EventRegistrationToken value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ForwardMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING localChatMessageId,
        __x_ABI_C__FIIterable_1_HSTRING* addresses,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING conversationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationForTransportsAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING conversationId,
        __x_ABI_C__FIIterable_1_HSTRING* transportIds,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationFromThreadingInfoAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationThreadingInfo* threadingInfo,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReader)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationForTransportsReader)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_C__FIIterable_1_HSTRING* transportIds,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageByRemoteIdAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING transportId,
        HSTRING remoteId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetUnseenCountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_C__FIAsyncOperation_1_int** result);
    HRESULT (STDMETHODCALLTYPE* GetUnseenCountForTransportsReaderAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_C__FIIterable_1_HSTRING* transportIds,
        __x_ABI_C__FIAsyncOperation_1_int** result);
    HRESULT (STDMETHODCALLTYPE* MarkAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkAsSeenForTransportsAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_C__FIIterable_1_HSTRING* transportIds,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetSearchReader)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* value,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader** result);
    HRESULT (STDMETHODCALLTYPE* SaveMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessage* chatMessage,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* TryCancelDownloadMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING localChatMessageId,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryCancelSendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        HSTRING localChatMessageId,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStore___x_ABI_CWindows__CApplicationModel__CChat__CChatMessageStoreChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetMessageBySyncIdAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3* This,
        HSTRING syncId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CChatMessage** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStore3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatStoreChangedEventKind* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageStoreChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAppSetAsNotificationProvider)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportFriendlyName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* RequestSetAsNotificationProviderAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Configuration)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration** result);
    HRESULT (STDMETHODCALLTYPE* get_TransportKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageTransportKind* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransport2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxAttachmentCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxMessageSizeInKilobytes)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxRecipientCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_SupportedVideoFormat)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedProperties)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfigurationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageTransportConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxPartCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_PartCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_RemainingCharacterCountInPart)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageValidationStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatMessageValidationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SearchString)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_SearchString)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransportAddress)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* put_TransportAddress)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DeliveryTime)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** result);
    HRESULT (STDMETHODCALLTYPE* put_DeliveryTime)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ReadTime)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** result);
    HRESULT (STDMETHODCALLTYPE* put_ReadTime)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportErrorCodeCategory)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportErrorCodeCategory* result);
    HRESULT (STDMETHODCALLTYPE* get_TransportInterpretedErrorCode)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatTransportInterpretedErrorCode* result);
    HRESULT (STDMETHODCALLTYPE* get_TransportErrorCode)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_IsErrorPermanent)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatMessageStatus* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatRecipientDeliveryInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem** result);
    HRESULT (STDMETHODCALLTYPE* ReadBatchWithCountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader* This,
        INT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CIChatItem** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSearchReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSyncEnabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* put_IsSyncEnabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RestoreHistorySpan)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan* result);
    HRESULT (STDMETHODCALLTYPE* put_RestoreHistorySpan)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CChatRestoreHistorySpan value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfigurationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Configuration)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration** result);
    HRESULT (STDMETHODCALLTYPE* AssociateAccountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount* webAccount,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* UnassociateAccountAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* IsAccountAssociated)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount* webAccount,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* StartSync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This);
    HRESULT (STDMETHODCALLTYPE* SetConfigurationAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncConfiguration* configuration,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIChatSyncManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_IsPinRequired)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Actions)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAction** result);
    HRESULT (STDMETHODCALLTYPE* SendResponseAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* action,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* SendResponseWithPinAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* action,
        HSTRING pin,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageActionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageActionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsMessageAvailable)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessage** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageAvailableTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_MessageAvailableChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageManager___x_ABI_CWindows__CApplicationModel__CChat__CRcsEndUserMessageAvailableEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MessageAvailableChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetEndUserMessageManager)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsEndUserMessageManager** result);
    HRESULT (STDMETHODCALLTYPE* GetTransportsAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** value);
    HRESULT (STDMETHODCALLTYPE* GetTransportAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
        HSTRING transportId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport** result);
    HRESULT (STDMETHODCALLTYPE* LeaveConversationAsync)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIChatConversation* conversation,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_TransportListChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TransportListChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ServiceKind)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsServiceKindSupportedChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExtendedProperties)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportFriendlyName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Configuration)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration** result);
    HRESULT (STDMETHODCALLTYPE* IsStoreAndForwardEnabled)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind serviceKind,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsServiceKindSupported)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        enum __x_ABI_CWindows_CApplicationModel_CChat_CRcsServiceKind serviceKind,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* add_ServiceKindSupportedChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CChat__CRcsTransport___x_ABI_CWindows__CApplicationModel__CChat__CRcsServiceKindSupportedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ServiceKindSupportedChanged)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxAttachmentCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxMessageSizeInKilobytes)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxGroupMessageSizeInKilobytes)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxRecipientCount)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_MaxFileSizeInKilobytes)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_WarningFileSizeInKilobytes)(__x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfigurationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRcsTransportConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransportId)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_ParticipantAddress)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_IsComposing)(__x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CChat_CIRemoteParticipantComposingChangedEventArgs_INTERFACE_DEFINED__) */
    
