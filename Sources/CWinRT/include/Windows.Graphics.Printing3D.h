// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2 __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2 __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2 __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2 __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2 __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource;

#endif // ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2_boolean_double** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double* asyncInfo,
        DOUBLE progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_doubleVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2_boolean_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_double __x_ABI_C__FIIterator_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_double;

    typedef struct __x_ABI_C__FIIterator_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_double* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_doubleVtbl;

    interface __x_ABI_C__FIIterator_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_double __x_ABI_C__FIIterable_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_double;

    typedef struct __x_ABI_C__FIIterable_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_double* This,
        __x_ABI_C__FIIterator_1_double** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_doubleVtbl;

    interface __x_ABI_C__FIIterable_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_UINT32 __x_ABI_C__FIIterator_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_UINT32;

    typedef struct __x_ABI_C__FIIterator_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_UINT32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_UINT32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_UINT32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_UINT32* This,
        UINT32 itemsLength,
        UINT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_UINT32Vtbl;

    interface __x_ABI_C__FIIterator_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_UINT32 __x_ABI_C__FIIterable_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_UINT32;

    typedef struct __x_ABI_C__FIIterable_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_UINT32* This,
        __x_ABI_C__FIIterator_1_UINT32** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_UINT32Vtbl;

    interface __x_ABI_C__FIIterable_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_double __x_ABI_C__FIVectorView_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_double;

    typedef struct __x_ABI_C__FIVectorView_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_doubleVtbl;

    interface __x_ABI_C__FIVectorView_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_UINT32 __x_ABI_C__FIVectorView_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_UINT32;

    typedef struct __x_ABI_C__FIVectorView_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 index,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        UINT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_UINT32Vtbl;

    interface __x_ABI_C__FIVectorView_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_double __x_ABI_C__FIVector_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_double;

    typedef struct __x_ABI_C__FIVector_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_double* This,
        __x_ABI_C__FIVectorView_1_double** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_double* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_doubleVtbl;

    interface __x_ABI_C__FIVector_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_UINT32 __x_ABI_C__FIVector_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_UINT32;

    typedef struct __x_ABI_C__FIVector_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 index,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_UINT32* This,
        __x_ABI_C__FIVectorView_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 index,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 index,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        UINT32* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_UINT32* This,
        UINT32 itemsLength,
        UINT32* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_UINT32Vtbl;

    interface __x_ABI_C__FIVector_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrixVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTextureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* sender,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* sender,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* sender,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression;

typedef enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior;

typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription;

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion_Abandoned = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion_Canceled = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion_Failed = 2,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion_Slicing = 3,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion_Submitted = 4,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_Unknown = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_ModelExceedsPrintBed = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_UploadFailed = 2,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_InvalidMaterialSelection = 3,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_InvalidModel = 4,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_ModelNotManifold = 5,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail_InvalidPrintTicket = 6,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_Unknown = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_R32G32B32A32Float = 2,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_R32G32B32A32UInt = 3,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_R32G32B32Float = 6,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_R32G32B32UInt = 7,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_Printing3DDouble = 500,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat_Printing3DUInt = 501,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode_FindFirstError = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode_FindAllErrors = 1,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Meter = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Micron = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Millimeter = 2,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Centimeter = 3,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Inch = 4,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit_Foot = 5,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType_Model = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType_Support = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType_Others = 2,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression_Low = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression_Medium = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression_High = 2,
};

enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior
    {
        __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior_None = 0,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior_Wrap = 1,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior_Mirror = 2,
    __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior_Clamp = 3,
};

struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription
    {
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferFormat Format;
    UINT32 Stride;
};

#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* args);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandlerVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler;
    #endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_TaskRequested)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DManager___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskRequestedEventArgs* eventHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TaskRequested)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManager** result);
    HRESULT (STDMETHODCALLTYPE* ShowPrintUIAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage** value);
    HRESULT (STDMETHODCALLTYPE* add_Submitting)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask_IInspectable* eventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_Submitting)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskCompletedEventArgs* eventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_SourceChanged)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTask___x_ABI_CWindows__CGraphics__CPrinting3D__CPrint3DTaskSourceChangedEventArgs* eventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_SourceChanged)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask* This,
        EventRegistrationToken eventCookie);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Completion)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskCompletion* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedStatus)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrint3DTaskDetail* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTask)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest* This,
        HSTRING title,
        HSTRING printerId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedHandler* handler,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTask** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetSource)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* source);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrint3DTaskSourceRequestedArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);
    HRESULT (STDMETHODCALLTYPE* get_PrintTicket)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* put_PrintTicket)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* get_ModelPart)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* put_ModelPart)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** value);
    HRESULT (STDMETHODCALLTYPE* put_Thumbnail)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* get_Textures)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTextureResource** value);
    HRESULT (STDMETHODCALLTYPE* LoadModelFromPackageAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModel** operation);
    HRESULT (STDMETHODCALLTYPE* SaveModelToPackageAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* value,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Compression)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression* value);
    HRESULT (STDMETHODCALLTYPE* put_Compression)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DPackageCompression value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3D3MFPackage** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3D3MFPackageStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial** value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Bases)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterial** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupId)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory* This,
        UINT32 MaterialGroupId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Abs)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Pla)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterial2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Colors)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterial** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupId)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory* This,
        UINT32 MaterialGroupId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DColorMaterialGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mesh)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh** value);
    HRESULT (STDMETHODCALLTYPE* put_Mesh)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* value);
    HRESULT (STDMETHODCALLTYPE* get_Components)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponentWithMatrix** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** value);
    HRESULT (STDMETHODCALLTYPE* put_Thumbnail)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType* value);
    HRESULT (STDMETHODCALLTYPE* put_Type)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DObjectType value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PartNumber)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PartNumber)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrixVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Component)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** value);
    HRESULT (STDMETHODCALLTYPE* put_Component)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value);
    HRESULT (STDMETHODCALLTYPE* get_Matrix)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_Matrix)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrixVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrixVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponentWithMatrix_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Values)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial* This,
        __x_ABI_C__FIVector_1_double** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Composites)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterial** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupId)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup* This,
        __x_ABI_C__FIVector_1_UINT32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BaseMaterialGroup)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseMaterialGroup)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DBaseMaterialGroup* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory* This,
        UINT32 MaterialGroupId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DCompositeMaterialGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxReductionArea)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxReductionArea)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TargetTriangleCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetTriangleCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxEdgeLength)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxEdgeLength)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptionsVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BaseGroups)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DBaseMaterialGroup** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorGroups)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DColorMaterialGroup** value);
    HRESULT (STDMETHODCALLTYPE* get_Texture2CoordGroups)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterialGroup** value);
    HRESULT (STDMETHODCALLTYPE* get_CompositeGroups)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DCompositeMaterialGroup** value);
    HRESULT (STDMETHODCALLTYPE* get_MultiplePropertyGroups)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterialGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VertexCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_VertexCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IndexCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IndexCount)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_VertexPositionsDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription* value);
    HRESULT (STDMETHODCALLTYPE* put_VertexPositionsDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription value);
    HRESULT (STDMETHODCALLTYPE* get_VertexNormalsDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription* value);
    HRESULT (STDMETHODCALLTYPE* put_VertexNormalsDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription value);
    HRESULT (STDMETHODCALLTYPE* get_TriangleIndicesDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription* value);
    HRESULT (STDMETHODCALLTYPE* put_TriangleIndicesDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription value);
    HRESULT (STDMETHODCALLTYPE* get_TriangleMaterialIndicesDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription* value);
    HRESULT (STDMETHODCALLTYPE* put_TriangleMaterialIndicesDescription)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        struct __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DBufferDescription value);
    HRESULT (STDMETHODCALLTYPE* GetVertexPositions)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** buffer);
    HRESULT (STDMETHODCALLTYPE* CreateVertexPositions)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* GetVertexNormals)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** buffer);
    HRESULT (STDMETHODCALLTYPE* CreateVertexNormals)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* GetTriangleIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** buffer);
    HRESULT (STDMETHODCALLTYPE* CreateTriangleIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* GetTriangleMaterialIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** buffer);
    HRESULT (STDMETHODCALLTYPE* CreateTriangleMaterialIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BufferDescriptionSet)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_BufferSet)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* VerifyAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DMeshVerificationMode value,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMeshVerificationResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMesh_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsValid)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_NonmanifoldTriangles)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_ReversedNormalTriangles)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResultVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMeshVerificationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unit)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DModelUnit value);
    HRESULT (STDMETHODCALLTYPE* get_Textures)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DModelTexture** value);
    HRESULT (STDMETHODCALLTYPE* get_Meshes)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMesh** value);
    HRESULT (STDMETHODCALLTYPE* get_Components)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DComponent** value);
    HRESULT (STDMETHODCALLTYPE* get_Material)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial** value);
    HRESULT (STDMETHODCALLTYPE* put_Material)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMaterial* value);
    HRESULT (STDMETHODCALLTYPE* get_Build)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent** value);
    HRESULT (STDMETHODCALLTYPE* put_Build)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DComponent* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Version)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RequiredExtensions)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_Metadata)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* RepairAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* Clone)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryPartialRepairAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryPartialRepairWithTimeAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan maxWaitTime,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryReduceFacesAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double** operation);
    HRESULT (STDMETHODCALLTYPE* TryReduceFacesWithOptionsAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* printing3DFaceReductionOptions,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double** operation);
    HRESULT (STDMETHODCALLTYPE* TryReduceFacesWithOptionsAndTimeAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DFaceReductionOptions* printing3DFaceReductionOptions,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan maxWait,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double** operation);
    HRESULT (STDMETHODCALLTYPE* RepairWithProgressAsync)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2_boolean_double** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTextureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextureResource)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource** value);
    HRESULT (STDMETHODCALLTYPE* put_TextureResource)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* value);
    HRESULT (STDMETHODCALLTYPE* get_TileStyleU)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_TileStyleU)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_TileStyleV)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_TileStyleV)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* This,
        enum __x_ABI_CWindows_CGraphics_CPrinting3D_CPrinting3DTextureEdgeBehavior value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTextureVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTextureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaterialIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial* This,
        __x_ABI_C__FIVector_1_UINT32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MultipleProperties)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DMultiplePropertyMaterial** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupIndices)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
        __x_ABI_C__FIVector_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupId)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory* This,
        UINT32 MaterialGroupId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DMultiplePropertyMaterialGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Texture)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** value);
    HRESULT (STDMETHODCALLTYPE* put_Texture)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value);
    HRESULT (STDMETHODCALLTYPE* get_U)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_U)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_V)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_V)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Texture2Coords)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CPrinting3D__CPrinting3DTexture2CoordMaterial** value);
    HRESULT (STDMETHODCALLTYPE* get_MaterialGroupId)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Texture)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture** value);
    HRESULT (STDMETHODCALLTYPE* put_Texture)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2* This,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DModelTexture* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory* This,
        UINT32 MaterialGroupId,
        __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroup** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTexture2CoordMaterialGroupFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextureData)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** value);
    HRESULT (STDMETHODCALLTYPE* put_TextureData)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResourceVtbl;

    interface __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CPrinting3D_CIPrinting3DTextureResource_INTERFACE_DEFINED__) */
    
