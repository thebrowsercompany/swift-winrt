// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2 __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2 __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption;

#endif // ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1___z__zint64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___z__zint64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___z__zint64 __x_ABI_C__FIReference_1___z__zint64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___z__zint64;

    typedef struct __x_ABI_C__FIReference_1___z__zint64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___z__zint64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___z__zint64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___z__zint64* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___z__zint64* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___z__zint64* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___z__zint64* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___z__zint64* This,
        INT64* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___z__zint64Vtbl;

    interface __x_ABI_C__FIReference_1___z__zint64
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___z__zint64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___z__zint64_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT64 __x_ABI_C__FIReference_1_UINT64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT64;

    typedef struct __x_ABI_C__FIReference_1_UINT64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT64* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT64* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT64* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT64* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT64* This,
        UINT64* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT64Vtbl;

    interface __x_ABI_C__FIReference_1_UINT64
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT64_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode;

typedef enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm;

enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode
    {
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode_UseSymbol = 0,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode_UseCurrencyCode = 1,
};

enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm
    {
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_None = 0,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundDown = 1,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundUp = 2,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundTowardsZero = 3,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundAwayFromZero = 4,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfDown = 5,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfUp = 6,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfTowardsZero = 7,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfAwayFromZero = 8,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfToEven = 9,
    __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm_RoundHalfToOdd = 10,
};

#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Currency)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Currency)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CCurrencyFormatterMode value);
    HRESULT (STDMETHODCALLTYPE* ApplyRoundingForCurrency)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm roundingAlgorithm);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2Vtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCurrencyFormatterCode)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
        HSTRING currencyCode,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter** result);
    HRESULT (STDMETHODCALLTYPE* CreateCurrencyFormatterCodeContext)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory* This,
        HSTRING currencyCode,
        __x_ABI_C__FIIterable_1_HSTRING* languages,
        HSTRING geographicRegion,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CICurrencyFormatterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateDecimalFormatter)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory* This,
        __x_ABI_C__FIIterable_1_HSTRING* languages,
        HSTRING geographicRegion,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIDecimalFormatterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RoundingAlgorithm)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm* value);
    HRESULT (STDMETHODCALLTYPE* put_RoundingAlgorithm)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm value);
    HRESULT (STDMETHODCALLTYPE* get_Increment)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Increment)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounderVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIIncrementNumberRounder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FormatInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
        INT64 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FormatUInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
        UINT64 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FormatDouble)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter* This,
        DOUBLE value,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FormatInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
        INT64 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FormatUInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
        UINT64 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FormatDouble)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2* This,
        DOUBLE value,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2Vtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Languages)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_GeographicRegion)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IntegerDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IntegerDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_FractionDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_FractionDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsGrouped)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGrouped)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDecimalPointAlwaysDisplayed)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDecimalPointAlwaysDisplayed)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_NumeralSystem)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_NumeralSystem)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedGeographicRegion)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptionsVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatterOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ParseInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
        HSTRING text,
        __x_ABI_C__FIReference_1___z__zint64** result);
    HRESULT (STDMETHODCALLTYPE* ParseUInt)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
        HSTRING text,
        __x_ABI_C__FIReference_1_UINT64** result);
    HRESULT (STDMETHODCALLTYPE* ParseDouble)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser* This,
        HSTRING text,
        __x_ABI_C__FIReference_1_double** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParserVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberParser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RoundInt32)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        INT32 value,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* RoundUInt32)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        UINT32 value,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* RoundInt64)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        INT64 value,
        INT64* result);
    HRESULT (STDMETHODCALLTYPE* RoundUInt64)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        UINT64 value,
        UINT64* result);
    HRESULT (STDMETHODCALLTYPE* RoundSingle)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        FLOAT value,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* RoundDouble)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* This,
        DOUBLE value,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NumberRounder)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder** value);
    HRESULT (STDMETHODCALLTYPE* put_NumberRounder)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption* This,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounder* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOptionVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberRounderOption_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Languages)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NumeralSystem)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_NumeralSystem)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TranslateNumerals)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator* This,
        HSTRING value,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory* This,
        __x_ABI_C__FIIterable_1_HSTRING* languages,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslator** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumeralSystemTranslatorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePercentFormatter)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory* This,
        __x_ABI_C__FIIterable_1_HSTRING* languages,
        HSTRING geographicRegion,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPercentFormatterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePermilleFormatter)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory* This,
        __x_ABI_C__FIIterable_1_HSTRING* languages,
        HSTRING geographicRegion,
        __x_ABI_CWindows_CGlobalization_CNumberFormatting_CINumberFormatter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CIPermilleFormatterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsZeroSigned)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZeroSigned)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOptionVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignedZeroOption_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RoundingAlgorithm)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm* value);
    HRESULT (STDMETHODCALLTYPE* put_RoundingAlgorithm)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
        enum __x_ABI_CWindows_CGlobalization_CNumberFormatting_CRoundingAlgorithm value);
    HRESULT (STDMETHODCALLTYPE* get_SignificantDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SignificantDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounderVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsNumberRounder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SignificantDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SignificantDigits)(__x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOptionVtbl;

    interface __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CNumberFormatting_CISignificantDigitsOption_INTERFACE_DEFINED__) */
    
