// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.DataTransfer.DragDrop.Core.h"
#include "Windows.Security.Cryptography.Certificates.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9 __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9;

#endif // ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtensionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2EnvironmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CookieVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_IInspectable __x_ABI_C__FIIterator_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_IInspectable* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_IInspectable __x_ABI_C__FIIterable_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_IInspectable* This,
        __x_ABI_C__FIIterator_1_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistrationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* sender,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIMemoryBufferReference __x_ABI_CWindows_CFoundation_CIMemoryBufferReference;

#endif // ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate;

#endif // ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreCursor __x_ABI_CWindows_CUI_CCore_CICoreCursor;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreCursor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindow __x_ABI_CWindows_CUI_CCore_CICoreWindow;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus;

typedef enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext;

typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PhysicalKeyStatus __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PhysicalKeyStatus;

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode_UseRawPixels = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode_UseRasterizationScale = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind_Normal = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind_Failed = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_FileSystems = 0x1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_IndexedDb = 0x2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_LocalStorage = 0x4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_WebSql = 0x8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_CacheStorage = 0x10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_AllDomStorage = 0x20,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_Cookies = 0x40,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_AllSite = 0x80,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_DiskCache = 0x100,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_DownloadHistory = 0x200,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_GeneralAutofill = 0x400,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_PasswordAutosave = 0x800,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_BrowsingHistory = 0x1000,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_Settings = 0x2000,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_AllProfile = 0x4000,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds_ServiceWorkers = 0x8000,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat_Png = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat_Jpeg = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind_SmartCard = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind_Pin = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind_Other = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind_Command = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind_CheckBox = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind_Radio = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind_Separator = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind_Submenu = 4,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind_Page = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind_Image = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind_SelectedText = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind_Audio = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind_Video = 4,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind_None = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind_Lax = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind_Strict = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment_TopLeft = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment_TopRight = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment_BottomLeft = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment_BottomRight = 3,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_None = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileFailed = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileAccessDenied = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileNoSpace = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileNameTooLong = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileTooLarge = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileMalicious = 6,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileTransientError = 7,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileBlockedByPolicy = 8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileSecurityCheckFailed = 9,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileTooShort = 10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_FileHashMismatch = 11,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_NetworkFailed = 12,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_NetworkTimeout = 13,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_NetworkDisconnected = 14,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_NetworkServerDown = 15,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_NetworkInvalidRequest = 16,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerFailed = 17,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerNoRange = 18,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerBadContent = 19,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerUnauthorized = 20,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerCertificateProblem = 21,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerForbidden = 22,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerUnexpectedResponse = 23,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerContentLengthMismatch = 24,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_ServerCrossOriginRedirect = 25,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_UserCanceled = 26,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_UserShutdown = 27,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_UserPaused = 28,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason_DownloadProcessCrashed = 29,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState_InProgress = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState_Interrupted = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState_Completed = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat_Png = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat_Jpeg = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind_Unknown = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind_MainFrame = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind_Iframe = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind_Embed = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind_Object = 4,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind_Deny = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind_Allow = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind_DenyCors = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind_KeyDown = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind_KeyUp = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind_SystemKeyDown = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind_SystemKeyUp = 3,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel_Normal = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel_Low = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_HorizontalWheel = 526,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_LeftButtonDoubleClick = 515,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_LeftButtonDown = 513,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_LeftButtonUp = 514,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_Leave = 675,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_MiddleButtonDoubleClick = 521,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_MiddleButtonDown = 519,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_MiddleButtonUp = 520,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_Move = 512,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_RightButtonDoubleClick = 518,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_RightButtonDown = 516,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_RightButtonUp = 517,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_Wheel = 522,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_XButtonDoubleClick = 525,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_XButtonDown = 523,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_XButtonUp = 524,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_NonClientRightButtonDown = 164,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind_NonClientRightButtonUp = 165,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_None = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_LeftButton = 0x1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_RightButton = 0x2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_Shift = 0x4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_Control = 0x8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_MiddleButton = 0x10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_XButton1 = 0x20,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys_XButton2 = 0x40,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason_Programmatic = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason_Next = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason_Previous = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind_Reload = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind_BackOrForward = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind_NewDocument = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_None = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_Save = 0x1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_Print = 0x2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_SaveAs = 0x4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_ZoomIn = 0x8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_ZoomOut = 0x10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_Rotate = 0x20,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_FitPage = 0x40,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_PageLayout = 0x80,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_Bookmarks = 0x100,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_PageSelector = 0x200,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_Search = 0x400,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_FullScreen = 0x800,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems_MoreSettings = 0x1000,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_UnknownPermission = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_Microphone = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_Camera = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_Geolocation = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_Notifications = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_OtherSensors = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_ClipboardRead = 6,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_MultipleAutomaticDownloads = 7,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_FileReadWrite = 8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_Autoplay = 9,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_LocalFonts = 10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_MidiSystemExclusiveMessages = 11,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind_WindowManagement = 12,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState_Default = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState_Allow = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState_Deny = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Activate = 587,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Down = 582,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Enter = 585,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Leave = 586,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Up = 583,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind_Update = 581,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme_Auto = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme_Light = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme_Dark = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation_Default = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation_Collated = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation_Uncollated = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode_Default = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode_Color = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode_Grayscale = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind_Browser = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind_System = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex_Default = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex_OneSided = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex_TwoSidedLongEdge = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex_TwoSidedShortEdge = 3,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize_Default = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize_Custom = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation_Portrait = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation_Landscape = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus_Succeeded = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus_PrinterUnavailable = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintStatus_OtherError = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_BrowserProcessExited = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_RenderProcessExited = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_RenderProcessUnresponsive = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_FrameRenderProcessExited = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_UtilityProcessExited = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_SandboxHelperProcessExited = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_GpuProcessExited = 6,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_PpapiPluginProcessExited = 7,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_PpapiBrokerProcessExited = 8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind_UnknownProcessExited = 9,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_Unexpected = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_Unresponsive = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_Terminated = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_Crashed = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_LaunchFailed = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_OutOfMemory = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason_ProfileDeleted = 6,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_Browser = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_Renderer = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_Utility = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_SandboxHelper = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_Gpu = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_PpapiPlugin = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind_PpapiBroker = 6,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind_Alert = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind_Confirm = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind_Prompt = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind_Beforeunload = 3,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction_AlwaysAllow = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction_Cancel = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction_Default = 2,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess_ReadOnly = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess_ReadWrite = 1,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel_None = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel_Basic = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel_Balanced = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel_Strict = 3,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_Unknown = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_CertificateCommonNameIsIncorrect = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_CertificateExpired = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ClientCertificateContainsErrors = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_CertificateRevoked = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_CertificateIsInvalid = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ServerUnreachable = 6,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_Timeout = 7,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ErrorHttpInvalidServerResponse = 8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ConnectionAborted = 9,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ConnectionReset = 10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_Disconnected = 11,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_CannotConnect = 12,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_HostNameNotResolved = 13,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_OperationCanceled = 14,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_RedirectFailed = 15,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_UnexpectedError = 16,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ValidAuthenticationCredentialsRequired = 17,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus_ValidProxyAuthenticationRequired = 18,
};

enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext
    {
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_All = 0,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Document = 1,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Stylesheet = 2,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Image = 3,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Media = 4,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Font = 5,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Script = 6,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_XmlHttpRequest = 7,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Fetch = 8,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_TextTrack = 9,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_EventSource = 10,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Websocket = 11,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Manifest = 12,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_SignedExchange = 13,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Ping = 14,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_CspViolationReport = 15,
    __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext_Other = 16,
};

struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PhysicalKeyStatus
    {
        UINT32 RepeatCount;
    UINT32 ScanCode;
    INT32 IsExtendedKey;
    INT32 IsMenuKeyDown;
    INT32 WasKeyDown;
    INT32 IsKeyReleased;
};

#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ToCertificate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual* This,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Certificate__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ToCertificate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual* This,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificate__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ClearBrowsingDataAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds dataKinds,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        struct __x_ABI_CWindows_CFoundation_CDateTime endTime,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ClearBrowsingDataAsync2)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetNonDefaultPermissionSettingsAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionSetting** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2Profile__Manual2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Settings)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings** value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BrowserProcessId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoBack)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForward)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentTitle)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContainsFullScreenElement)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_NavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLoading)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLoading)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SourceChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2SourceChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SourceChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_HistoryChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HistoryChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScriptDialogOpening)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ScriptDialogOpeningEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScriptDialogOpening)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PermissionRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PermissionRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ProcessFailed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessFailedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProcessFailed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WebMessageReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebMessageReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NewWindowRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NewWindowRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NewWindowRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DocumentTitleChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DocumentTitleChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContainsFullScreenElementChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContainsFullScreenElementChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WebResourceRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebResourceRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WindowCloseRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WindowCloseRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING uri);
    HRESULT (STDMETHODCALLTYPE* NavigateToString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING htmlContent);
    HRESULT (STDMETHODCALLTYPE* AddScriptToExecuteOnDocumentCreatedAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING javaScript,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* RemoveScriptToExecuteOnDocumentCreated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING id);
    HRESULT (STDMETHODCALLTYPE* ExecuteScriptAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING javaScript,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* CapturePreviewAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CapturePreviewImageFormat imageFormat,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* imageStream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* Reload)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
    HRESULT (STDMETHODCALLTYPE* PostWebMessageAsJson)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING webMessageAsJson);
    HRESULT (STDMETHODCALLTYPE* PostWebMessageAsString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING webMessageAsString);
    HRESULT (STDMETHODCALLTYPE* CallDevToolsProtocolMethodAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING methodName,
        HSTRING parametersAsJson,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* GoBack)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
    HRESULT (STDMETHODCALLTYPE* GoForward)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
    HRESULT (STDMETHODCALLTYPE* GetDevToolsProtocolEventReceiver)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING eventName,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver** result);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
    HRESULT (STDMETHODCALLTYPE* AddHostObjectToScript)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING name,
        IInspectable* rawObject);
    HRESULT (STDMETHODCALLTYPE* RemoveHostObjectFromScript)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* OpenDevToolsWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This);
    HRESULT (STDMETHODCALLTYPE* AddWebResourceRequestedFilter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING uri,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext ResourceContext);
    HRESULT (STDMETHODCALLTYPE* RemoveWebResourceRequestedFilter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* This,
        HSTRING uri,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext ResourceContext);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyEventKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2KeyEventKind* value);
    HRESULT (STDMETHODCALLTYPE* get_VirtualKey)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyEventLParam)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalKeyStatus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PhysicalKeyStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBrowserAcceleratorKeyEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBrowserAcceleratorKeyEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2AcceleratorKeyPressedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Challenge)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UserName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Password)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Password)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponseVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtensionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension* This,
        boolean IsEnabled,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtensionVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtensionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserExtension_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BrowserProcessExitKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowserProcessExitKind* value);
    HRESULT (STDMETHODCALLTYPE* get_BrowserProcessId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Issuer)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ValidFrom)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ValidTo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DerEncodedSerialNumber)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PemEncodedIssuerCertificateChain)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* ToPemEncoding)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CertificateVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CertificateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Issuer)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ValidFrom)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ValidTo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DerEncodedSerialNumber)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PemEncodedIssuerCertificateChain)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ClientCertificateKind* value);
    HRESULT (STDMETHODCALLTYPE* ToPemEncoding)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Host)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Port)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsProxy)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowedCertificateAuthorities)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_MutuallyTrustedCertificates)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificate** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedCertificate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedCertificate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificate* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RootVisualTarget)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_RootVisualTarget)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_CursorChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CursorChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SendMouseInput)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventKind eventKind,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MouseEventVirtualKeys virtualKeys,
        UINT32 mouseData,
        struct __x_ABI_CWindows_CFoundation_CPoint point);
    HRESULT (STDMETHODCALLTYPE* SendPointerInput)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PointerEventKind eventKind,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* pointerInfo);
    HRESULT (STDMETHODCALLTYPE* get_Cursor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        __x_ABI_CWindows_CUI_CCore_CICoreCursor** value);
    HRESULT (STDMETHODCALLTYPE* DragEnter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo* dragInfo,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride* dragUIOverride,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* result);
    HRESULT (STDMETHODCALLTYPE* DragOver)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo* dragInfo,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragUIOverride* dragUIOverride,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* result);
    HRESULT (STDMETHODCALLTYPE* Drop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CCore_CICoreDragInfo* dragInfo,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DragLeave)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionController3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CompositionControllerStatics2__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsErrorPage)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_NavigationId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ShortcutKeyDescription)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem** value);
    HRESULT (STDMETHODCALLTYPE* add_CustomItemSelected)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CustomItemSelected)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItemVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MenuItems)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuItem** value);
    HRESULT (STDMETHODCALLTYPE* get_ContextMenuTarget)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget** value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedCommandId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedCommandId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuTargetKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEditable)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRequestedForMainFrame)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PageUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasLinkUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LinkUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasLinkText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LinkText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasSourceUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasSelection)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTargetVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTargetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsVisible)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVisible)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_Bounds)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomFactor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ParentWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference** value);
    HRESULT (STDMETHODCALLTYPE* put_ParentWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* value);
    HRESULT (STDMETHODCALLTYPE* get_CoreWebView2)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2** value);
    HRESULT (STDMETHODCALLTYPE* add_ZoomFactorChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ZoomFactorChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MoveFocusRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2MoveFocusRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MoveFocusRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AcceleratorKeyPressed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2AcceleratorKeyPressedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AcceleratorKeyPressed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetBoundsAndZoomFactor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        struct __x_ABI_CWindows_CFoundation_CRect Bounds,
        DOUBLE ZoomFactor);
    HRESULT (STDMETHODCALLTYPE* MoveFocus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason reason);
    HRESULT (STDMETHODCALLTYPE* NotifyParentWindowPositionChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultBackgroundColor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultBackgroundColor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RasterizationScale)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RasterizationScale)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldDetectMonitorScaleChanges)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldDetectMonitorScaleChanges)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BoundsMode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BoundsMode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BoundsMode value);
    HRESULT (STDMETHODCALLTYPE* add_RasterizationScaleChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RasterizationScaleChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowExternalDrop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowExternalDrop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Controller4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProfileName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ProfileName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsInPrivateModeEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsInPrivateModeEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ScriptLocale)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ScriptLocale)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WindowHandle)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_CoreWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromWindowHandle)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
        UINT64 windowHandle,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromCoreWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow* coreWindow,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReferenceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Expires)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Expires)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsHttpOnly)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHttpOnly)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SameSite)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind* value);
    HRESULT (STDMETHODCALLTYPE* put_SameSite)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2CookieSameSiteKind value);
    HRESULT (STDMETHODCALLTYPE* get_IsSecure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSecure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSession)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCookie)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        HSTRING name,
        HSTRING value,
        HSTRING Domain,
        HSTRING Path,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** result);
    HRESULT (STDMETHODCALLTYPE* CopyCookie)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* cookieParam,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie** result);
    HRESULT (STDMETHODCALLTYPE* AddOrUpdateCookie)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* cookie);
    HRESULT (STDMETHODCALLTYPE* DeleteCookie)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Cookie* cookie);
    HRESULT (STDMETHODCALLTYPE* DeleteCookies)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        HSTRING name,
        HSTRING uri);
    HRESULT (STDMETHODCALLTYPE* DeleteCookiesWithDomainAndPath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This,
        HSTRING name,
        HSTRING Domain,
        HSTRING Path);
    HRESULT (STDMETHODCALLTYPE* DeleteAllCookies)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManagerVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCookiesAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual* This,
        HSTRING uri,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Cookie** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TreatAsSecure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TreatAsSecure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_HasAuthorityComponent)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_HasAuthorityComponent)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory* This,
        HSTRING schemeName,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistrationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SchemeName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowedOrigins)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CustomSchemeRegistration__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigationId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ParameterObjectAsJson)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_DevToolsProtocolEventReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DevToolsProtocolEventReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DevToolsProtocolEventReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiverVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiverVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* WrapNamedObject)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
        HSTRING name,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* adapter,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* WrapObject)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
        IInspectable* unwrapped,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* adapter,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* UnwrapObject)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This,
        IInspectable* wrapped,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Clean)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapterVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentDisposition)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MimeType)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalBytesToReceive)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_BytesReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_EstimatedEndTime)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ResultFilePath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadState* value);
    HRESULT (STDMETHODCALLTYPE* get_InterruptReason)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DownloadInterruptReason* value);
    HRESULT (STDMETHODCALLTYPE* get_CanResume)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_BytesReceivedChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BytesReceivedChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EstimatedEndTimeChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EstimatedEndTimeChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadOperation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperationVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DownloadOperation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadOperation** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ResultFilePath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ResultFilePath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BrowserVersionString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_NewBrowserVersionAvailable)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NewBrowserVersionAvailable)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2ControllerAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* ParentWindow,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller** operation);
    HRESULT (STDMETHODCALLTYPE* CreateWebResourceResponse)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* Content,
        INT32 StatusCode,
        HSTRING ReasonPhrase,
        HSTRING Headers,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2ControllerOptions)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment10_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FailureReportFolderPath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment11_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSharedBuffer)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12* This,
        UINT64 Size,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment12_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetProcessExtendedInfosAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessExtendedInfo** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment13_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWebResourceRequest)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2* This,
        HSTRING uri,
        HSTRING Method,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* postData,
        HSTRING Headers,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2CompositionControllerAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* ParentWindow,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController** operation);
    HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2PointerInfo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_BrowserProcessExited)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserProcessExitedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BrowserProcessExited)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePrintSettings)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserDataFolder)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ProcessInfosChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProcessInfosChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetProcessInfos)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ProcessInfo** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateContextMenuItem)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9* This,
        HSTRING Label,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* iconStream,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ContextMenuItemKind Kind,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ContextMenuItem** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment9_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AdditionalBrowserArguments)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AdditionalBrowserArguments)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TargetCompatibleBrowserVersion)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetCompatibleBrowserVersion)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AllowSingleSignOnUsingOSPrimaryAccount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowSingleSignOnUsingOSPrimaryAccount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptionsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExclusiveUserDataFolderAccess)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ExclusiveUserDataFolderAccess)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCustomCrashReportingEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCustomCrashReportingEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnableTrackingPrevention)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableTrackingPrevention)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreBrowserExtensionsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreBrowserExtensionsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CustomSchemeRegistrations)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration** value);
    HRESULT (STDMETHODCALLTYPE* put_CustomSchemeRegistrations)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CustomSchemeRegistration* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions__Manual3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment** operation);
    HRESULT (STDMETHODCALLTYPE* CreateWithOptionsAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
        HSTRING browserExecutableFolder,
        HSTRING userDataFolder,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Environment** operation);
    HRESULT (STDMETHODCALLTYPE* GetAvailableBrowserVersionString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetAvailableBrowserVersionString2)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
        HSTRING browserExecutableFolder,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* CompareBrowserVersionString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics* This,
        HSTRING browserVersionString1,
        HSTRING browserVersionString2,
        INT32* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2EnvironmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2ControllerAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* ParentWindow,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Controller** operation);
    HRESULT (STDMETHODCALLTYPE* CreateCoreWebView2CompositionControllerAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerWindowReference* ParentWindow,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ControllerOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2CompositionController** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FileVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2File_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_NameChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NameChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Destroyed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Destroyed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* RemoveHostObjectFromScript)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* IsDestroyed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_NavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLoading)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLoading)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2NavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationCompleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DOMContentLoaded)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DOMContentLoaded)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WebMessageReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebMessageReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebMessageReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ExecuteScriptAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        HSTRING javaScript,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* PostWebMessageAsJson)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        HSTRING webMessageAsJson);
    HRESULT (STDMETHODCALLTYPE* PostWebMessageAsString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2* This,
        HSTRING webMessageAsString);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PermissionRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Frame___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PermissionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PermissionRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PostSharedBufferToScript)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* sharedBuffer,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess access,
        HSTRING additionalDataAsJson);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Frame** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfoVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ParentFrameInfo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FrameKind* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIteratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIteratorVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIteratorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeadersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetHeader)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
        HSTRING name,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetHeaders)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
        HSTRING name,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator** result);
    HRESULT (STDMETHODCALLTYPE* Contains)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
        HSTRING name,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetHeader)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveHeader)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders* This,
        HSTRING name);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeadersVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeadersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeadersVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AppendHeader)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* Contains)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
        HSTRING name,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetHeader)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
        HSTRING name,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetHeaders)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders* This,
        HSTRING name,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpHeadersCollectionIterator** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeadersVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeadersVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_InitiatingOrigin)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUserInitiated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2LaunchingExternalUriSchemeEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MoveFocusReason* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSuccess)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WebErrorStatus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_NavigationId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HttpStatusCode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUserInitiated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRedirected)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_RequestHeaders)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_NavigationId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AdditionalAllowedFrameAncestors)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AdditionalAllowedFrameAncestors)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigationKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2NavigationKind* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NavigationStartingEventArgs3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NewWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2** value);
    HRESULT (STDMETHODCALLTYPE* put_NewWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsUserInitiated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WindowFeatures)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OriginalSourceFrameInfo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2FrameInfo** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2NewWindowRequestedEventArgs3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUserInitiated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState* value);
    HRESULT (STDMETHODCALLTYPE* put_State)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SavesInProfile)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SavesInProfile)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionRequestedEventArgs3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSettingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PermissionKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind* value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionOrigin)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionState)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSettingVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSettingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PermissionSetting_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointerKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PointerId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_FrameId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PointerFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PointerDeviceRect)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerDeviceRect)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayRect)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayRect)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_PixelLocation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_PixelLocation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_HimetricLocation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_HimetricLocation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_PixelLocationRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_PixelLocationRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_HimetricLocationRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_HimetricLocationRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Time)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Time)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_HistoryCount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_HistoryCount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_InputData)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_InputData)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KeyStates)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyStates)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PerformanceCount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_PerformanceCount)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonChangeKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonChangeKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenMask)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenMask)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenPressure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenPressure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenRotation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenRotation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenTiltX)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenTiltX)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PenTiltY)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PenTiltY)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TouchFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchFlags)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TouchMask)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchMask)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TouchContact)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchContact)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_TouchContactRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchContactRaw)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_TouchOrientation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchOrientation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TouchPressure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TouchPressure)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfoVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PointerInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintOrientation value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleFactor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleFactor)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_PageWidth)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_PageWidth)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_PageHeight)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_PageHeight)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MarginTop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MarginTop)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MarginBottom)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MarginBottom)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MarginLeft)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MarginLeft)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MarginRight)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MarginRight)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldPrintBackgrounds)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldPrintBackgrounds)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldPrintSelectionOnly)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldPrintSelectionOnly)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldPrintHeaderAndFooter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldPrintHeaderAndFooter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTitle)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTitle)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FooterUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FooterUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettingsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PageRanges)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PageRanges)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PagesPerSide)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_PagesPerSide)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Copies)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Copies)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Collation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation* value);
    HRESULT (STDMETHODCALLTYPE* put_Collation)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintCollation value);
    HRESULT (STDMETHODCALLTYPE* get_ColorMode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorMode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintColorMode value);
    HRESULT (STDMETHODCALLTYPE* get_Duplex)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex* value);
    HRESULT (STDMETHODCALLTYPE* put_Duplex)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDuplex value);
    HRESULT (STDMETHODCALLTYPE* get_MediaSize)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize* value);
    HRESULT (STDMETHODCALLTYPE* put_MediaSize)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintMediaSize value);
    HRESULT (STDMETHODCALLTYPE* get_PrinterName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PrinterName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartial_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBrowserHitTransparent)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialControllerVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrivatePartialController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProcessInfo)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_AssociatedFrameInfos)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfoVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessExtendedInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProcessFailedKind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedKind* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessFailedReason* value);
    HRESULT (STDMETHODCALLTYPE* get_ExitCode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ProcessDescription)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameInfosForFailedProcess)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameInfo** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProcessId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ProcessKind* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfoVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProcessInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProfileName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInPrivateModeEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ProfilePath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultDownloadFolderPath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultDownloadFolderPath)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredColorScheme)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredColorScheme)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PreferredColorScheme value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProfileVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ProfileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ClearBrowsingDataAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2BrowsingDataKinds dataKinds,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreferredTrackingPreventionLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredTrackingPreventionLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2TrackingPreventionLevel value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetPermissionStateAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionKind PermissionKind,
        HSTRING origin,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PermissionState State,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CookieManager)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPasswordAutosaveEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPasswordAutosaveEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsGeneralAutofillEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGeneralAutofillEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddBrowserExtensionAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7* This,
        HSTRING extensionFolderPath,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BrowserExtension** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Deleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2Profile_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Deleted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Delete)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ScriptDialogKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ResultText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ResultText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* Accept)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ErrorStatus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_RequestUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Certificate** value);
    HRESULT (STDMETHODCALLTYPE* get_Action)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction* value);
    HRESULT (STDMETHODCALLTYPE* put_Action)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2ServerCertificateErrorAction value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsScriptEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsScriptEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsWebMessageEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsWebMessageEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AreDefaultScriptDialogsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreDefaultScriptDialogsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatusBarEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStatusBarEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AreDevToolsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreDevToolsEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AreDefaultContextMenusEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreDefaultContextMenusEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AreHostObjectsAllowed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreHostObjectsAllowed)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomControlEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomControlEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsBuiltInErrorPageEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBuiltInErrorPageEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SettingsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserAgent)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UserAgent)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreBrowserAcceleratorKeysEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreBrowserAcceleratorKeysEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPasswordAutosaveEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPasswordAutosaveEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsGeneralAutofillEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGeneralAutofillEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPinchZoomEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPinchZoomEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSwipeNavigationEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSwipeNavigationEnabled)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HiddenPdfToolbarItems)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems* value);
    HRESULT (STDMETHODCALLTYPE* put_HiddenPdfToolbarItems)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PdfToolbarItems value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReputationCheckingRequired)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsReputationCheckingRequired)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HostObjectDispatchAdapter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter** value);
    HRESULT (STDMETHODCALLTYPE* put_HostObjectDispatchAdapter)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2DispatchAdapter* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Settings__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* OpenStream)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBufferVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBufferVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__ManualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Buffer)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual* This,
        __x_ABI_CWindows_CFoundation_CIMemoryBufferReference** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__ManualVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__ManualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer__Manual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsNewDocument)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WebMessageAsJson)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* TryGetWebMessageAsString)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AdditionalObjects)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2* This,
        __x_ABI_C__FIVectorView_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebMessageReceivedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Method)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Method)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpRequestHeaders** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse** value);
    HRESULT (STDMETHODCALLTYPE* put_Response)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceContext)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2WebResourceContext* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders** value);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_StatusCode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ReasonPhrase)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ReasonPhrase)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponse_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Headers)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2HttpResponseHeaders** value);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ReasonPhrase)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetContentAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseViewVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeaturesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasPosition)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasSize)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Left)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Top)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldDisplayMenuBar)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldDisplayStatus)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldDisplayToolbar)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldDisplayScrollBars)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeaturesVtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeaturesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WindowFeatures_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_BasicAuthenticationRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2BasicAuthenticationRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BasicAuthenticationRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__10_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ContextMenuRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ContextMenuRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CallDevToolsProtocolMethodForSessionAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11* This,
        HSTRING sessionId,
        HSTRING methodName,
        HSTRING parametersAsJson,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__11_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StatusBarText)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_StatusBarTextChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusBarTextChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__12_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Profile)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Profile** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__13_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ServerCertificateErrorDetected)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ServerCertificateErrorDetectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ServerCertificateErrorDetected)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ClearServerCertificateErrorActionsAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__14_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FaviconUri)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_FaviconChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FaviconChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetFaviconAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2FaviconImageFormat format,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__15_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrintAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* printSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2PrintStatus** operation);
    HRESULT (STDMETHODCALLTYPE* ShowPrintUI)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2PrintDialogKind printDialogKind);
    HRESULT (STDMETHODCALLTYPE* PrintToPdfStreamAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* printSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__16_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PostSharedBufferToScript)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2SharedBuffer* sharedBuffer,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2SharedBufferAccess access,
        HSTRING additionalDataAsJson);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__17_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_LaunchingExternalUriScheme)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2LaunchingExternalUriSchemeEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LaunchingExternalUriScheme)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__18_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MemoryUsageTargetLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel* value);
    HRESULT (STDMETHODCALLTYPE* put_MemoryUsageTargetLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2MemoryUsageTargetLevel value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__19_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CookieManager)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2CookieManager** value);
    HRESULT (STDMETHODCALLTYPE* get_Environment)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2Environment** value);
    HRESULT (STDMETHODCALLTYPE* add_WebResourceResponseReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2WebResourceResponseReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebResourceResponseReceived)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DOMContentLoaded)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DOMContentLoaded)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* NavigateWithWebResourceRequest)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2* This,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2WebResourceRequest* Request);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__20_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSuspended)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* TrySuspendAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This);
    HRESULT (STDMETHODCALLTYPE* SetVirtualHostNameToFolderMapping)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
        HSTRING hostName,
        HSTRING folderPath,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2HostResourceAccessKind accessKind);
    HRESULT (STDMETHODCALLTYPE* ClearVirtualHostNameToFolderMapping)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3* This,
        HSTRING hostName);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_FrameCreated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2FrameCreatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameCreated)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DownloadStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2DownloadStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DownloadStarting)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ClientCertificateRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2ClientCertificateRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ClientCertificateRequested)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OpenTaskManagerWindow)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PrintToPdfAsync)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7* This,
        HSTRING ResultFilePath,
        __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2PrintSettings* printSettings,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsMuted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMuted)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDocumentPlayingAudio)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_IsMutedChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsMutedChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsDocumentPlayingAudioChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsDocumentPlayingAudioChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultDownloadDialogOpen)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultDownloadDialogCornerAlignment)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultDownloadDialogCornerAlignment)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        enum __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CCoreWebView2DefaultDownloadDialogCornerAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultDownloadDialogMargin)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultDownloadDialogMargin)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* add_IsDefaultDownloadDialogOpenChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWeb__CWebView2__CCore__CCoreWebView2_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsDefaultDownloadDialogOpenChanged)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* OpenDefaultDownloadDialog)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This);
    HRESULT (STDMETHODCALLTYPE* CloseDefaultDownloadDialog)(__x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9Vtbl;

    interface __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9;
#endif /* !defined(____x_ABI_CMicrosoft_CWeb_CWebView2_CCore_CICoreWebView2__9_INTERFACE_DEFINED__) */
    
