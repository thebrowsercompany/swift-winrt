// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Interop.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBinding __x_ABI_CWindows_CUI_CXaml_CData_CIBinding;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2 __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionView __x_ABI_CWindows_CUI_CXaml_CData_CICollectionView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty __x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_IInspectable __x_ABI_C__FIIterator_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_IInspectable* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_IInspectable __x_ABI_C__FIIterable_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_IInspectable* This,
        __x_ABI_C__FIIterator_1_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_IInspectable __x_ABI_C__FIVector_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_IInspectable;

    typedef struct __x_ABI_C__FIVector_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_IInspectable* This,
        __x_ABI_C__FIVectorView_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_IInspectableVtbl;

    interface __x_ABI_C__FIVector_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1_IInspectable __x_ABI_C__FIObservableVector_1_IInspectable;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1_IInspectable __x_ABI_C__FVectorChangedEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This,
        __x_ABI_C__FIObservableVector_1_IInspectable* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1_IInspectable __x_ABI_C__FIObservableVector_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1_IInspectable;

    typedef struct __x_ABI_C__FIObservableVector_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
        __x_ABI_C__FVectorChangedEventHandler_1_IInspectable* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1_IInspectableVtbl;

    interface __x_ABI_C__FIObservableVector_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath __x_ABI_CWindows_CUI_CXaml_CIPropertyPath;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger;

enum __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode
    {
        __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode_OneWay = 1,
    __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode_OneTime = 2,
    __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode_TwoWay = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode
    {
        __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode_TemplatedParent = 1,
    __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode_Self = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger
    {
        __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger_Default = 0,
    __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger_PropertyChanged = 1,
    __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger_Explicit = 2,
    __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger_LostFocus = 3,
};

struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult
    {
        UINT32 Count;
};

#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath** value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath* value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CBindingMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeSource)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource** value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeSource)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* value);
    HRESULT (STDMETHODCALLTYPE* get_ElementName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Converter)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter** value);
    HRESULT (STDMETHODCALLTYPE* put_Converter)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* value);
    HRESULT (STDMETHODCALLTYPE* get_ConverterParameter)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ConverterParameter)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ConverterLanguage)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ConverterLanguage)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBinding
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBinding;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBinding_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FallbackValue)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_FallbackValue)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_TargetNullValue)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetNullValue)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateSourceTrigger)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger* value);
    HRESULT (STDMETHODCALLTYPE* put_UpdateSourceTrigger)(__x_ABI_CWindows_CUI_CXaml_CData_CIBinding2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CUpdateSourceTrigger value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBinding2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBinding2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBinding2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataItem)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_ParentBinding)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBinding** value);
    HRESULT (STDMETHODCALLTYPE* UpdateSource)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpressionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBinding** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperations_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetBinding)(__x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* target,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* binding);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIBindingOperationsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentItem)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentPosition)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCurrentAfterLast)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCurrentBeforeFirst)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CollectionGroups)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        __x_ABI_C__FIObservableVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_HasMoreItems)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_CurrentChanged)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentChanged)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CurrentChanging)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentChanging)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentTo)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        IInspectable* item,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentToPosition)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        INT32 index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentToFirst)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentToLast)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentToNext)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveCurrentToPrevious)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* LoadMoreItemsAsync)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionView* This,
        UINT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICollectionView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateView)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CICollectionView** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_GroupItems)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup* This,
        __x_ABI_C__FIObservableVector_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroupVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_View)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CICollectionView** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSourceGrouped)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSourceGrouped)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsPath)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsPath)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSourceGroupedProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsPathProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICollectionViewSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCancelable)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithCancelableParameter)(__x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory* This,
        boolean isCancelable,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgs** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICurrentChangingEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetValue)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        IInspectable* target,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetValue)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        IInspectable* target,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* GetIndexedValue)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        IInspectable* target,
        IInspectable* index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetIndexedValue)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        IInspectable* target,
        IInspectable* value,
        IInspectable* index);
    HRESULT (STDMETHODCALLTYPE* get_CanWrite)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanRead)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCustomProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty** result);
    HRESULT (STDMETHODCALLTYPE* GetIndexedProperty)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
        HSTRING name,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName type,
        __x_ABI_CWindows_CUI_CXaml_CData_CICustomProperty** result);
    HRESULT (STDMETHODCALLTYPE* GetStringRepresentation)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProviderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FirstIndex)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LastIndex)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory* This,
        INT32 firstIndex,
        UINT32 length,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRangeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RangesChanged)(__x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* visibleRange,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* trackedItems);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIItemsRangeInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChangedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PropertyChanged)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PropertyChanged)(__x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChangedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChangedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PropertyName)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory* This,
        HSTRING name,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIPropertyChangedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource* This,
        enum __x_ABI_CWindows_CUI_CXaml_CData_CRelativeSourceMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIRelativeSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectRange)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* itemIndexRange);
    HRESULT (STDMETHODCALLTYPE* DeselectRange)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* itemIndexRange);
    HRESULT (STDMETHODCALLTYPE* IsSelected)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
        INT32 index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetSelectedRanges)(__x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CISelectionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoadingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadMoreItemsAsync)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
        UINT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult** operation);
    HRESULT (STDMETHODCALLTYPE* get_HasMoreItems)(__x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoadingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoadingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CISupportIncrementalLoading_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Convert)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
        IInspectable* value,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName targetType,
        IInspectable* parameter,
        HSTRING language,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ConvertBack)(__x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* This,
        IInspectable* value,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName targetType,
        IInspectable* parameter,
        HSTRING language,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_INTERFACE_DEFINED__) */
    
