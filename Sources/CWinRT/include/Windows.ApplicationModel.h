// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.ApplicationModel.Core.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInfo __x_ABI_CWindows_CApplicationModel_CIAppInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInstance_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInstance_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInstance __x_ABI_CWindows_CApplicationModel_CIAppInstance;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInstance_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics __x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2 __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage __x_ABI_CWindows_CApplicationModel_CIPackage;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage2 __x_ABI_CWindows_CApplicationModel_CIPackage2;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage3 __x_ABI_CWindows_CApplicationModel_CIPackage3;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage4 __x_ABI_CWindows_CApplicationModel_CIPackage4;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage5_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage5 __x_ABI_CWindows_CApplicationModel_CIPackage5;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage6_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage6 __x_ABI_CWindows_CApplicationModel_CIPackage6;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackage7_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackage7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackage7 __x_ABI_CWindows_CApplicationModel_CIPackage7;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackage7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog __x_ABI_CWindows_CApplicationModel_CIPackageCatalog;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2 __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3 __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4 __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageId_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageId_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageId __x_ABI_CWindows_CApplicationModel_CIPackageId;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageId_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageStatics __x_ABI_CWindows_CApplicationModel_CIPackageStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageStatus_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageStatus_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageStatus __x_ABI_CWindows_CApplicationModel_CIPackageStatus;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageStatus_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageStatus2 __x_ABI_CWindows_CApplicationModel_CIPackageStatus2;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata;

#endif // ____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIStartupTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIStartupTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIStartupTask __x_ABI_CWindows_CApplicationModel_CIStartupTask;

#endif // ____x_ABI_CWindows_CApplicationModel_CIStartupTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics __x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CISuspendingDeferral __x_ABI_CWindows_CApplicationModel_CISuspendingDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CISuspendingOperation __x_ABI_CWindows_CApplicationModel_CISuspendingOperation;

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CStartupTaskState __x_ABI_CWindows_CApplicationModel_CStartupTaskState;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
        enum __x_ABI_CWindows_CApplicationModel_CStartupTaskState* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CStartupTask** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIStartupTask** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CApplicationModel_CPackageInstallProgress __x_ABI_CWindows_CApplicationModel_CPackageInstallProgress;

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress* asyncInfo,
        struct __x_ABI_CWindows_CApplicationModel_CPackageInstallProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInstance** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CPackage** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIPackage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIPackage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInstance** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog* sender,
        __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CProcessorArchitecture __x_ABI_CWindows_CSystem_CProcessorArchitecture;

typedef enum __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions;

typedef enum __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState;

typedef enum __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability;

typedef struct __x_ABI_CWindows_CApplicationModel_CPackageVersion __x_ABI_CWindows_CApplicationModel_CPackageVersion;

enum __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions
    {
        __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions_ForceTargetAppShutdown = 0x1,
    __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions_ApplyUpdateIfAvailable = 0x2,
};

enum __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus
    {
        __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus_Unavailable = 0,
    __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus_Available = 1,
    __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus_AvailableWithoutToken = 2,
    __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus_Unknown = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState
    {
        __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState_NotStaged = 0,
    __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState_Queued = 1,
    __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState_Staging = 2,
    __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState_Staged = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind
    {
        __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind_None = 0,
    __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind_Developer = 1,
    __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind_Enterprise = 2,
    __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind_Store = 3,
    __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind_System = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability
    {
        __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability_Unknown = 0,
    __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability_NoUpdates = 1,
    __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability_Available = 2,
    __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability_Required = 3,
    __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability_Error = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CStartupTaskState
    {
        __x_ABI_CWindows_CApplicationModel_CStartupTaskState_Disabled = 0,
    __x_ABI_CWindows_CApplicationModel_CStartupTaskState_DisabledByUser = 1,
    __x_ABI_CWindows_CApplicationModel_CStartupTaskState_Enabled = 2,
    __x_ABI_CWindows_CApplicationModel_CStartupTaskState_DisabledByPolicy = 3,
    __x_ABI_CWindows_CApplicationModel_CStartupTaskState_EnabledByPolicy = 4,
};

struct __x_ABI_CWindows_CApplicationModel_CPackageInstallProgress
    {
        UINT32 PercentComplete;
};

struct __x_ABI_CWindows_CApplicationModel_CPackageVersion
    {
        UINT16 Major;
    UINT16 Minor;
    UINT16 Build;
    UINT16 Revision;
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetLogo)(__x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo* This,
        struct __x_ABI_CWindows_CFoundation_CSize size,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppUserModelId)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayInfo)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CIAppInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIAppInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIAppInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIAppInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIAppInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIAppInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIAppInstance_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIAppInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCurrentInstance)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* RedirectActivationTo)(__x_ABI_CWindows_CApplicationModel_CIAppInstance* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIAppInstanceVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIAppInstance
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIAppInstanceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIAppInstance;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstance_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIAppInstanceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RecommendedInstance)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** value);
    HRESULT (STDMETHODCALLTYPE* GetActivatedEventArgs)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs** result);
    HRESULT (STDMETHODCALLTYPE* FindOrRegisterInstanceForKey)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
        HSTRING key,
        __x_ABI_CWindows_CApplicationModel_CIAppInstance** result);
    HRESULT (STDMETHODCALLTYPE* Unregister)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetInstances)(__x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppInstance** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIAppInstanceStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIAppInstanceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIAppInstanceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowInstalledApplicationsUI)(__x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CICameraApplicationManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIDesignModeStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesignModeEnabled)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIDesignModeStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIDesignModeStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIDesignModeStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesignMode2Enabled)(__x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIDesignModeStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LaunchFullTrustProcessForCurrentAppAsync)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* LaunchFullTrustProcessForCurrentAppWithParametersAsync)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
        HSTRING parameterGroupId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* LaunchFullTrustProcessForAppAsync)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
        HSTRING fullTrustPackageRelativeAppId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* LaunchFullTrustProcessForAppWithParametersAsync)(__x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics* This,
        HSTRING fullTrustPackageRelativeAppId,
        HSTRING parameterGroupId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIFullTrustProcessLauncherStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FeatureId)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CLimitedAccessFeatureStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_EstimatedRemovalDate)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryUnlockFeature)(__x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics* This,
        HSTRING featureId,
        HSTRING token,
        HSTRING attestation,
        __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeatureRequestResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CILimitedAccessFeaturesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageId** value);
    HRESULT (STDMETHODCALLTYPE* get_InstalledLocation)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFramework)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Dependencies)(__x_ABI_CWindows_CApplicationModel_CIPackage* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublisherDisplayName)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Logo)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_IsResourcePackage)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBundle)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDevelopmentMode)(__x_ABI_CWindows_CApplicationModel_CIPackage2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageStatus** value);
    HRESULT (STDMETHODCALLTYPE* get_InstalledDate)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* GetAppListEntriesAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage3* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntry** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SignatureKind)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
        enum __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOptional)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* VerifyContentIntegrityAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage4* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetContentGroupsAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** operation);
    HRESULT (STDMETHODCALLTYPE* GetContentGroupAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** operation);
    HRESULT (STDMETHODCALLTYPE* StageContentGroupsAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
        __x_ABI_C__FIIterable_1_HSTRING* names,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** operation);
    HRESULT (STDMETHODCALLTYPE* StageContentGroupsWithPriorityAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
        __x_ABI_C__FIIterable_1_HSTRING* names,
        boolean moveToHeadOfQueue,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroup** operation);
    HRESULT (STDMETHODCALLTYPE* SetInUseAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage5* This,
        boolean inUse,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage5Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage5
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage5;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAppInstallerInfo)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo** value);
    HRESULT (STDMETHODCALLTYPE* CheckUpdateAvailabilityAsync)(__x_ABI_CWindows_CApplicationModel_CIPackage6* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage6Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage6
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage6;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackage7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackage7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackage7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MutableLocation)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_EffectiveLocation)(__x_ABI_CWindows_CApplicationModel_CIPackage7* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackage7Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackage7
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackage7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackage7;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackage7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PackageStaging)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStagingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageStaging)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PackageInstalling)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageInstallingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageInstalling)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PackageUpdating)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUpdatingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageUpdating)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PackageUninstalling)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageUninstallingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageUninstalling)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PackageStatusChanged)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageStatusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageStatusChanged)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalog;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PackageContentGroupStaging)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CPackageCatalog___x_ABI_CWindows__CApplicationModel__CPackageContentGroupStagingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PackageContentGroupStaging)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* AddOptionalPackageAsync)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog2* This,
        HSTRING optionalPackageFamilyName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddOptionalPackageResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalog2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RemoveOptionalPackagesAsync)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog3* This,
        __x_ABI_C__FIIterable_1_HSTRING* optionalPackageFamilyNames,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveOptionalPackagesResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalog3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddResourcePackageAsync)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
        HSTRING resourcePackageFamilyName,
        HSTRING resourceID,
        enum __x_ABI_CWindows_CApplicationModel_CAddResourcePackageOptions options,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CApplicationModel__CPackageCatalogAddResourcePackageResult___x_ABI_CWindows__CApplicationModel__CPackageInstallProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RemoveResourcePackagesAsync)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalog4* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CPackage* resourcePackages,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageCatalogRemoveResourcePackagesResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalog4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalog4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalog4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddOptionalPackageResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogAddResourcePackageResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PackagesRemoved)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveOptionalPackagesResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PackagesRemoved)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogRemoveResourcePackagesResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OpenForCurrentPackage)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog** value);
    HRESULT (STDMETHODCALLTYPE* OpenForCurrentUser)(__x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics* This,
        __x_ABI_CWindows_CApplicationModel_CIPackageCatalog** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageCatalogStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageCatalogStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
        enum __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRequired)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroup* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroup;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentGroupName)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsContentGroupRequired)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStagingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RequiredGroupName)(__x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageId_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageId_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageIdVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        struct __x_ABI_CWindows_CApplicationModel_CPackageVersion* value);
    HRESULT (STDMETHODCALLTYPE* get_Architecture)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        enum __x_ABI_CWindows_CSystem_CProcessorArchitecture* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceId)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Publisher)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublisherId)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FullName)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FamilyName)(__x_ABI_CWindows_CApplicationModel_CIPackageId* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageIdVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageId
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageIdVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageId;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageId_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProductId)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Author)(__x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadataVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageInstallingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStagingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_CWindows_CApplicationModel_CIPackageStatics* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageStatus_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* VerifyIsOK)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_NotAvailable)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageOffline)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DataOffline)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Disabled)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_NeedsRemediation)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LicenseIssue)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Modified)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Tampered)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DependencyIssue)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Servicing)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DeploymentInProgress)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageStatusVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageStatus
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageStatusVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatus_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageStatus2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPartiallyStaged)(__x_ABI_CWindows_CApplicationModel_CIPackageStatus2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageStatus2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageStatus2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageStatus2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatus2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageStatusChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Package)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUninstallingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Availability)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_SourcePackage)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_TargetPackage)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CIPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageUpdatingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstallDate)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailToken)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* Launch)(__x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata* This,
        HSTRING parameters);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadataVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIStartupTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIStartupTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIStartupTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestEnableAsync)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTaskState** operation);
    HRESULT (STDMETHODCALLTYPE* Disable)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CStartupTaskState* value);
    HRESULT (STDMETHODCALLTYPE* get_TaskId)(__x_ABI_CWindows_CApplicationModel_CIStartupTask* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIStartupTaskVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIStartupTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIStartupTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIStartupTask;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIStartupTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CIStartupTaskStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentPackageAsync)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CStartupTask** operation);
    HRESULT (STDMETHODCALLTYPE* GetAsync)(__x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics* This,
        HSTRING taskId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CStartupTask** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CIStartupTaskStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CIStartupTaskStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CIStartupTaskStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CISuspendingDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CISuspendingDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CISuspendingDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CISuspendingDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CISuspendingDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CISuspendingDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SuspendingOperation)(__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CISuspendingOperation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CISuspendingOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
        __x_ABI_CWindows_CApplicationModel_CISuspendingDeferral** deferral);
    HRESULT (STDMETHODCALLTYPE* get_Deadline)(__x_ABI_CWindows_CApplicationModel_CISuspendingOperation* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CISuspendingOperationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CISuspendingOperation
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CISuspendingOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CISuspendingOperation;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CISuspendingOperation_INTERFACE_DEFINED__) */
    
