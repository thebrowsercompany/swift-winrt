// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Media.Core.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2 __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3 __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2 __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2 __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2 __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2 __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3 __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5 __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2 __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3 __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4 __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5 __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2 __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** first,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_GUID_IInspectable __x_ABI_C__FIMap_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality;

typedef enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat;

typedef enum __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat;

typedef enum __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode;

typedef enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality;

enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality_Auto = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality_High = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality_Medium = 2,
    __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality_Low = 3,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaMirroringOptions
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CMediaMirroringOptions_None = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaMirroringOptions_Horizontal = 0x1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaMirroringOptions_Vertical = 0x2,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat_Nv12 = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat_Bgra8 = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat_P010 = 2,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaRotation
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CMediaRotation_None = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaRotation_Clockwise90Degrees = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaRotation_Clockwise180Degrees = 2,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaRotation_Clockwise270Degrees = 3,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaThumbnailFormat
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CMediaThumbnailFormat_Bmp = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CMediaThumbnailFormat_Bgra8 = 1,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat_None = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat_Unsupported = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat_Equirectangular = 2,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode_None = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode_SideBySide = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode_TopBottom = 2,
};

enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality
    {
        __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Auto = 0,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_HD1080p = 1,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_HD720p = 2,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Wvga = 3,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Ntsc = 4,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Pal = 5,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Vga = 6,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Qvga = 7,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Uhd2160p = 8,
    __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality_Uhd4320p = 9,
};

#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Bitrate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Bitrate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ChannelCount)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ChannelCount)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SampleRate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SampleRate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_BitsPerSample)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BitsPerSample)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSpatial)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Copy)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitrate,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateAacAdts)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitrate,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateMp3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitrate,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreatePcm)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitsPerSample,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateWma)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitrate,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAlac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitsPerSample,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateFlac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2* This,
        UINT32 sampleRate,
        UINT32 channelCount,
        UINT32 bitsPerSample,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
        UINT32 valueLength,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* GetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData* This,
        UINT32* valueLength,
        BYTE** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserDataVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingPropertiesWithFormatUserData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Copy)(__x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConstrainedBaseline)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Baseline)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Extended)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Main)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_High)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_High10)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_High422)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_High444)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StereoHigh)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MultiviewHigh)(__x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIH264ProfileIdsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Copy)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateJpeg)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreatePng)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateJpegXR)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateUncompressed)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CMediaPixelFormat format,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateBmp)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateHeif)(__x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingPropertiesStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Audio)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties* value);
    HRESULT (STDMETHODCALLTYPE* get_Audio)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* put_Video)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* value);
    HRESULT (STDMETHODCALLTYPE* get_Video)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* put_Container)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties* value);
    HRESULT (STDMETHODCALLTYPE* get_Container)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIContainerEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetAudioTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* GetAudioTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor** value);
    HRESULT (STDMETHODCALLTYPE* SetVideoTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* GetVideoTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetTimedMetadataTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* GetTimedMetadataTracks)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CTimedMetadataStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateM4a)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateMp3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateWma)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateMp4)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateWmv)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromFileAsync)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFromStreamAsync)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CMediaProperties__CMediaEncodingProfile** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWav)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateAvi)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAlac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateFlac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CAudioEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);
    HRESULT (STDMETHODCALLTYPE* CreateHevc)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CVideoEncodingQuality quality,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfileStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
        __x_ABI_C__FIMap_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Subtype)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Subtype)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Aac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AacAdts)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Ac3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AmrNb)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AmrWb)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Argb32)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Asf)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Avi)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Bgra8)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Bmp)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Eac3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Float)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Gif)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_H263)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_H264)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_H264Es)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Hevc)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HevcEs)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Iyuv)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Jpeg)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_JpegXr)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mjpg)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mpeg)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mpeg1)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mpeg2)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mp3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Mpeg4)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Nv12)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Pcm)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Png)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Rgb24)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Rgb32)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Tiff)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wave)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wma8)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wma9)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wmv3)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wvc1)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Yuy2)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Yv12)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Vp9)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_L8)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_L16)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_D16)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Alac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Flac)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_P010)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Heif)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingSubtypesStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatioVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Numerator)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Numerator)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Denominator)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Denominator)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatioVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatioVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Simple)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Main)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SignalNoiseRatioScalable)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SpatiallyScalable)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_High)(__x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIMpeg2ProfileIdsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
        UINT32 valueLength,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* GetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
        UINT32* valueLength,
        BYTE** value);
    HRESULT (STDMETHODCALLTYPE* Copy)(__x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CITimedMetadataEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Bitrate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Bitrate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameRate)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);
    HRESULT (STDMETHODCALLTYPE* get_PixelAspectRatio)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
        UINT32 valueLength,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* GetFormatUserData)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
        UINT32* valueLength,
        BYTE** value);
    HRESULT (STDMETHODCALLTYPE* put_ProfileId)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ProfileId)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StereoscopicVideoPackingMode)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CStereoscopicVideoPackingMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SphericalVideoFrameFormat)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4* This,
        enum __x_ABI_CWindows_CMedia_CMediaProperties_CSphericalVideoFrameFormat* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Copy)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateH264)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateMpeg2)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* CreateUncompressed)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics* This,
        HSTRING subtype,
        UINT32 width,
        UINT32 height,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateHevc)(__x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingPropertiesStatics2_INTERFACE_DEFINED__) */
    
