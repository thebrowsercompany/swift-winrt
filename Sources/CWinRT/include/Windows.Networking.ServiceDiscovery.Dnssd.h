// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Networking.h"
#include "Windows.Networking.Connectivity.h"
#include "Windows.Networking.Sockets.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult;

#endif // ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance;

#endif // ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory;

#endif // ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher;

#endif // ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        UINT32 index,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* This,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* sender,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstanceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIStringable __x_ABI_CWindows_CFoundation_CIStringable;

#endif // ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter;

#endif // ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CIHostName __x_ABI_CWindows_CNetworking_CIHostName;

#endif // ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket __x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket;

#endif // ____x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener __x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener;

#endif // ____x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus;

typedef enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus;

enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus
    {
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_Success = 0,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_InvalidServiceName = 1,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_ServerError = 2,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_SecurityError = 3,
};

enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus
    {
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Created = 0,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Started = 1,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Stopping = 3,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Stopped = 4,
    __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Aborted = 5,
};

#if !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
        enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_IPAddress)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
        __x_ABI_CWindows_CNetworking_CIHostName** value);
    HRESULT (STDMETHODCALLTYPE* get_HasInstanceNameChanged)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl;

    interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DnssdServiceInstanceName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DnssdServiceInstanceName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HostName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CIHostName** value);
    HRESULT (STDMETHODCALLTYPE* put_HostName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_Port)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16* value);
    HRESULT (STDMETHODCALLTYPE* put_Port)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16* value);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_Weight)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16* value);
    HRESULT (STDMETHODCALLTYPE* put_Weight)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_TextAttributes)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* RegisterStreamSocketListenerAsync1)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener* socket,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult** result);
    HRESULT (STDMETHODCALLTYPE* RegisterStreamSocketListenerAsync2)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CSockets_CIStreamSocketListener* socket,
        __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult** result);
    HRESULT (STDMETHODCALLTYPE* RegisterDatagramSocketAsync1)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket* socket,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult** result);
    HRESULT (STDMETHODCALLTYPE* RegisterDatagramSocketAsync2)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This,
        __x_ABI_CWindows_CNetworking_CSockets_CIDatagramSocket* socket,
        __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdRegistrationResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl;

    interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This,
        HSTRING dnssdServiceInstanceName,
        __x_ABI_CWindows_CNetworking_CIHostName* hostName,
        UINT16 port,
        __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** result);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl;

    interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceInstance* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CServiceDiscovery__CDnssd__CDnssdServiceWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This,
        enum __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus* status);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl;

    interface __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher_INTERFACE_DEFINED__) */
    
