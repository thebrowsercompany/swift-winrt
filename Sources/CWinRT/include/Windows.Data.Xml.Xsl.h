// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Data.Xml.Dom.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor;

#endif // ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2 __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2;

#endif // ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory;

#endif // ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__

#if !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TransformToString)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* inputNode,
        HSTRING* output);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl;

    interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TransformToDocument)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* inputNode,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** output);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl;

    interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* document,
        __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessor** xsltProcessor);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl;

    interface __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory_INTERFACE_DEFINED__) */
    
