// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Appointments.h"
#include "Windows.ApplicationModel.Email.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2 __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo;

#endif // ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        HSTRING key,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        UINT32 index,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetailsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        UINT32 index,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState;

typedef enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState;

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_None = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Phone = 0x1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Email = 0x2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Reminder = 0x4,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Alarm = 0x8,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Toast = 0x10,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_AppUninstalled = 0x20,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Dnd = 0x40,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_DrivingMode = 0x80,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_BatterySaver = 0x100,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_Media = 0x200,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_CortanaTile = 0x400,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_ToastCleared = 0x800,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_CalendarChanged = 0x1000,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_VolumeChanged = 0x2000,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType_EmailReadStatusChanged = 0x4000,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_LostEvents = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_AppointmentAdded = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_AppointmentChanged = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_AppointmentDeleted = 3,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_CalendarAdded = 4,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_CalendarChanged = 5,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent_CalendarDeleted = 6,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint_Default = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint_Speaker = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint_Handsfree = 2,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection_Incoming = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection_Outgoing = 1,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState_Unknown = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState_Ringing = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState_Talking = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState_Held = 3,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState_Ended = 4,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport_Cellular = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport_Voip = 1,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState_Disconnected = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState_Home = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState_Roaming = 2,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType_AudioOnly = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType_AudioVideo = 1,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType_NewCall = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType_CallChanged = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType_LineChanged = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType_PhoneCallAudioEndpointChanged = 3,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType_PhoneMuteChanged = 4,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_None = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Play = 0x1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Pause = 0x2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Stop = 0x4,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Record = 0x8,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_FastForward = 0x10,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Rewind = 0x20,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Next = 0x40,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_Previous = 0x80,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_ChannelUp = 0x100,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability_ChannelDown = 0x200,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Play = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Pause = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Stop = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Record = 3,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_FastForward = 4,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Rewind = 5,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Next = 6,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_Previous = 7,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_ChannelUp = 8,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand_ChannelDown = 9,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus_None = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus_TrackChanged = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus_Stopped = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus_Playing = 3,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus_Paused = 4,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState_Active = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState_Snoozed = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState_Dismissed = 2,
};

enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState
    {
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState_RingerOffVibrateOff = 0,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState_RingerOffVibrateOn = 1,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState_RingerOnVibrateOff = 2,
    __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState_RingerOnVibrateOn = 3,
};

#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RegisterAccessoryApp)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        HSTRING* triggerId);
    HRESULT (STDMETHODCALLTYPE* GetNextTriggerDetails)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails** pDetails);
    HRESULT (STDMETHODCALLTYPE* ProcessTriggerDetails)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* pDetails);
    HRESULT (STDMETHODCALLTYPE* get_PhoneLineDetails)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CPhoneLineDetails** ppvalue);
    HRESULT (STDMETHODCALLTYPE* GetPhoneLineDetails)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID phoneLine,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails** ppdetails);
    HRESULT (STDMETHODCALLTYPE* AcceptPhoneCall)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId);
    HRESULT (STDMETHODCALLTYPE* AcceptPhoneCallOnEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint endPoint);
    HRESULT (STDMETHODCALLTYPE* AcceptPhoneCallWithVideo)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId);
    HRESULT (STDMETHODCALLTYPE* AcceptPhoneCallWithVideoOnAudioEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint endPoint);
    HRESULT (STDMETHODCALLTYPE* RejectPhoneCall)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId);
    HRESULT (STDMETHODCALLTYPE* RejectPhoneCallWithText)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId,
        UINT32 textResponseID);
    HRESULT (STDMETHODCALLTYPE* MakePhoneCall)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID phoneLine,
        HSTRING phoneNumber);
    HRESULT (STDMETHODCALLTYPE* MakePhoneCallOnAudioEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID phoneLine,
        HSTRING phoneNumber,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint endPoint);
    HRESULT (STDMETHODCALLTYPE* MakePhoneCallWithVideo)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID phoneLine,
        HSTRING phoneNumber);
    HRESULT (STDMETHODCALLTYPE* MakePhoneCallWithVideoOnAudioEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID phoneLine,
        HSTRING phoneNumber,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint endPoint);
    HRESULT (STDMETHODCALLTYPE* SwapPhoneCalls)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallIdToHold,
        UINT32 phoneCallIdOnHold);
    HRESULT (STDMETHODCALLTYPE* HoldPhoneCall)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId,
        boolean holdCall);
    HRESULT (STDMETHODCALLTYPE* EndPhoneCall)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        UINT32 phoneCallId);
    HRESULT (STDMETHODCALLTYPE* put_PhoneMute)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneMute)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PhoneCallAudioEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneCallAudioEndpoint)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallAudioEndpoint* value);
    HRESULT (STDMETHODCALLTYPE* SnoozeAlarm)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID alarmId);
    HRESULT (STDMETHODCALLTYPE* SnoozeAlarmForSpecifiedTime)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID alarmId,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan);
    HRESULT (STDMETHODCALLTYPE* DismissAlarm)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID alarmId);
    HRESULT (STDMETHODCALLTYPE* SnoozeReminder)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID reminderId);
    HRESULT (STDMETHODCALLTYPE* SnoozeReminderForSpecifiedTime)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID reminderId,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan);
    HRESULT (STDMETHODCALLTYPE* DismissReminder)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        GUID reminderId);
    HRESULT (STDMETHODCALLTYPE* GetMediaMetadata)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata** ppMetadata);
    HRESULT (STDMETHODCALLTYPE* get_MediaPlaybackCapabilities)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCapability* value);
    HRESULT (STDMETHODCALLTYPE* get_MediaPlaybackStatus)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus* value);
    HRESULT (STDMETHODCALLTYPE* PerformMediaPlaybackCommand)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackCommand command);
    HRESULT (STDMETHODCALLTYPE* get_DoNotDisturbEnabled)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DrivingModeEnabled)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_BatterySaverState)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetApps)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CPhone__CNotification__CManagement__CAppNotificationInfo** returnValue);
    HRESULT (STDMETHODCALLTYPE* EnableNotificationsForApplication)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        HSTRING appId);
    HRESULT (STDMETHODCALLTYPE* DisableNotificationsForApplication)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        HSTRING appId);
    HRESULT (STDMETHODCALLTYPE* IsNotificationEnabledForApplication)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        HSTRING appId,
        boolean* enabled);
    HRESULT (STDMETHODCALLTYPE* GetEnabledAccessoryNotificationTypes)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        INT32* enabledAccessoryNotificationTypes);
    HRESULT (STDMETHODCALLTYPE* EnableAccessoryNotificationTypes)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        INT32 accessoryNotificationTypes);
    HRESULT (STDMETHODCALLTYPE* DisableAllAccessoryNotificationTypes)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This);
    HRESULT (STDMETHODCALLTYPE* GetUserConsent)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        boolean* enabled);
    HRESULT (STDMETHODCALLTYPE* GetAppIcon)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager* This,
        HSTRING appId,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** returnValue);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManagerVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RingDevice)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This);
    HRESULT (STDMETHODCALLTYPE* get_SpeedDialList)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CSpeedDialEntry** ppvalue);
    HRESULT (STDMETHODCALLTYPE* ClearToast)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        HSTRING instanceId);
    HRESULT (STDMETHODCALLTYPE* get_IsPhonePinLocked)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        boolean* pinLocked);
    HRESULT (STDMETHODCALLTYPE* IncreaseVolume)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        INT32 step);
    HRESULT (STDMETHODCALLTYPE* DecreaseVolume)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        INT32 step);
    HRESULT (STDMETHODCALLTYPE* SetMute)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        boolean mute);
    HRESULT (STDMETHODCALLTYPE* SetRingerVibrate)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        boolean ringer,
        boolean vibrate);
    HRESULT (STDMETHODCALLTYPE* get_VolumeInfo)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo** ppVolume);
    HRESULT (STDMETHODCALLTYPE* GetAllEmailAccounts)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailAccountInfo** emailAccounts);
    HRESULT (STDMETHODCALLTYPE* GetFolders)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        HSTRING emailAccount,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CEmailFolderInfo** folders);
    HRESULT (STDMETHODCALLTYPE* EnableEmailNotificationEmailAccount)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        HSTRING emailAccount);
    HRESULT (STDMETHODCALLTYPE* DisableEmailNotificationEmailAccount)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        HSTRING emailAccount);
    HRESULT (STDMETHODCALLTYPE* EnableEmailNotificationFolderFilter)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        HSTRING emailAccount,
        __x_ABI_C__FIVectorView_1_HSTRING* folders);
    HRESULT (STDMETHODCALLTYPE* UpdateEmailReadStatus)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* messageEntryId,
        boolean isRead);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SnoozeAlarmByInstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
        HSTRING instanceId);
    HRESULT (STDMETHODCALLTYPE* DismissAlarmByInstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
        HSTRING instanceId);
    HRESULT (STDMETHODCALLTYPE* SnoozeReminderByInstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
        HSTRING instanceId);
    HRESULT (STDMETHODCALLTYPE* DismissReminderByInstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3* This,
        HSTRING instanceId);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryManager3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TimeCreated)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_AppDisplayName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AccessoryNotificationType)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CAccessoryNotificationType* value);
    HRESULT (STDMETHODCALLTYPE* get_StartedProcessing)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StartedProcessing)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAccessoryNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlarmId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ReminderState)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAlarmNotificationTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfoVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIAppNotificationInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryIdVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryIdVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryIdVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EventType)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CCalendarChangedEvent* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CICalendarChangedNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TileId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LargeContent1)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LargeContent2)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_EmphasizedText)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NonWrappedSmallContent1)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NonWrappedSmallContent2)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NonWrappedSmallContent3)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NonWrappedSmallContent4)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CICortanaTileNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsNotificationEnabled)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfoVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailAccountInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsNotificationEnabled)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfoVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailFolderInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AccountName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ParentFolderName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SenderName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SenderAddress)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_EmailMessage)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MessageEntryId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailNotificationTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AccountName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ParentFolderName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MessageEntryId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIBinaryId** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRead)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIEmailReadNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlaybackStatus)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPlaybackStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_MediaMetadata)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaControlsTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Artist)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Album)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Track)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadataVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIMediaMetadata_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PhoneLine)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_CallId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CallTransport)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallTransport* value);
    HRESULT (STDMETHODCALLTYPE* get_CallMediaType)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneMediaType* value);
    HRESULT (STDMETHODCALLTYPE* get_CallDirection)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallDirection* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneCallState* value);
    HRESULT (STDMETHODCALLTYPE* get_ConferenceCallId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_EndTime)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneNumber)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContactName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PresetTextResponses)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CPhone__CNotification__CManagement__CTextResponse** value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LineId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LineNumber)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultOutgoingLine)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_VoicemailCount)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RegistrationState)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneLineRegistrationState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MissedCallCount)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneLineDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PhoneNotificationType)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CPhoneNotificationType* value);
    HRESULT (STDMETHODCALLTYPE* get_CallDetails)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
        __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneCallDetails** value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneLineChangedId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails* This,
        GUID* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIPhoneNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReminderId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Details)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Appointment)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** value);
    HRESULT (STDMETHODCALLTYPE* get_ReminderState)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CReminderState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIReminderNotificationTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PhoneNumber)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NumberType)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContactName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntryVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CISpeedDialEntry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponseVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CITextResponse_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text1)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Text2)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Text3)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Text4)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SuppressPopup)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIToastNotificationTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemVolume)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CallVolume)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MediaVolume)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMuted)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVibrateEnabled)(__x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo* This,
        enum __x_ABI_CWindows_CPhone_CNotification_CManagement_CVibrateState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfoVtbl;

    interface __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo;
#endif /* !defined(____x_ABI_CWindows_CPhone_CNotification_CManagement_CIVolumeInfo_INTERFACE_DEFINED__) */
    
